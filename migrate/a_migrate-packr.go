// Code generated by github.com/gobuffalo/packr. DO NOT EDIT.

package migrate

import "github.com/gobuffalo/packr"

// You can use the "packr clean" command to clean up this,
// and any other packr generated files.
func init() {
	packr.PackJSONBytes("./sql", "20180103142001_initial_schema.sql", "\"\"")
	packr.PackJSONBytes("./sql", "20180805174141-tournaments.sql", "\"LyoKICogQ29weXJpZ2h0IDIwMTggVGhlIE5ha2FtYSBBdXRob3JzCiAqCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKICoKICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQogKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAogKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAogKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KICovCgotLSBOT1RFOiBUaGlzIG1pZ3JhdGlvbiBtYW51YWxseSBjb21taXRzIGluIHNlcGFyYXRlIHRyYW5zYWN0aW9ucyB0byBlbnN1cmUKLS0gdGhlIHNjaGVtYSB1cGRhdGVzIGFyZSBzZXF1ZW5jZWQgYmVjYXVzZSBjb2Nrcm9hY2hkYiBkb2VzIG5vdCBzdXBwb3J0Ci0tIGFkZGluZyBDSEVDSyBjb25zdHJhaW50cyB2aWEgIkFMVEVSIFRBQkxFIC4uLiBBREQgQ09MVU1OIiBzdGF0ZW1lbnRzLgoKLS0gK21pZ3JhdGUgVXAgbm90cmFuc2FjdGlvbgpCRUdJTjsKQUxURVIgVEFCTEUgbGVhZGVyYm9hcmQKICBBREQgQ09MVU1OIGNhdGVnb3J5ICAgICAgU01BTExJTlQgICAgIERFRkFVTFQgMCBOT1QgTlVMTCwKICBBREQgQ09MVU1OIGRlc2NyaXB0aW9uICAgVkFSQ0hBUigyNTUpIERFRkFVTFQgJycgTk9UIE5VTEwsCiAgQUREIENPTFVNTiBkdXJhdGlvbiAgICAgIElOVCAgICAgICAgICBERUZBVUxUIDAgTk9UIE5VTEwsIC0tIGluIHNlY29uZHMuCiAgQUREIENPTFVNTiBlbmRfdGltZSAgICAgIFRJTUVTVEFNUFRaICBERUZBVUxUICcxOTcwLTAxLTAxIDAwOjAwOjAwIFVUQycgTk9UIE5VTEwsCiAgQUREIENPTFVNTiBqb2luX3JlcXVpcmVkIEJPT0xFQU4gICAgICBERUZBVUxUIEZBTFNFIE5PVCBOVUxMLAogIEFERCBDT0xVTU4gbWF4X3NpemUgICAgICBJTlQgICAgICAgICAgREVGQVVMVCAxMDAwMDAwMDAgTk9UIE5VTEwsCiAgQUREIENPTFVNTiBtYXhfbnVtX3Njb3JlIElOVCAgICAgICAgICBERUZBVUxUIDEwMDAwMDAgTk9UIE5VTEwsIC0tIG1heCBhbGxvd2VkIHNjb3JlIGF0dGVtcHRzLgogIEFERCBDT0xVTU4gdGl0bGUgICAgICAgICBWQVJDSEFSKDI1NSkgREVGQVVMVCAnJyBOT1QgTlVMTCwKICBBREQgQ09MVU1OIHNpemUgICAgICAgICAgSU5UICAgICAgICAgIERFRkFVTFQgMCBOT1QgTlVMTCwKICBBREQgQ09MVU1OIHN0YXJ0X3RpbWUgICAgVElNRVNUQU1QVFogIERFRkFVTFQgbm93KCkgTk9UIE5VTEw7CgpBTFRFUiBUQUJMRSBsZWFkZXJib2FyZF9yZWNvcmQKICBBREQgQ09MVU1OIG1heF9udW1fc2NvcmUgSU5UIERFRkFVTFQgMTAwMDAwMCBOT1QgTlVMTDsKQ09NTUlUOwoKQkVHSU47CkFMVEVSIFRBQkxFIGxlYWRlcmJvYXJkCiAgQUREIENPTlNUUkFJTlQgY2hlY2tfY2F0ZWdvcnkgQ0hFQ0sgKGNhdGVnb3J5ID49IDApLAogIEFERCBDT05TVFJBSU5UIGNoZWNrX2R1cmF0aW9uIENIRUNLIChkdXJhdGlvbiA+PSAwKSwKICBBREQgQ09OU1RSQUlOVCBjaGVja19tYXhfc2l6ZSBDSEVDSyAobWF4X3NpemUgPiAwKSwKICBBREQgQ09OU1RSQUlOVCBjaGVja19tYXhfbnVtX3Njb3JlIENIRUNLIChtYXhfbnVtX3Njb3JlID4gMCk7CgpDUkVBVEUgSU5ERVggSUYgTk9UIEVYSVNUUyBkdXJhdGlvbl9zdGFydF90aW1lX2VuZF90aW1lX2NhdGVnb3J5X2lkeCBPTiBsZWFkZXJib2FyZCAoZHVyYXRpb24sIHN0YXJ0X3RpbWUsIGVuZF90aW1lIERFU0MsIGNhdGVnb3J5KTsKCkNSRUFURSBJTkRFWCBJRiBOT1QgRVhJU1RTIG93bmVyX2lkX2V4cGlyeV90aW1lX2xlYWRlcmJvYXJkX2lkX2lkeCBPTiBsZWFkZXJib2FyZF9yZWNvcmQgKG93bmVyX2lkLCBleHBpcnlfdGltZSwgbGVhZGVyYm9hcmRfaWQpOwoKQUxURVIgVEFCTEUgbGVhZGVyYm9hcmRfcmVjb3JkCiAgQUREIENPTlNUUkFJTlQgY2hlY2tfbWF4X251bV9zY29yZSBDSEVDSyAobWF4X251bV9zY29yZSA+IDApOwpDT01NSVQ7CgpBTFRFUiBUQUJMRSBsZWFkZXJib2FyZAogIFZBTElEQVRFIENPTlNUUkFJTlQgY2hlY2tfY2F0ZWdvcnksCiAgVkFMSURBVEUgQ09OU1RSQUlOVCBjaGVja19kdXJhdGlvbiwKICBWQUxJREFURSBDT05TVFJBSU5UIGNoZWNrX21heF9zaXplLAogIFZBTElEQVRFIENPTlNUUkFJTlQgY2hlY2tfbWF4X251bV9zY29yZTsKCkFMVEVSIFRBQkxFIGxlYWRlcmJvYXJkX3JlY29yZAogIFZBTElEQVRFIENPTlNUUkFJTlQgY2hlY2tfbWF4X251bV9zY29yZTsKCi0tICttaWdyYXRlIERvd24KQUxURVIgVEFCTEUgSUYgRVhJU1RTIGxlYWRlcmJvYXJkCiAgRFJPUCBDT0xVTU4gSUYgRVhJU1RTIGNhdGVnb3J5LAogIERST1AgQ09MVU1OIElGIEVYSVNUUyBkZXNjcmlwdGlvbiwKICBEUk9QIENPTFVNTiBJRiBFWElTVFMgZHVyYXRpb24sCiAgRFJPUCBDT0xVTU4gSUYgRVhJU1RTIGVuZF90aW1lLAogIERST1AgQ09MVU1OIElGIEVYSVNUUyBqb2luX3JlcXVpcmVkLAogIERST1AgQ09MVU1OIElGIEVYSVNUUyBtYXhfc2l6ZSwKICBEUk9QIENPTFVNTiBJRiBFWElTVFMgbWF4X251bV9zY29yZSwKICBEUk9QIENPTFVNTiBJRiBFWElTVFMgdGl0bGUsCiAgRFJPUCBDT0xVTU4gSUYgRVhJU1RTIHNpemUsCiAgRFJPUCBDT0xVTU4gSUYgRVhJU1RTIHN0YXJ0X3RpbWU7CgpEUk9QIElOREVYIElGIEVYSVNUUyBvd25lcl9pZF9leHBpcnlfdGltZV9sZWFkZXJib2FyZF9pZF9pZHg7CgpBTFRFUiBUQUJMRSBJRiBFWElTVFMgbGVhZGVyYm9hcmRfcmVjb3JkCiAgRFJPUCBDT0xVTU4gSUYgRVhJU1RTIG1heF9udW1fc2NvcmU7Cg==\"")
	packr.PackJSONBytes("./sql", "20190621000000_achievements.sql", "\"LyoKICogQ29weXJpZ2h0IDIwMTggVGhlIE5ha2FtYSBBdXRob3JzCiAqCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOwogKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdAogKgogKiBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKICoKICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQogKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAogKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAogKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KICovCgotLSArbWlncmF0ZSBVcApDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBhY2hpZXZlbWVudHMgKAogICAgaWQgdXVpZCBOT1QgTlVMTCwKICAgIG5hbWUgdGV4dCBOT1QgTlVMTCwKICAgIGRlc2NyaXB0aW9uIHRleHQgTlVMTCwKICAgIGluaXRpYWxfc3RhdGUgaW50OCBOT1QgTlVMTCwKICAgICJ0eXBlIiBpbnQ4IE5PVCBOVUxMLAogICAgcmVwZWF0YWJpbGl0eSBpbnQ4IE5PVCBOVUxMLAogICAgdGFyZ2V0X3ZhbHVlIGludDggTlVMTCwKICAgIGxvY2tlZF9pbWFnZV91cmwgdGV4dCBOVUxMLAogICAgdW5sb2NrZWRfaW1hZ2VfdXJsIHRleHQgTlVMTCwKICAgIGF1eGlsaWFyeV9kYXRhIGpzb25iIE5VTEwsCiAgICBDT05TVFJBSU5UIGFjaGlldmVtZW50c19wayBQUklNQVJZIEtFWSAoaWQpCik7CgpDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBhY2hpZXZlbWVudF9wcm9ncmVzcyAoCiAgICBhY2hpZXZlbWVudF9pZCB1dWlkIE5PVCBOVUxMLAogICAgdXNlcl9pZCB1dWlkIE5PVCBOVUxMLAogICAgYWNoaWV2ZW1lbnRfc3RhdGUgaW50OCBOT1QgTlVMTCwKICAgIGF3YXJkZWRfYXQgdGltZXN0YW1wdHogTlVMTCwKICAgIGF1eGlsaWFyeV9kYXRhIGpzb25iIE5VTEwsCiAgICBDT05TVFJBSU5UIGFjaGlldmVtZW50X2lkX2ZrIEZPUkVJR04gS0VZIChhY2hpZXZlbWVudF9pZCkgUkVGRVJFTkNFUyBhY2hpZXZlbWVudHMoaWQpLAogICAgQ09OU1RSQUlOVCBhY2hpZXZlbWVudF9vd25lcl9mayBGT1JFSUdOIEtFWSAodXNlcl9pZCkgUkVGRVJFTkNFUyAidXNlcnMiKGlkKQopOwoKLS0gK21pZ3JhdGUgRG93bgpEUk9QIFRBQkxFIElGIEVYSVNUUyBhY2hpZXZlbWVudHM7CkRST1AgVEFCTEUgSUYgRVhJU1RTIGFjaGlldmVtZW50X3Byb2dyZXNzOw==\"")
}
