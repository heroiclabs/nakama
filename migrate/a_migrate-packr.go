// Code generated by github.com/gobuffalo/packr. DO NOT EDIT.

package migrate

import "github.com/gobuffalo/packr"

// You can use the "packr clean" command to clean up this,
// and any other packr generated files.
func init() {
	packr.PackJSONBytes("./sql", "20180103142001_initial_schema.sql", "\"\"")
	packr.PackJSONBytes("./sql", "20180805174141-tournaments.sql", "\"LyoNCiAqIENvcHlyaWdodCAyMDE4IFRoZSBOYWthbWEgQXV0aG9ycw0KICoNCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOw0KICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLg0KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0DQogKg0KICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wDQogKg0KICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQ0KICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywNCiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLg0KICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZA0KICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuDQogKi8NCg0KLS0gTk9URTogVGhpcyBtaWdyYXRpb24gbWFudWFsbHkgY29tbWl0cyBpbiBzZXBhcmF0ZSB0cmFuc2FjdGlvbnMgdG8gZW5zdXJlDQotLSB0aGUgc2NoZW1hIHVwZGF0ZXMgYXJlIHNlcXVlbmNlZCBiZWNhdXNlIGNvY2tyb2FjaGRiIGRvZXMgbm90IHN1cHBvcnQNCi0tIGFkZGluZyBDSEVDSyBjb25zdHJhaW50cyB2aWEgIkFMVEVSIFRBQkxFIC4uLiBBREQgQ09MVU1OIiBzdGF0ZW1lbnRzLg0KDQotLSArbWlncmF0ZSBVcCBub3RyYW5zYWN0aW9uDQpCRUdJTjsNCkFMVEVSIFRBQkxFIGxlYWRlcmJvYXJkDQogIEFERCBDT0xVTU4gY2F0ZWdvcnkgICAgICBTTUFMTElOVCAgICAgREVGQVVMVCAwIE5PVCBOVUxMLA0KICBBREQgQ09MVU1OIGRlc2NyaXB0aW9uICAgVkFSQ0hBUigyNTUpIERFRkFVTFQgJycgTk9UIE5VTEwsDQogIEFERCBDT0xVTU4gZHVyYXRpb24gICAgICBJTlQgICAgICAgICAgREVGQVVMVCAwIE5PVCBOVUxMLCAtLSBpbiBzZWNvbmRzLg0KICBBREQgQ09MVU1OIGVuZF90aW1lICAgICAgVElNRVNUQU1QVFogIERFRkFVTFQgJzE5NzAtMDEtMDEgMDA6MDA6MDAgVVRDJyBOT1QgTlVMTCwNCiAgQUREIENPTFVNTiBqb2luX3JlcXVpcmVkIEJPT0xFQU4gICAgICBERUZBVUxUIEZBTFNFIE5PVCBOVUxMLA0KICBBREQgQ09MVU1OIG1heF9zaXplICAgICAgSU5UICAgICAgICAgIERFRkFVTFQgMTAwMDAwMDAwIE5PVCBOVUxMLA0KICBBREQgQ09MVU1OIG1heF9udW1fc2NvcmUgSU5UICAgICAgICAgIERFRkFVTFQgMTAwMDAwMCBOT1QgTlVMTCwgLS0gbWF4IGFsbG93ZWQgc2NvcmUgYXR0ZW1wdHMuDQogIEFERCBDT0xVTU4gdGl0bGUgICAgICAgICBWQVJDSEFSKDI1NSkgREVGQVVMVCAnJyBOT1QgTlVMTCwNCiAgQUREIENPTFVNTiBzaXplICAgICAgICAgIElOVCAgICAgICAgICBERUZBVUxUIDAgTk9UIE5VTEwsDQogIEFERCBDT0xVTU4gc3RhcnRfdGltZSAgICBUSU1FU1RBTVBUWiAgREVGQVVMVCBub3coKSBOT1QgTlVMTDsNCg0KQUxURVIgVEFCTEUgbGVhZGVyYm9hcmRfcmVjb3JkDQogIEFERCBDT0xVTU4gbWF4X251bV9zY29yZSBJTlQgREVGQVVMVCAxMDAwMDAwIE5PVCBOVUxMOw0KQ09NTUlUOw0KDQpCRUdJTjsNCkFMVEVSIFRBQkxFIGxlYWRlcmJvYXJkDQogIEFERCBDT05TVFJBSU5UIGNoZWNrX2NhdGVnb3J5IENIRUNLIChjYXRlZ29yeSA+PSAwKSwNCiAgQUREIENPTlNUUkFJTlQgY2hlY2tfZHVyYXRpb24gQ0hFQ0sgKGR1cmF0aW9uID49IDApLA0KICBBREQgQ09OU1RSQUlOVCBjaGVja19tYXhfc2l6ZSBDSEVDSyAobWF4X3NpemUgPiAwKSwNCiAgQUREIENPTlNUUkFJTlQgY2hlY2tfbWF4X251bV9zY29yZSBDSEVDSyAobWF4X251bV9zY29yZSA+IDApOw0KDQpDUkVBVEUgSU5ERVggSUYgTk9UIEVYSVNUUyBkdXJhdGlvbl9zdGFydF90aW1lX2VuZF90aW1lX2NhdGVnb3J5X2lkeCBPTiBsZWFkZXJib2FyZCAoZHVyYXRpb24sIHN0YXJ0X3RpbWUsIGVuZF90aW1lIERFU0MsIGNhdGVnb3J5KTsNCg0KQ1JFQVRFIElOREVYIElGIE5PVCBFWElTVFMgb3duZXJfaWRfZXhwaXJ5X3RpbWVfbGVhZGVyYm9hcmRfaWRfaWR4IE9OIGxlYWRlcmJvYXJkX3JlY29yZCAob3duZXJfaWQsIGV4cGlyeV90aW1lLCBsZWFkZXJib2FyZF9pZCk7DQoNCkFMVEVSIFRBQkxFIGxlYWRlcmJvYXJkX3JlY29yZA0KICBBREQgQ09OU1RSQUlOVCBjaGVja19tYXhfbnVtX3Njb3JlIENIRUNLIChtYXhfbnVtX3Njb3JlID4gMCk7DQpDT01NSVQ7DQoNCkFMVEVSIFRBQkxFIGxlYWRlcmJvYXJkDQogIFZBTElEQVRFIENPTlNUUkFJTlQgY2hlY2tfY2F0ZWdvcnksDQogIFZBTElEQVRFIENPTlNUUkFJTlQgY2hlY2tfZHVyYXRpb24sDQogIFZBTElEQVRFIENPTlNUUkFJTlQgY2hlY2tfbWF4X3NpemUsDQogIFZBTElEQVRFIENPTlNUUkFJTlQgY2hlY2tfbWF4X251bV9zY29yZTsNCg0KQUxURVIgVEFCTEUgbGVhZGVyYm9hcmRfcmVjb3JkDQogIFZBTElEQVRFIENPTlNUUkFJTlQgY2hlY2tfbWF4X251bV9zY29yZTsNCg0KLS0gK21pZ3JhdGUgRG93bg0KQUxURVIgVEFCTEUgSUYgRVhJU1RTIGxlYWRlcmJvYXJkDQogIERST1AgQ09MVU1OIElGIEVYSVNUUyBjYXRlZ29yeSwNCiAgRFJPUCBDT0xVTU4gSUYgRVhJU1RTIGRlc2NyaXB0aW9uLA0KICBEUk9QIENPTFVNTiBJRiBFWElTVFMgZHVyYXRpb24sDQogIERST1AgQ09MVU1OIElGIEVYSVNUUyBlbmRfdGltZSwNCiAgRFJPUCBDT0xVTU4gSUYgRVhJU1RTIGpvaW5fcmVxdWlyZWQsDQogIERST1AgQ09MVU1OIElGIEVYSVNUUyBtYXhfc2l6ZSwNCiAgRFJPUCBDT0xVTU4gSUYgRVhJU1RTIG1heF9udW1fc2NvcmUsDQogIERST1AgQ09MVU1OIElGIEVYSVNUUyB0aXRsZSwNCiAgRFJPUCBDT0xVTU4gSUYgRVhJU1RTIHNpemUsDQogIERST1AgQ09MVU1OIElGIEVYSVNUUyBzdGFydF90aW1lOw0KDQpEUk9QIElOREVYIElGIEVYSVNUUyBvd25lcl9pZF9leHBpcnlfdGltZV9sZWFkZXJib2FyZF9pZF9pZHg7DQoNCkFMVEVSIFRBQkxFIElGIEVYSVNUUyBsZWFkZXJib2FyZF9yZWNvcmQNCiAgRFJPUCBDT0xVTU4gSUYgRVhJU1RTIG1heF9udW1fc2NvcmU7DQo=\"")
	packr.PackJSONBytes("./sql", "20190621000000_achievements.sql", "\"LyoNCiAqIENvcHlyaWdodCAyMDE4IFRoZSBOYWthbWEgQXV0aG9ycw0KICoNCiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOw0KICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLg0KICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0DQogKg0KICogaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wDQogKg0KICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQ0KICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywNCiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLg0KICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZA0KICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuDQogKi8NCg0KLS0gK21pZ3JhdGUgVXANCkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIGFjaGlldmVtZW50cyAoDQogICAgaWQgdXVpZCBOT1QgTlVMTCwNCiAgICBuYW1lIHRleHQgTk9UIE5VTEwsDQogICAgZGVzY3JpcHRpb24gdGV4dCBOVUxMLA0KICAgIGluaXRpYWxfc3RhdGUgaW50OCBOT1QgTlVMTCwNCiAgICAidHlwZSIgaW50OCBOT1QgTlVMTCwNCiAgICByZXBlYXRhYmlsaXR5IGludDggTk9UIE5VTEwsDQogICAgdGFyZ2V0X3ZhbHVlIGludDggTlVMTCwNCiAgICBsb2NrZWRfaW1hZ2VfdXJsIHRleHQgTlVMTCwNCiAgICB1bmxvY2tlZF9pbWFnZV91cmwgdGV4dCBOVUxMLA0KICAgIGF1eGlsaWFyeV9kYXRhIGpzb25iIE5VTEwsDQogICAgQ09OU1RSQUlOVCBhY2hpZXZlbWVudHNfcGsgUFJJTUFSWSBLRVkgKGlkKQ0KKTsNCg0KQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgYWNoaWV2ZW1lbnRfcHJvZ3Jlc3MgKA0KICAgIGFjaGlldmVtZW50X2lkIHV1aWQgTk9UIE5VTEwsDQogICAgdXNlcl9pZCB1dWlkIE5PVCBOVUxMLA0KICAgIGFjaGlldmVtZW50X3N0YXRlIGludDggTk9UIE5VTEwsDQogICAgcHJvZ3Jlc3MgaW50OCBOVUxMLA0KICAgIGF3YXJkZWRfYXQgdGltZXN0YW1wdHogTlVMTCwNCiAgICBhdXhpbGlhcnlfZGF0YSBqc29uYiBOVUxMLA0KICAgIENPTlNUUkFJTlQgYWNoaWV2ZW1lbnRfaWRfZmsgRk9SRUlHTiBLRVkgKGFjaGlldmVtZW50X2lkKSBSRUZFUkVOQ0VTIGFjaGlldmVtZW50cyhpZCksDQogICAgQ09OU1RSQUlOVCBhY2hpZXZlbWVudF9vd25lcl9mayBGT1JFSUdOIEtFWSAodXNlcl9pZCkgUkVGRVJFTkNFUyAidXNlcnMiKGlkKQ0KKTsNCg0KLS0gK21pZ3JhdGUgRG93bg0KRFJPUCBUQUJMRSBJRiBFWElTVFMgYWNoaWV2ZW1lbnRzOw0KRFJPUCBUQUJMRSBJRiBFWElTVFMgYWNoaWV2ZW1lbnRfcHJvZ3Jlc3M7\"")
}
