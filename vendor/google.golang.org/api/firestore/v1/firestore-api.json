{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        },
        "https://www.googleapis.com/auth/datastore": {
          "description": "View and manage your Google Cloud Datastore data"
        }
      }
    }
  },
  "basePath": "",
  "baseUrl": "https://firestore.googleapis.com/",
  "batchPath": "batch",
  "canonicalName": "Firestore",
  "description": "",
  "discoveryVersion": "v1",
  "documentationLink": "https://cloud.google.com/firestore",
  "fullyEncodeReservedExpansion": true,
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "id": "firestore:v1",
  "kind": "discovery#restDescription",
  "name": "firestore",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "parameters": {
    "$.xgafv": {
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "default": "json",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    }
  },
  "protocol": "rest",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "get": {
              "description": "Gets information about a location.",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "id": "firestore.projects.locations.get",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v1/{+name}",
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/datastore"
              ]
            },
            "list": {
              "description": "Lists information about the supported locations for this service.",
              "flatPath": "v1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "id": "firestore.projects.locations.list",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "filter": {
                  "description": "The standard list filter.",
                  "location": "query",
                  "type": "string"
                },
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "type": "string"
                },
                "pageSize": {
                  "description": "The standard list page size.",
                  "format": "int32",
                  "location": "query",
                  "type": "integer"
                },
                "pageToken": {
                  "description": "The standard list page token.",
                  "location": "query",
                  "type": "string"
                }
              },
              "path": "v1/{+name}/locations",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/datastore"
              ]
            }
          }
        }
      }
    }
  },
  "revision": "20180711",
  "rootUrl": "https://firestore.googleapis.com/",
  "schemas": {
    "GoogleFirestoreAdminV1beta1ExportDocumentsMetadata": {
      "description": "Metadata for ExportDocuments operations.",
      "id": "GoogleFirestoreAdminV1beta1ExportDocumentsMetadata",
      "properties": {
        "collectionIds": {
          "description": "Which collection ids are being exported.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "endTime": {
          "description": "The time the operation ended, either successfully or otherwise. Unset if\nthe operation is still active.",
          "format": "google-datetime",
          "type": "string"
        },
        "operationState": {
          "description": "The state of the export operation.",
          "enum": [
            "STATE_UNSPECIFIED",
            "INITIALIZING",
            "PROCESSING",
            "CANCELLING",
            "FINALIZING",
            "SUCCESSFUL",
            "FAILED",
            "CANCELLED"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Request is being prepared for processing.",
            "Request is actively being processed.",
            "Request is in the process of being cancelled after user called\ngoogle.longrunning.Operations.CancelOperation on the operation.",
            "Request has been processed and is in its finalization stage.",
            "Request has completed successfully.",
            "Request has finished being processed, but encountered an error.",
            "Request has finished being cancelled after user called\ngoogle.longrunning.Operations.CancelOperation."
          ],
          "type": "string"
        },
        "outputUriPrefix": {
          "description": "Where the entities are being exported to.",
          "type": "string"
        },
        "progressBytes": {
          "$ref": "GoogleFirestoreAdminV1beta1Progress",
          "description": "An estimate of the number of bytes processed."
        },
        "progressDocuments": {
          "$ref": "GoogleFirestoreAdminV1beta1Progress",
          "description": "An estimate of the number of documents processed."
        },
        "startTime": {
          "description": "The time that work began on the operation.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleFirestoreAdminV1beta1ExportDocumentsResponse": {
      "description": "Returned in the google.longrunning.Operation response field.",
      "id": "GoogleFirestoreAdminV1beta1ExportDocumentsResponse",
      "properties": {
        "outputUriPrefix": {
          "description": "Location of the output files. This can be used to begin an import\ninto Cloud Firestore (this project or another project) after the operation\ncompletes successfully.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleFirestoreAdminV1beta1ImportDocumentsMetadata": {
      "description": "Metadata for ImportDocuments operations.",
      "id": "GoogleFirestoreAdminV1beta1ImportDocumentsMetadata",
      "properties": {
        "collectionIds": {
          "description": "Which collection ids are being imported.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "endTime": {
          "description": "The time the operation ended, either successfully or otherwise. Unset if\nthe operation is still active.",
          "format": "google-datetime",
          "type": "string"
        },
        "inputUriPrefix": {
          "description": "The location of the documents being imported.",
          "type": "string"
        },
        "operationState": {
          "description": "The state of the import operation.",
          "enum": [
            "STATE_UNSPECIFIED",
            "INITIALIZING",
            "PROCESSING",
            "CANCELLING",
            "FINALIZING",
            "SUCCESSFUL",
            "FAILED",
            "CANCELLED"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Request is being prepared for processing.",
            "Request is actively being processed.",
            "Request is in the process of being cancelled after user called\ngoogle.longrunning.Operations.CancelOperation on the operation.",
            "Request has been processed and is in its finalization stage.",
            "Request has completed successfully.",
            "Request has finished being processed, but encountered an error.",
            "Request has finished being cancelled after user called\ngoogle.longrunning.Operations.CancelOperation."
          ],
          "type": "string"
        },
        "progressBytes": {
          "$ref": "GoogleFirestoreAdminV1beta1Progress",
          "description": "An estimate of the number of bytes processed."
        },
        "progressDocuments": {
          "$ref": "GoogleFirestoreAdminV1beta1Progress",
          "description": "An estimate of the number of documents processed."
        },
        "startTime": {
          "description": "The time that work began on the operation.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleFirestoreAdminV1beta1IndexOperationMetadata": {
      "description": "Metadata for index operations. This metadata populates\nthe metadata field of google.longrunning.Operation.",
      "id": "GoogleFirestoreAdminV1beta1IndexOperationMetadata",
      "properties": {
        "cancelled": {
          "description": "True if the [google.longrunning.Operation] was cancelled. If the\ncancellation is in progress, cancelled will be true but\ngoogle.longrunning.Operation.done will be false.",
          "type": "boolean"
        },
        "documentProgress": {
          "$ref": "GoogleFirestoreAdminV1beta1Progress",
          "description": "Progress of the existing operation, measured in number of documents."
        },
        "endTime": {
          "description": "The time the operation ended, either successfully or otherwise. Unset if\nthe operation is still active.",
          "format": "google-datetime",
          "type": "string"
        },
        "index": {
          "description": "The index resource that this operation is acting on. For example:\n`projects/{project_id}/databases/{database_id}/indexes/{index_id}`",
          "type": "string"
        },
        "operationType": {
          "description": "The type of index operation.",
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "CREATING_INDEX"
          ],
          "enumDescriptions": [
            "Unspecified. Never set by server.",
            "The operation is creating the index. Initiated by a `CreateIndex` call."
          ],
          "type": "string"
        },
        "startTime": {
          "description": "The time that work began on the operation.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleFirestoreAdminV1beta1LocationMetadata": {
      "description": "The metadata message for google.cloud.location.Location.metadata.",
      "id": "GoogleFirestoreAdminV1beta1LocationMetadata",
      "properties": {},
      "type": "object"
    },
    "GoogleFirestoreAdminV1beta1Progress": {
      "description": "Measures the progress of a particular metric.",
      "id": "GoogleFirestoreAdminV1beta1Progress",
      "properties": {
        "workCompleted": {
          "description": "An estimate of how much work has been completed. Note that this may be\ngreater than `work_estimated`.",
          "format": "int64",
          "type": "string"
        },
        "workEstimated": {
          "description": "An estimate of how much work needs to be performed. Zero if the\nwork estimate is unavailable. May change as work progresses.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleFirestoreAdminV1beta2FieldOperationMetadata": {
      "description": "Metadata for google.longrunning.Operation results from\nFirestoreAdmin.UpdateField.",
      "id": "GoogleFirestoreAdminV1beta2FieldOperationMetadata",
      "properties": {
        "bytesProgress": {
          "$ref": "GoogleFirestoreAdminV1beta2Progress",
          "description": "The progress, in bytes, of this operation."
        },
        "documentProgress": {
          "$ref": "GoogleFirestoreAdminV1beta2Progress",
          "description": "The progress, in documents, of this operation."
        },
        "endTime": {
          "description": "The time this operation completed. Will be unset if operation still in\nprogress.",
          "format": "google-datetime",
          "type": "string"
        },
        "field": {
          "description": "The field resource that this operation is acting on. For example:\n`projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/fields/{field_path}`",
          "type": "string"
        },
        "indexConfigDeltas": {
          "description": "A list of IndexConfigDelta, which describe the intent of this\noperation.",
          "items": {
            "$ref": "GoogleFirestoreAdminV1beta2IndexConfigDelta"
          },
          "type": "array"
        },
        "startTime": {
          "description": "The time this operation started.",
          "format": "google-datetime",
          "type": "string"
        },
        "state": {
          "description": "The state of the operation.",
          "enum": [
            "OPERATION_STATE_UNSPECIFIED",
            "INITIALIZING",
            "PROCESSING",
            "CANCELLING",
            "FINALIZING",
            "SUCCESSFUL",
            "FAILED",
            "CANCELLED"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Request is being prepared for processing.",
            "Request is actively being processed.",
            "Request is in the process of being cancelled after user called\ngoogle.longrunning.Operations.CancelOperation on the operation.",
            "Request has been processed and is in its finalization stage.",
            "Request has completed successfully.",
            "Request has finished being processed, but encountered an error.",
            "Request has finished being cancelled after user called\ngoogle.longrunning.Operations.CancelOperation."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleFirestoreAdminV1beta2Index": {
      "description": "Cloud Firestore indexes enable simple and complex queries against\ndocuments in a database.",
      "id": "GoogleFirestoreAdminV1beta2Index",
      "properties": {
        "fields": {
          "description": "The fields supported by this index.\n\nFor composite indexes, this is always 2 or more fields.\nThe last field entry is always for the field path `__name__`. If, on\ncreation, `__name__` was not specified as the last field, it will be added\nautomatically with the same direction as that of the last field defined. If\nthe final field in a composite index is not directional, the `__name__`\nwill be ordered ASCENDING (unless explicitly specified).\n\nFor single field indexes, this will always be exactly one entry with a\nfield path equal to the field path of the associated field.",
          "items": {
            "$ref": "GoogleFirestoreAdminV1beta2IndexField"
          },
          "type": "array"
        },
        "name": {
          "description": "Output only.\nA server defined name for this index.\nThe form of this name for composite indexes will be:\n`projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{composite_index_id}`\nFor single field indexes, this field will be empty.",
          "type": "string"
        },
        "queryScope": {
          "description": "Indexes with a collection query scope specified allow queries\nagainst a collection that is the child of a specific document, specified at\nquery time, and that has the same collection id.\n\nIndexes with a collection group query scope specified allow queries against\nall collections descended from a specific document, specified at query\ntime, and that have the same collection id as this index.",
          "enum": [
            "QUERY_SCOPE_UNSPECIFIED",
            "COLLECTION"
          ],
          "enumDescriptions": [
            "The query scope is unspecified. Not a valid option.",
            "Indexes with a collection query scope specified allow queries\nagainst a collection that is the child of a specific document, specified\nat query time, and that has the collection id specified by the index."
          ],
          "type": "string"
        },
        "state": {
          "description": "Output only.\nThe serving state of the index.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "READY",
            "NEEDS_REPAIR"
          ],
          "enumDescriptions": [
            "The state is unspecified.",
            "The index is being created.\nThere is an active long-running operation for the index.\nThe index is updated when writing a document.\nSome index data may exist.",
            "The index is ready to be used.\nThe index is updated when writing a document.\nThe index is fully populated from all stored documents it applies to.",
            "The index was being created, but something went wrong.\nThere is no active long-running operation for the index,\nand the most recently finished long-running operation failed.\nThe index is not updated when writing a document.\nSome index data may exist.\nUse the google.longrunning.Operations API to determine why the operation\nthat last attempted to create this index failed, then re-create the\nindex."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleFirestoreAdminV1beta2IndexConfigDelta": {
      "description": "Information about an index configuration change.",
      "id": "GoogleFirestoreAdminV1beta2IndexConfigDelta",
      "properties": {
        "changeType": {
          "description": "Specifies how the index is changing.",
          "enum": [
            "CHANGE_TYPE_UNSPECIFIED",
            "ADD",
            "REMOVE"
          ],
          "enumDescriptions": [
            "The type of change is not specified or known.",
            "The single field index is being added.",
            "The single field index is being removed."
          ],
          "type": "string"
        },
        "index": {
          "$ref": "GoogleFirestoreAdminV1beta2Index",
          "description": "The index being changed."
        }
      },
      "type": "object"
    },
    "GoogleFirestoreAdminV1beta2IndexField": {
      "description": "A field in an index.\nThe field_path describes which field is indexed, the value_mode describes\nhow the field value is indexed.",
      "id": "GoogleFirestoreAdminV1beta2IndexField",
      "properties": {
        "arrayConfig": {
          "description": "Indicates that this field supports operations on `array_value`s.",
          "enum": [
            "ARRAY_CONFIG_UNSPECIFIED",
            "CONTAINS"
          ],
          "enumDescriptions": [
            "The index does not support additional array queries.",
            "The index supports array containment queries."
          ],
          "type": "string"
        },
        "fieldPath": {
          "description": "Can be __name__.\nFor single field indexes, this must match the name of the field or may\nbe omitted.",
          "type": "string"
        },
        "order": {
          "description": "Indicates that this field supports ordering by the specified order or\ncomparing using =, \u003c, \u003c=, \u003e, \u003e=.",
          "enum": [
            "ORDER_UNSPECIFIED",
            "ASCENDING",
            "DESCENDING"
          ],
          "enumDescriptions": [
            "The ordering is unspecified. Not a valid option.",
            "The field is ordered by ascending field value.",
            "The field is ordered by descending field value."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleFirestoreAdminV1beta2Progress": {
      "description": "Describes the progress of the operation.\nUnit of work is generic and must be interpreted based on where Progress\nis used.",
      "id": "GoogleFirestoreAdminV1beta2Progress",
      "properties": {
        "completedWork": {
          "description": "The amount of work completed.",
          "format": "int64",
          "type": "string"
        },
        "estimatedWork": {
          "description": "The amount of work estimated.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "id": "ListLocationsResponse",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "Location"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Location": {
      "description": "A resource that represents Google Cloud Platform location.",
      "id": "Location",
      "properties": {
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name.\nFor example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example\n\n    {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given\nlocation.",
          "type": "object"
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations.\nFor example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "servicePath": "",
  "title": "Cloud Firestore API",
  "version": "v1",
  "version_module": true
}