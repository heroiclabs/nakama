// Copyright 2018 The Nakama Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//*
// The RPC protocol for the developer console.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: console.proto

package console

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	hiro "github.com/heroiclabs/hiro"
	api "github.com/heroiclabs/nakama-common/api"
	rtapi "github.com/heroiclabs/nakama-common/rtapi"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StatusHealth int32

const (
	StatusHealth_STATUS_HEALTH_OK            StatusHealth = 0
	StatusHealth_STATUS_HEALTH_ERROR         StatusHealth = 1
	StatusHealth_STATUS_HEALTH_CONNECTING    StatusHealth = 2
	StatusHealth_STATUS_HEALTH_DISCONNECTING StatusHealth = 3
)

// Enum value maps for StatusHealth.
var (
	StatusHealth_name = map[int32]string{
		0: "STATUS_HEALTH_OK",
		1: "STATUS_HEALTH_ERROR",
		2: "STATUS_HEALTH_CONNECTING",
		3: "STATUS_HEALTH_DISCONNECTING",
	}
	StatusHealth_value = map[string]int32{
		"STATUS_HEALTH_OK":            0,
		"STATUS_HEALTH_ERROR":         1,
		"STATUS_HEALTH_CONNECTING":    2,
		"STATUS_HEALTH_DISCONNECTING": 3,
	}
)

func (x StatusHealth) Enum() *StatusHealth {
	p := new(StatusHealth)
	*p = x
	return p
}

func (x StatusHealth) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusHealth) Descriptor() protoreflect.EnumDescriptor {
	return file_console_proto_enumTypes[0].Descriptor()
}

func (StatusHealth) Type() protoreflect.EnumType {
	return &file_console_proto_enumTypes[0]
}

func (x StatusHealth) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusHealth.Descriptor instead.
func (StatusHealth) EnumDescriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{0}
}

// Message integration's names.
type MessageIntegrationType int32

const (
	MessageIntegrationType_UNKNOWN_MESSAGE_TYPE MessageIntegrationType = 0
	// The variant for Google's Firebase Cloud Messaging.
	MessageIntegrationType_FCM MessageIntegrationType = 1
	// The variant for Apple's Message system.
	MessageIntegrationType_APNS MessageIntegrationType = 2
	// The variant for Facebook App-to-User Notifications.
	MessageIntegrationType_FACEBOOK_NOTIFICATION MessageIntegrationType = 3
	// The variant for OneSignal Notifications.
	MessageIntegrationType_ONESIGNAL_NOTIFICATION MessageIntegrationType = 4
	// The variant for Webhook Notifications.
	MessageIntegrationType_WEBHOOK_NOTIFICATION MessageIntegrationType = 5
)

// Enum value maps for MessageIntegrationType.
var (
	MessageIntegrationType_name = map[int32]string{
		0: "UNKNOWN_MESSAGE_TYPE",
		1: "FCM",
		2: "APNS",
		3: "FACEBOOK_NOTIFICATION",
		4: "ONESIGNAL_NOTIFICATION",
		5: "WEBHOOK_NOTIFICATION",
	}
	MessageIntegrationType_value = map[string]int32{
		"UNKNOWN_MESSAGE_TYPE":   0,
		"FCM":                    1,
		"APNS":                   2,
		"FACEBOOK_NOTIFICATION":  3,
		"ONESIGNAL_NOTIFICATION": 4,
		"WEBHOOK_NOTIFICATION":   5,
	}
)

func (x MessageIntegrationType) Enum() *MessageIntegrationType {
	p := new(MessageIntegrationType)
	*p = x
	return p
}

func (x MessageIntegrationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageIntegrationType) Descriptor() protoreflect.EnumDescriptor {
	return file_console_proto_enumTypes[1].Descriptor()
}

func (MessageIntegrationType) Type() protoreflect.EnumType {
	return &file_console_proto_enumTypes[1]
}

func (x MessageIntegrationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageIntegrationType.Descriptor instead.
func (MessageIntegrationType) EnumDescriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{1}
}

// Message channel types.
type MessageChannelType int32

const (
	MessageChannelType_DEFAULT MessageChannelType = 0
	// Push notification.
	MessageChannelType_PUSH MessageChannelType = 1
	// Email.
	MessageChannelType_EMAIL MessageChannelType = 2
)

// Enum value maps for MessageChannelType.
var (
	MessageChannelType_name = map[int32]string{
		0: "DEFAULT",
		1: "PUSH",
		2: "EMAIL",
	}
	MessageChannelType_value = map[string]int32{
		"DEFAULT": 0,
		"PUSH":    1,
		"EMAIL":   2,
	}
)

func (x MessageChannelType) Enum() *MessageChannelType {
	p := new(MessageChannelType)
	*p = x
	return p
}

func (x MessageChannelType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageChannelType) Descriptor() protoreflect.EnumDescriptor {
	return file_console_proto_enumTypes[2].Descriptor()
}

func (MessageChannelType) Type() protoreflect.EnumType {
	return &file_console_proto_enumTypes[2]
}

func (x MessageChannelType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageChannelType.Descriptor instead.
func (MessageChannelType) EnumDescriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{2}
}

// ATTENTION: Do not modify the order of this enum.
// New resources should always be appended.
type AclResources int32

const (
	AclResources_ACCOUNT             AclResources = 0
	AclResources_ACCOUNT_WALLET      AclResources = 1
	AclResources_ACCOUNT_EXPORT      AclResources = 2
	AclResources_ACCOUNT_FRIENDS     AclResources = 3
	AclResources_ACCOUNT_GROUPS      AclResources = 4
	AclResources_ACCOUNT_NOTES       AclResources = 5
	AclResources_ACL_TEMPLATE        AclResources = 6
	AclResources_ALL_ACCOUNTS        AclResources = 7
	AclResources_ALL_DATA            AclResources = 8
	AclResources_ALL_STORAGE         AclResources = 9
	AclResources_API_EXPLORER        AclResources = 10
	AclResources_AUDIT_LOG           AclResources = 11
	AclResources_CONFIGURATION       AclResources = 12
	AclResources_CHANNEL_MESSAGE     AclResources = 13
	AclResources_USER                AclResources = 14
	AclResources_GROUP               AclResources = 15
	AclResources_IN_APP_PURCHASE     AclResources = 16
	AclResources_LEADERBOARD         AclResources = 17
	AclResources_LEADERBOARD_RECORD  AclResources = 18
	AclResources_MATCH               AclResources = 19
	AclResources_NOTIFICATION        AclResources = 20
	AclResources_SATORI_MESSAGE      AclResources = 21
	AclResources_SETTINGS            AclResources = 22
	AclResources_STORAGE_DATA        AclResources = 23
	AclResources_STORAGE_DATA_IMPORT AclResources = 24
	AclResources_HIRO_INVENTORY      AclResources = 25
	AclResources_HIRO_PROGRESSION    AclResources = 26
	AclResources_HIRO_ECONOMY        AclResources = 27
	AclResources_HIRO_STATS          AclResources = 28
	AclResources_HIRO_ENERGY         AclResources = 29
)

// Enum value maps for AclResources.
var (
	AclResources_name = map[int32]string{
		0:  "ACCOUNT",
		1:  "ACCOUNT_WALLET",
		2:  "ACCOUNT_EXPORT",
		3:  "ACCOUNT_FRIENDS",
		4:  "ACCOUNT_GROUPS",
		5:  "ACCOUNT_NOTES",
		6:  "ACL_TEMPLATE",
		7:  "ALL_ACCOUNTS",
		8:  "ALL_DATA",
		9:  "ALL_STORAGE",
		10: "API_EXPLORER",
		11: "AUDIT_LOG",
		12: "CONFIGURATION",
		13: "CHANNEL_MESSAGE",
		14: "USER",
		15: "GROUP",
		16: "IN_APP_PURCHASE",
		17: "LEADERBOARD",
		18: "LEADERBOARD_RECORD",
		19: "MATCH",
		20: "NOTIFICATION",
		21: "SATORI_MESSAGE",
		22: "SETTINGS",
		23: "STORAGE_DATA",
		24: "STORAGE_DATA_IMPORT",
		25: "HIRO_INVENTORY",
		26: "HIRO_PROGRESSION",
		27: "HIRO_ECONOMY",
		28: "HIRO_STATS",
		29: "HIRO_ENERGY",
	}
	AclResources_value = map[string]int32{
		"ACCOUNT":             0,
		"ACCOUNT_WALLET":      1,
		"ACCOUNT_EXPORT":      2,
		"ACCOUNT_FRIENDS":     3,
		"ACCOUNT_GROUPS":      4,
		"ACCOUNT_NOTES":       5,
		"ACL_TEMPLATE":        6,
		"ALL_ACCOUNTS":        7,
		"ALL_DATA":            8,
		"ALL_STORAGE":         9,
		"API_EXPLORER":        10,
		"AUDIT_LOG":           11,
		"CONFIGURATION":       12,
		"CHANNEL_MESSAGE":     13,
		"USER":                14,
		"GROUP":               15,
		"IN_APP_PURCHASE":     16,
		"LEADERBOARD":         17,
		"LEADERBOARD_RECORD":  18,
		"MATCH":               19,
		"NOTIFICATION":        20,
		"SATORI_MESSAGE":      21,
		"SETTINGS":            22,
		"STORAGE_DATA":        23,
		"STORAGE_DATA_IMPORT": 24,
		"HIRO_INVENTORY":      25,
		"HIRO_PROGRESSION":    26,
		"HIRO_ECONOMY":        27,
		"HIRO_STATS":          28,
		"HIRO_ENERGY":         29,
	}
)

func (x AclResources) Enum() *AclResources {
	p := new(AclResources)
	*p = x
	return p
}

func (x AclResources) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AclResources) Descriptor() protoreflect.EnumDescriptor {
	return file_console_proto_enumTypes[3].Descriptor()
}

func (AclResources) Type() protoreflect.EnumType {
	return &file_console_proto_enumTypes[3]
}

func (x AclResources) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AclResources.Descriptor instead.
func (AclResources) EnumDescriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{3}
}

type AuditLogAction int32

const (
	AuditLogAction_UNKNOWN AuditLogAction = 0
	AuditLogAction_CREATE  AuditLogAction = 1
	AuditLogAction_UPDATE  AuditLogAction = 2
	AuditLogAction_DELETE  AuditLogAction = 3
	AuditLogAction_INVOKE  AuditLogAction = 4
	AuditLogAction_IMPORT  AuditLogAction = 5
	AuditLogAction_EXPORT  AuditLogAction = 6
)

// Enum value maps for AuditLogAction.
var (
	AuditLogAction_name = map[int32]string{
		0: "UNKNOWN",
		1: "CREATE",
		2: "UPDATE",
		3: "DELETE",
		4: "INVOKE",
		5: "IMPORT",
		6: "EXPORT",
	}
	AuditLogAction_value = map[string]int32{
		"UNKNOWN": 0,
		"CREATE":  1,
		"UPDATE":  2,
		"DELETE":  3,
		"INVOKE":  4,
		"IMPORT":  5,
		"EXPORT":  6,
	}
)

func (x AuditLogAction) Enum() *AuditLogAction {
	p := new(AuditLogAction)
	*p = x
	return p
}

func (x AuditLogAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuditLogAction) Descriptor() protoreflect.EnumDescriptor {
	return file_console_proto_enumTypes[4].Descriptor()
}

func (AuditLogAction) Type() protoreflect.EnumType {
	return &file_console_proto_enumTypes[4]
}

func (x AuditLogAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuditLogAction.Descriptor instead.
func (AuditLogAction) EnumDescriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{4}
}

type ListChannelMessagesRequest_Type int32

const (
	ListChannelMessagesRequest_UNKNOWN ListChannelMessagesRequest_Type = 0
	ListChannelMessagesRequest_ROOM    ListChannelMessagesRequest_Type = 2
	ListChannelMessagesRequest_GROUP   ListChannelMessagesRequest_Type = 3
	ListChannelMessagesRequest_DIRECT  ListChannelMessagesRequest_Type = 4
)

// Enum value maps for ListChannelMessagesRequest_Type.
var (
	ListChannelMessagesRequest_Type_name = map[int32]string{
		0: "UNKNOWN",
		2: "ROOM",
		3: "GROUP",
		4: "DIRECT",
	}
	ListChannelMessagesRequest_Type_value = map[string]int32{
		"UNKNOWN": 0,
		"ROOM":    2,
		"GROUP":   3,
		"DIRECT":  4,
	}
)

func (x ListChannelMessagesRequest_Type) Enum() *ListChannelMessagesRequest_Type {
	p := new(ListChannelMessagesRequest_Type)
	*p = x
	return p
}

func (x ListChannelMessagesRequest_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListChannelMessagesRequest_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_console_proto_enumTypes[5].Descriptor()
}

func (ListChannelMessagesRequest_Type) Type() protoreflect.EnumType {
	return &file_console_proto_enumTypes[5]
}

func (x ListChannelMessagesRequest_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListChannelMessagesRequest_Type.Descriptor instead.
func (ListChannelMessagesRequest_Type) EnumDescriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{68, 0}
}

// The APNs environment type.
type AppleMessageConfiguration_EnvType int32

const (
	AppleMessageConfiguration_PRODUCTION  AppleMessageConfiguration_EnvType = 0
	AppleMessageConfiguration_DEVELOPMENT AppleMessageConfiguration_EnvType = 1
)

// Enum value maps for AppleMessageConfiguration_EnvType.
var (
	AppleMessageConfiguration_EnvType_name = map[int32]string{
		0: "PRODUCTION",
		1: "DEVELOPMENT",
	}
	AppleMessageConfiguration_EnvType_value = map[string]int32{
		"PRODUCTION":  0,
		"DEVELOPMENT": 1,
	}
)

func (x AppleMessageConfiguration_EnvType) Enum() *AppleMessageConfiguration_EnvType {
	p := new(AppleMessageConfiguration_EnvType)
	*p = x
	return p
}

func (x AppleMessageConfiguration_EnvType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppleMessageConfiguration_EnvType) Descriptor() protoreflect.EnumDescriptor {
	return file_console_proto_enumTypes[6].Descriptor()
}

func (AppleMessageConfiguration_EnvType) Type() protoreflect.EnumType {
	return &file_console_proto_enumTypes[6]
}

func (x AppleMessageConfiguration_EnvType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppleMessageConfiguration_EnvType.Descriptor instead.
func (AppleMessageConfiguration_EnvType) EnumDescriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{111, 0}
}

// API Explorer List of Endpoints response message
type ApiEndpointDescriptor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	BodyTemplate  string                 `protobuf:"bytes,2,opt,name=body_template,json=bodyTemplate,proto3" json:"body_template,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiEndpointDescriptor) Reset() {
	*x = ApiEndpointDescriptor{}
	mi := &file_console_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiEndpointDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiEndpointDescriptor) ProtoMessage() {}

func (x *ApiEndpointDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiEndpointDescriptor.ProtoReflect.Descriptor instead.
func (*ApiEndpointDescriptor) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{0}
}

func (x *ApiEndpointDescriptor) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ApiEndpointDescriptor) GetBodyTemplate() string {
	if x != nil {
		return x.BodyTemplate
	}
	return ""
}

// Account information.
type Account struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user's account details.
	Account *api.Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// The UNIX time when the account was disabled.
	DisableTime   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=disable_time,json=disableTime,proto3" json:"disable_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Account) Reset() {
	*x = Account{}
	mi := &file_console_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{1}
}

func (x *Account) GetAccount() *api.Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *Account) GetDisableTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DisableTime
	}
	return nil
}

// Delete a user account.
type AccountDeleteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the user account.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Record the user deletion - used for GDPR compliance.
	RecordDeletion *wrapperspb.BoolValue `protobuf:"bytes,2,opt,name=record_deletion,json=recordDeletion,proto3" json:"record_deletion,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AccountDeleteRequest) Reset() {
	*x = AccountDeleteRequest{}
	mi := &file_console_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDeleteRequest) ProtoMessage() {}

func (x *AccountDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDeleteRequest.ProtoReflect.Descriptor instead.
func (*AccountDeleteRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{2}
}

func (x *AccountDeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AccountDeleteRequest) GetRecordDeletion() *wrapperspb.BoolValue {
	if x != nil {
		return x.RecordDeletion
	}
	return nil
}

// An export of all information stored for a user account.
type AccountExport struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user's account details.
	Account *api.Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// The user's storage.
	Objects []*api.StorageObject `protobuf:"bytes,2,rep,name=objects,proto3" json:"objects,omitempty"`
	// The user's friends.
	Friends []*api.Friend `protobuf:"bytes,3,rep,name=friends,proto3" json:"friends,omitempty"`
	// The user's groups.
	Groups []*api.Group `protobuf:"bytes,4,rep,name=groups,proto3" json:"groups,omitempty"`
	// The user's chat messages.
	Messages []*api.ChannelMessage `protobuf:"bytes,5,rep,name=messages,proto3" json:"messages,omitempty"`
	// The user's leaderboard records.
	LeaderboardRecords []*api.LeaderboardRecord `protobuf:"bytes,6,rep,name=leaderboard_records,json=leaderboardRecords,proto3" json:"leaderboard_records,omitempty"`
	// The user's notifications.
	Notifications []*api.Notification `protobuf:"bytes,7,rep,name=notifications,proto3" json:"notifications,omitempty"`
	// The user's wallet ledger items.
	WalletLedgers []*WalletLedger `protobuf:"bytes,8,rep,name=wallet_ledgers,json=walletLedgers,proto3" json:"wallet_ledgers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountExport) Reset() {
	*x = AccountExport{}
	mi := &file_console_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountExport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountExport) ProtoMessage() {}

func (x *AccountExport) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountExport.ProtoReflect.Descriptor instead.
func (*AccountExport) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{3}
}

func (x *AccountExport) GetAccount() *api.Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *AccountExport) GetObjects() []*api.StorageObject {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *AccountExport) GetFriends() []*api.Friend {
	if x != nil {
		return x.Friends
	}
	return nil
}

func (x *AccountExport) GetGroups() []*api.Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *AccountExport) GetMessages() []*api.ChannelMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *AccountExport) GetLeaderboardRecords() []*api.LeaderboardRecord {
	if x != nil {
		return x.LeaderboardRecords
	}
	return nil
}

func (x *AccountExport) GetNotifications() []*api.Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *AccountExport) GetWalletLedgers() []*WalletLedger {
	if x != nil {
		return x.WalletLedgers
	}
	return nil
}

// Request to import user account data.
type AccountImport struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user ID to overwrite data for, or blank if the account should be freshly created.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The export data snapshot to import.
	Data          *AccountExport `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountImport) Reset() {
	*x = AccountImport{}
	mi := &file_console_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountImport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountImport) ProtoMessage() {}

func (x *AccountImport) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountImport.ProtoReflect.Descriptor instead.
func (*AccountImport) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{4}
}

func (x *AccountImport) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AccountImport) GetData() *AccountExport {
	if x != nil {
		return x.Data
	}
	return nil
}

// The identifier for a user account.
type AccountId struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the user account.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountId) Reset() {
	*x = AccountId{}
	mi := &file_console_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountId) ProtoMessage() {}

func (x *AccountId) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountId.ProtoReflect.Descriptor instead.
func (*AccountId) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{5}
}

func (x *AccountId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// A list of users.
type AccountList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of users.
	Users []*api.User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	// Approximate total number of users.
	TotalCount int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Next cursor.
	NextCursor    string `protobuf:"bytes,3,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountList) Reset() {
	*x = AccountList{}
	mi := &file_console_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountList) ProtoMessage() {}

func (x *AccountList) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountList.ProtoReflect.Descriptor instead.
func (*AccountList) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{6}
}

func (x *AccountList) GetUsers() []*api.User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *AccountList) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *AccountList) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

// Request to list audit log entries.
type AuditLogRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Maximum number of entries to return.
	Limit int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Filter by username.
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	// Filter by resource.
	Resource *wrapperspb.Int32Value `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
	// Filter by action.
	Action AuditLogAction `protobuf:"varint,4,opt,name=action,proto3,enum=nakama.console.AuditLogAction" json:"action,omitempty"`
	// Optional timestamp threshold to list audit log records after.
	After *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=after,proto3" json:"after,omitempty"`
	// Optional timestamp threshold to list audit log records before.
	Before *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=before,proto3" json:"before,omitempty"`
	// Cursor to fetch additional.
	Cursor        string `protobuf:"bytes,7,opt,name=cursor,proto3" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditLogRequest) Reset() {
	*x = AuditLogRequest{}
	mi := &file_console_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditLogRequest) ProtoMessage() {}

func (x *AuditLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditLogRequest.ProtoReflect.Descriptor instead.
func (*AuditLogRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{7}
}

func (x *AuditLogRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *AuditLogRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AuditLogRequest) GetResource() *wrapperspb.Int32Value {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *AuditLogRequest) GetAction() AuditLogAction {
	if x != nil {
		return x.Action
	}
	return AuditLogAction_UNKNOWN
}

func (x *AuditLogRequest) GetAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.After
	}
	return nil
}

func (x *AuditLogRequest) GetBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *AuditLogRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

// List of users that can be filtered in the audit logs.
type AuditLogUsersList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Usernames     []string               `protobuf:"bytes,1,rep,name=usernames,proto3" json:"usernames,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditLogUsersList) Reset() {
	*x = AuditLogUsersList{}
	mi := &file_console_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditLogUsersList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditLogUsersList) ProtoMessage() {}

func (x *AuditLogUsersList) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditLogUsersList.ProtoReflect.Descriptor instead.
func (*AuditLogUsersList) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{8}
}

func (x *AuditLogUsersList) GetUsernames() []string {
	if x != nil {
		return x.Usernames
	}
	return nil
}

// Audit log entries.
type AuditLogList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of audit log entries.
	Entries []*AuditLogList_AuditLog `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	// Cursor to fetch next page of results.
	NextCursor string `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	// Cursor to fetch prev page of results.
	PrevCursor    string `protobuf:"bytes,3,opt,name=prev_cursor,json=prevCursor,proto3" json:"prev_cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditLogList) Reset() {
	*x = AuditLogList{}
	mi := &file_console_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditLogList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditLogList) ProtoMessage() {}

func (x *AuditLogList) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditLogList.ProtoReflect.Descriptor instead.
func (*AuditLogList) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{9}
}

func (x *AuditLogList) GetEntries() []*AuditLogList_AuditLog {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *AuditLogList) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

func (x *AuditLogList) GetPrevCursor() string {
	if x != nil {
		return x.PrevCursor
	}
	return ""
}

// The identifier for a group.
type GroupId struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the group.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupId) Reset() {
	*x = GroupId{}
	mi := &file_console_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupId) ProtoMessage() {}

func (x *GroupId) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupId.ProtoReflect.Descriptor instead.
func (*GroupId) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{10}
}

func (x *GroupId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// A list of groups.
type GroupList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of groups.
	Groups []*api.Group `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	// Approximate total number of groups.
	TotalCount int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Next cursor.
	NextCursor    string `protobuf:"bytes,3,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupList) Reset() {
	*x = GroupList{}
	mi := &file_console_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupList) ProtoMessage() {}

func (x *GroupList) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupList.ProtoReflect.Descriptor instead.
func (*GroupList) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{11}
}

func (x *GroupList) GetGroups() []*api.Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *GroupList) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GroupList) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

// An export of all information stored for a group.
type GroupExport struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The group details.
	Group *api.Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	// The group's list of members.
	Members       []*api.GroupUserList_GroupUser `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupExport) Reset() {
	*x = GroupExport{}
	mi := &file_console_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupExport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupExport) ProtoMessage() {}

func (x *GroupExport) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupExport.ProtoReflect.Descriptor instead.
func (*GroupExport) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{12}
}

func (x *GroupExport) GetGroup() *api.Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupExport) GetMembers() []*api.GroupUserList_GroupUser {
	if x != nil {
		return x.Members
	}
	return nil
}

// A list of realtime matches, with their node names.
type MatchList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Matches       []*MatchList_Match     `protobuf:"bytes,1,rep,name=matches,proto3" json:"matches,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchList) Reset() {
	*x = MatchList{}
	mi := &file_console_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchList) ProtoMessage() {}

func (x *MatchList) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchList.ProtoReflect.Descriptor instead.
func (*MatchList) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{13}
}

func (x *MatchList) GetMatches() []*MatchList_Match {
	if x != nil {
		return x.Matches
	}
	return nil
}

// Add a new console user
type AddUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The username of the user.
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// The password of the user.
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// Email address of the user.
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	// ACL.
	Acl map[string]*Permissions `protobuf:"bytes,4,rep,name=acl,proto3" json:"acl,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Require MFA
	MfaRequired bool `protobuf:"varint,5,opt,name=mfa_required,json=mfaRequired,proto3" json:"mfa_required,omitempty"`
	// Subscribe to newsletters
	NewsletterSubscription bool `protobuf:"varint,6,opt,name=newsletter_subscription,json=newsletterSubscription,proto3" json:"newsletter_subscription,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AddUserRequest) Reset() {
	*x = AddUserRequest{}
	mi := &file_console_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserRequest) ProtoMessage() {}

func (x *AddUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserRequest.ProtoReflect.Descriptor instead.
func (*AddUserRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{14}
}

func (x *AddUserRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AddUserRequest) GetAcl() map[string]*Permissions {
	if x != nil {
		return x.Acl
	}
	return nil
}

func (x *AddUserRequest) GetMfaRequired() bool {
	if x != nil {
		return x.MfaRequired
	}
	return false
}

func (x *AddUserRequest) GetNewsletterSubscription() bool {
	if x != nil {
		return x.NewsletterSubscription
	}
	return false
}

// Add/join users to a group.
type AddGroupUsersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Users to add/join.
	Ids string `protobuf:"bytes,1,opt,name=ids,proto3" json:"ids,omitempty"`
	// ID of the group to add them to.
	GroupId string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// Whether it is a join request.
	JoinRequest   bool `protobuf:"varint,3,opt,name=join_request,json=joinRequest,proto3" json:"join_request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddGroupUsersRequest) Reset() {
	*x = AddGroupUsersRequest{}
	mi := &file_console_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddGroupUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroupUsersRequest) ProtoMessage() {}

func (x *AddGroupUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroupUsersRequest.ProtoReflect.Descriptor instead.
func (*AddGroupUsersRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{15}
}

func (x *AddGroupUsersRequest) GetIds() string {
	if x != nil {
		return x.Ids
	}
	return ""
}

func (x *AddGroupUsersRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *AddGroupUsersRequest) GetJoinRequest() bool {
	if x != nil {
		return x.JoinRequest
	}
	return false
}

// Add a new note for the user.
type AddAccountNoteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier of the note. Empty to update existing note.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The account id to add the note for.
	AccountId string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// The content of the note.
	Note          string `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAccountNoteRequest) Reset() {
	*x = AddAccountNoteRequest{}
	mi := &file_console_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAccountNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAccountNoteRequest) ProtoMessage() {}

func (x *AddAccountNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAccountNoteRequest.ProtoReflect.Descriptor instead.
func (*AddAccountNoteRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{16}
}

func (x *AddAccountNoteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AddAccountNoteRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *AddAccountNoteRequest) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

// Add a new ACL template.
type AddAclTemplateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the ACL template.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The ACL template description.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// The ACL template permissions.
	Acl           map[string]*Permissions `protobuf:"bytes,3,rep,name=acl,proto3" json:"acl,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAclTemplateRequest) Reset() {
	*x = AddAclTemplateRequest{}
	mi := &file_console_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAclTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAclTemplateRequest) ProtoMessage() {}

func (x *AddAclTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAclTemplateRequest.ProtoReflect.Descriptor instead.
func (*AddAclTemplateRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{17}
}

func (x *AddAclTemplateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddAclTemplateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddAclTemplateRequest) GetAcl() map[string]*Permissions {
	if x != nil {
		return x.Acl
	}
	return nil
}

type UpdateAclTemplateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identifier of the ACL template.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The name of the ACL template.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The ACL template description.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// The ACL template permissions.
	Acl           map[string]*Permissions `protobuf:"bytes,4,rep,name=acl,proto3" json:"acl,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAclTemplateRequest) Reset() {
	*x = UpdateAclTemplateRequest{}
	mi := &file_console_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAclTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAclTemplateRequest) ProtoMessage() {}

func (x *UpdateAclTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAclTemplateRequest.ProtoReflect.Descriptor instead.
func (*UpdateAclTemplateRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateAclTemplateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateAclTemplateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateAclTemplateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateAclTemplateRequest) GetAcl() map[string]*Permissions {
	if x != nil {
		return x.Acl
	}
	return nil
}

type AclTemplateList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of ACL templates.
	Templates     []*AclTemplate `protobuf:"bytes,1,rep,name=templates,proto3" json:"templates,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AclTemplateList) Reset() {
	*x = AclTemplateList{}
	mi := &file_console_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AclTemplateList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AclTemplateList) ProtoMessage() {}

func (x *AclTemplateList) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AclTemplateList.ProtoReflect.Descriptor instead.
func (*AclTemplateList) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{19}
}

func (x *AclTemplateList) GetTemplates() []*AclTemplate {
	if x != nil {
		return x.Templates
	}
	return nil
}

type AclTemplate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identifier of the ACL template.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The name of the ACL template.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The ACL template description.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// The ACL template permissions.
	Acl map[string]*Permissions `protobuf:"bytes,4,rep,name=acl,proto3" json:"acl,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// The template Create time.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The template Update time.
	UpdateTime    *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AclTemplate) Reset() {
	*x = AclTemplate{}
	mi := &file_console_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AclTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AclTemplate) ProtoMessage() {}

func (x *AclTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AclTemplate.ProtoReflect.Descriptor instead.
func (*AclTemplate) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{20}
}

func (x *AclTemplate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AclTemplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AclTemplate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AclTemplate) GetAcl() map[string]*Permissions {
	if x != nil {
		return x.Acl
	}
	return nil
}

func (x *AclTemplate) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *AclTemplate) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

// A user note.
type AccountNote struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier of the note.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Owner of this note.
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The content of the note.
	Note string `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`
	// Timestamp of note creation.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Timestamp of note update.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Console user identifier that created this note.
	CreateId string `protobuf:"bytes,6,opt,name=create_id,json=createId,proto3" json:"create_id,omitempty"`
	// Console username that created this note.
	CreateUsername string `protobuf:"bytes,7,opt,name=create_username,json=createUsername,proto3" json:"create_username,omitempty"`
	// Console user identifier that last updated this note.
	UpdateId string `protobuf:"bytes,8,opt,name=update_id,json=updateId,proto3" json:"update_id,omitempty"`
	// Console username that last updated this note.
	UpdateUsername string `protobuf:"bytes,9,opt,name=update_username,json=updateUsername,proto3" json:"update_username,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AccountNote) Reset() {
	*x = AccountNote{}
	mi := &file_console_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountNote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountNote) ProtoMessage() {}

func (x *AccountNote) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountNote.ProtoReflect.Descriptor instead.
func (*AccountNote) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{21}
}

func (x *AccountNote) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AccountNote) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AccountNote) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *AccountNote) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *AccountNote) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *AccountNote) GetCreateId() string {
	if x != nil {
		return x.CreateId
	}
	return ""
}

func (x *AccountNote) GetCreateUsername() string {
	if x != nil {
		return x.CreateUsername
	}
	return ""
}

func (x *AccountNote) GetUpdateId() string {
	if x != nil {
		return x.UpdateId
	}
	return ""
}

func (x *AccountNote) GetUpdateUsername() string {
	if x != nil {
		return x.UpdateUsername
	}
	return ""
}

// List of user notes.
type ListAccountNotesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Account to list notes for.
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// Response result page limit.
	Limit int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// Optional cursor for pagination.
	Cursor        string `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAccountNotesRequest) Reset() {
	*x = ListAccountNotesRequest{}
	mi := &file_console_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAccountNotesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountNotesRequest) ProtoMessage() {}

func (x *ListAccountNotesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountNotesRequest.ProtoReflect.Descriptor instead.
func (*ListAccountNotesRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{22}
}

func (x *ListAccountNotesRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ListAccountNotesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListAccountNotesRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

type DeleteAclTemplateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identifier of the ACL template.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAclTemplateRequest) Reset() {
	*x = DeleteAclTemplateRequest{}
	mi := &file_console_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAclTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAclTemplateRequest) ProtoMessage() {}

func (x *DeleteAclTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAclTemplateRequest.ProtoReflect.Descriptor instead.
func (*DeleteAclTemplateRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteAclTemplateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Delete an account note.
type DeleteAccountNoteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Account owning the notes.
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// Identifier of the note.
	NoteId        string `protobuf:"bytes,2,opt,name=note_id,json=noteId,proto3" json:"note_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteAccountNoteRequest) Reset() {
	*x = DeleteAccountNoteRequest{}
	mi := &file_console_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAccountNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccountNoteRequest) ProtoMessage() {}

func (x *DeleteAccountNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccountNoteRequest.ProtoReflect.Descriptor instead.
func (*DeleteAccountNoteRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteAccountNoteRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *DeleteAccountNoteRequest) GetNoteId() string {
	if x != nil {
		return x.NoteId
	}
	return ""
}

// Response to list user notes.
type ListAccountNotesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of notes.
	Notes []*AccountNote `protobuf:"bytes,1,rep,name=notes,proto3" json:"notes,omitempty"`
	// Cursor for retrieving the next page, if any.
	Cursor        string `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAccountNotesResponse) Reset() {
	*x = ListAccountNotesResponse{}
	mi := &file_console_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAccountNotesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountNotesResponse) ProtoMessage() {}

func (x *ListAccountNotesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountNotesResponse.ProtoReflect.Descriptor instead.
func (*ListAccountNotesResponse) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{25}
}

func (x *ListAccountNotesResponse) GetNotes() []*AccountNote {
	if x != nil {
		return x.Notes
	}
	return nil
}

func (x *ListAccountNotesResponse) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

// Response to create/invite a new user.
type AddUserResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user recently created.
	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	// A one-time token required to update the user for the first time
	Token         string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddUserResponse) Reset() {
	*x = AddUserResponse{}
	mi := &file_console_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserResponse) ProtoMessage() {}

func (x *AddUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserResponse.ProtoReflect.Descriptor instead.
func (*AddUserResponse) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{26}
}

func (x *AddUserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *AddUserResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// API Explorer List of Endpoints
type ApiEndpointList struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Endpoints     []*ApiEndpointDescriptor `protobuf:"bytes,1,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	RpcEndpoints  []*ApiEndpointDescriptor `protobuf:"bytes,2,rep,name=rpc_endpoints,json=rpcEndpoints,proto3" json:"rpc_endpoints,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiEndpointList) Reset() {
	*x = ApiEndpointList{}
	mi := &file_console_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiEndpointList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiEndpointList) ProtoMessage() {}

func (x *ApiEndpointList) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiEndpointList.ProtoReflect.Descriptor instead.
func (*ApiEndpointList) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{27}
}

func (x *ApiEndpointList) GetEndpoints() []*ApiEndpointDescriptor {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *ApiEndpointList) GetRpcEndpoints() []*ApiEndpointDescriptor {
	if x != nil {
		return x.RpcEndpoints
	}
	return nil
}

// Authenticate a console user with username and password.
type AuthenticateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The username of the user.
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// The password of the user.
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// Multi-factor authentication code.
	Mfa           string `protobuf:"bytes,3,opt,name=mfa,proto3" json:"mfa,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticateRequest) Reset() {
	*x = AuthenticateRequest{}
	mi := &file_console_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateRequest) ProtoMessage() {}

func (x *AuthenticateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateRequest.ProtoReflect.Descriptor instead.
func (*AuthenticateRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{28}
}

func (x *AuthenticateRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AuthenticateRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AuthenticateRequest) GetMfa() string {
	if x != nil {
		return x.Mfa
	}
	return ""
}

// Request to change MFA.
type AuthenticateMFASetupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// MFA token.
	Mfa string `protobuf:"bytes,1,opt,name=mfa,proto3" json:"mfa,omitempty"`
	// MFA code.
	Code          string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticateMFASetupRequest) Reset() {
	*x = AuthenticateMFASetupRequest{}
	mi := &file_console_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticateMFASetupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateMFASetupRequest) ProtoMessage() {}

func (x *AuthenticateMFASetupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateMFASetupRequest.ProtoReflect.Descriptor instead.
func (*AuthenticateMFASetupRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{29}
}

func (x *AuthenticateMFASetupRequest) GetMfa() string {
	if x != nil {
		return x.Mfa
	}
	return ""
}

func (x *AuthenticateMFASetupRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// Response to change MFA.
type AuthenticateMFASetupResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An one-time code to configure the MFA mechanism
	RecoveryCodes []string `protobuf:"bytes,1,rep,name=recovery_codes,json=recoveryCodes,proto3" json:"recovery_codes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticateMFASetupResponse) Reset() {
	*x = AuthenticateMFASetupResponse{}
	mi := &file_console_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticateMFASetupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateMFASetupResponse) ProtoMessage() {}

func (x *AuthenticateMFASetupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateMFASetupResponse.ProtoReflect.Descriptor instead.
func (*AuthenticateMFASetupResponse) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{30}
}

func (x *AuthenticateMFASetupResponse) GetRecoveryCodes() []string {
	if x != nil {
		return x.RecoveryCodes
	}
	return nil
}

// Log out a session and invalidate a session token.
type AuthenticateLogoutRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Session token to log out.
	Token         string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticateLogoutRequest) Reset() {
	*x = AuthenticateLogoutRequest{}
	mi := &file_console_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticateLogoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateLogoutRequest) ProtoMessage() {}

func (x *AuthenticateLogoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateLogoutRequest.ProtoReflect.Descriptor instead.
func (*AuthenticateLogoutRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{31}
}

func (x *AuthenticateLogoutRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// API Explorer request definition for CallApiEndpoint
type CallApiEndpointRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Body          string                 `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SessionVars   map[string]string      `protobuf:"bytes,4,rep,name=session_vars,json=sessionVars,proto3" json:"session_vars,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallApiEndpointRequest) Reset() {
	*x = CallApiEndpointRequest{}
	mi := &file_console_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallApiEndpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallApiEndpointRequest) ProtoMessage() {}

func (x *CallApiEndpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallApiEndpointRequest.ProtoReflect.Descriptor instead.
func (*CallApiEndpointRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{32}
}

func (x *CallApiEndpointRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *CallApiEndpointRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *CallApiEndpointRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CallApiEndpointRequest) GetSessionVars() map[string]string {
	if x != nil {
		return x.SessionVars
	}
	return nil
}

// API Explorer response definition for CallApiEndpoint
type CallApiEndpointResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Body          string                 `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallApiEndpointResponse) Reset() {
	*x = CallApiEndpointResponse{}
	mi := &file_console_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallApiEndpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallApiEndpointResponse) ProtoMessage() {}

func (x *CallApiEndpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallApiEndpointResponse.ProtoReflect.Descriptor instead.
func (*CallApiEndpointResponse) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{33}
}

func (x *CallApiEndpointResponse) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *CallApiEndpointResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// The current server configuration and any associated warnings.
type Config struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// JSON-encoded active server configuration.
	Config string `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	// Any warnings about the current config.
	Warnings []*Config_Warning `protobuf:"bytes,2,rep,name=warnings,proto3" json:"warnings,omitempty"`
	// Server version
	ServerVersion string `protobuf:"bytes,3,opt,name=server_version,json=serverVersion,proto3" json:"server_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Config) Reset() {
	*x = Config{}
	mi := &file_console_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{34}
}

func (x *Config) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *Config) GetWarnings() []*Config_Warning {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *Config) GetServerVersion() string {
	if x != nil {
		return x.ServerVersion
	}
	return ""
}

// A console user session.
type ConsoleSession struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A session token (JWT) for the console user.
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// MFA code required to setup the MFA mechanism.
	MfaCode       *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=mfa_code,json=mfaCode,proto3" json:"mfa_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConsoleSession) Reset() {
	*x = ConsoleSession{}
	mi := &file_console_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsoleSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsoleSession) ProtoMessage() {}

func (x *ConsoleSession) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsoleSession.ProtoReflect.Descriptor instead.
func (*ConsoleSession) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{35}
}

func (x *ConsoleSession) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ConsoleSession) GetMfaCode() *wrapperspb.StringValue {
	if x != nil {
		return x.MfaCode
	}
	return nil
}

// Delete channel messages by timestamp or/and ids.
type DeleteChannelMessagesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Timestamp before which messages will be deleted.
	Before *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
	// IDs of the messages to delete.
	Ids           []string `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteChannelMessagesRequest) Reset() {
	*x = DeleteChannelMessagesRequest{}
	mi := &file_console_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteChannelMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChannelMessagesRequest) ProtoMessage() {}

func (x *DeleteChannelMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChannelMessagesRequest.ProtoReflect.Descriptor instead.
func (*DeleteChannelMessagesRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{36}
}

func (x *DeleteChannelMessagesRequest) GetBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *DeleteChannelMessagesRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

// Delete friend relationship between two users.
type DeleteFriendRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user do delete for.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// User ID of the friend to remove.
	FriendId      string `protobuf:"bytes,2,opt,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFriendRequest) Reset() {
	*x = DeleteFriendRequest{}
	mi := &file_console_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendRequest) ProtoMessage() {}

func (x *DeleteFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendRequest.ProtoReflect.Descriptor instead.
func (*DeleteFriendRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{37}
}

func (x *DeleteFriendRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteFriendRequest) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

// Delete a group.
type DeleteGroupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the group to delete.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteGroupRequest) Reset() {
	*x = DeleteGroupRequest{}
	mi := &file_console_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupRequest) ProtoMessage() {}

func (x *DeleteGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteGroupRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{38}
}

func (x *DeleteGroupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Remove a user from a group.
type DeleteGroupUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User to remove.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ID of the group to remove them from.
	GroupId       string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteGroupUserRequest) Reset() {
	*x = DeleteGroupUserRequest{}
	mi := &file_console_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteGroupUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupUserRequest) ProtoMessage() {}

func (x *DeleteGroupUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteGroupUserRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{39}
}

func (x *DeleteGroupUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteGroupUserRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

// Promote/demote a user in a group.
type UpdateGroupUserStateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User to change state.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ID of the group.
	GroupId       string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateGroupUserStateRequest) Reset() {
	*x = UpdateGroupUserStateRequest{}
	mi := &file_console_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGroupUserStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupUserStateRequest) ProtoMessage() {}

func (x *UpdateGroupUserStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupUserStateRequest.ProtoReflect.Descriptor instead.
func (*UpdateGroupUserStateRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{40}
}

func (x *UpdateGroupUserStateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateGroupUserStateRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

// Request to reset a user's credentials, password or MFA.
type ResetUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User identifier.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetUserRequest) Reset() {
	*x = ResetUserRequest{}
	mi := &file_console_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetUserRequest) ProtoMessage() {}

func (x *ResetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetUserRequest.ProtoReflect.Descriptor instead.
func (*ResetUserRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{41}
}

func (x *ResetUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Reset a user's mfa setup.
type ResetUserMfaRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User username.
	Username      string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetUserMfaRequest) Reset() {
	*x = ResetUserMfaRequest{}
	mi := &file_console_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetUserMfaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetUserMfaRequest) ProtoMessage() {}

func (x *ResetUserMfaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetUserMfaRequest.ProtoReflect.Descriptor instead.
func (*ResetUserMfaRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{42}
}

func (x *ResetUserMfaRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// Request to reset a user's credentials, password or MFA.
type ResetUserResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An one-time code to be used when re-configuring the password.
	Code          string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetUserResponse) Reset() {
	*x = ResetUserResponse{}
	mi := &file_console_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetUserResponse) ProtoMessage() {}

func (x *ResetUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetUserResponse.ProtoReflect.Descriptor instead.
func (*ResetUserResponse) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{43}
}

func (x *ResetUserResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// Make a user's mfa required or not.
type RequireUserMfaRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User username.
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// Required.
	Required      bool `protobuf:"varint,2,opt,name=required,proto3" json:"required,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequireUserMfaRequest) Reset() {
	*x = RequireUserMfaRequest{}
	mi := &file_console_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequireUserMfaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequireUserMfaRequest) ProtoMessage() {}

func (x *RequireUserMfaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequireUserMfaRequest.ProtoReflect.Descriptor instead.
func (*RequireUserMfaRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{44}
}

func (x *RequireUserMfaRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RequireUserMfaRequest) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

// Remove a leaderboard record
type DeleteLeaderboardRecordRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Leaderboard ID.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Record owner.
	OwnerId       string `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteLeaderboardRecordRequest) Reset() {
	*x = DeleteLeaderboardRecordRequest{}
	mi := &file_console_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteLeaderboardRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLeaderboardRecordRequest) ProtoMessage() {}

func (x *DeleteLeaderboardRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLeaderboardRecordRequest.ProtoReflect.Descriptor instead.
func (*DeleteLeaderboardRecordRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{45}
}

func (x *DeleteLeaderboardRecordRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteLeaderboardRecordRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

// Delete notification
type DeleteNotificationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Notification ID.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNotificationRequest) Reset() {
	*x = DeleteNotificationRequest{}
	mi := &file_console_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotificationRequest) ProtoMessage() {}

func (x *DeleteNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotificationRequest.ProtoReflect.Descriptor instead.
func (*DeleteNotificationRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{46}
}

func (x *DeleteNotificationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Delete an individual storage object.
type DeleteStorageObjectRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Collection.
	Collection string `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	// Key.
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// Owner user ID.
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Version for OCC.
	Version       string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteStorageObjectRequest) Reset() {
	*x = DeleteStorageObjectRequest{}
	mi := &file_console_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteStorageObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStorageObjectRequest) ProtoMessage() {}

func (x *DeleteStorageObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStorageObjectRequest.ProtoReflect.Descriptor instead.
func (*DeleteStorageObjectRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{47}
}

func (x *DeleteStorageObjectRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *DeleteStorageObjectRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DeleteStorageObjectRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteStorageObjectRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// Delete a single wallet ledger item.
type DeleteWalletLedgerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User ID to remove wallet ledger item from.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ID of the wallet ledger item to remove.
	WalletId      string `protobuf:"bytes,2,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteWalletLedgerRequest) Reset() {
	*x = DeleteWalletLedgerRequest{}
	mi := &file_console_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteWalletLedgerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWalletLedgerRequest) ProtoMessage() {}

func (x *DeleteWalletLedgerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWalletLedgerRequest.ProtoReflect.Descriptor instead.
func (*DeleteWalletLedgerRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{48}
}

func (x *DeleteWalletLedgerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteWalletLedgerRequest) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

// Request all inventory items in the economy.
type HiroInventoryListRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user ID to list inventory items for.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The category for the items to filter for, or empty for all.
	ItemCategory  string `protobuf:"bytes,2,opt,name=item_category,json=itemCategory,proto3" json:"item_category,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HiroInventoryListRequest) Reset() {
	*x = HiroInventoryListRequest{}
	mi := &file_console_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HiroInventoryListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HiroInventoryListRequest) ProtoMessage() {}

func (x *HiroInventoryListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HiroInventoryListRequest.ProtoReflect.Descriptor instead.
func (*HiroInventoryListRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{49}
}

func (x *HiroInventoryListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *HiroInventoryListRequest) GetItemCategory() string {
	if x != nil {
		return x.ItemCategory
	}
	return ""
}

// Represents a request to grant items to the user.
type HiroGrantUserInventoryRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user ID to grant inventory items for.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The items to grant.
	Items map[string]int64 `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	// Whether to ignore limits when granting items.
	IgnoreLimits  bool `protobuf:"varint,3,opt,name=ignore_limits,json=ignoreLimits,proto3" json:"ignore_limits,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HiroGrantUserInventoryRequest) Reset() {
	*x = HiroGrantUserInventoryRequest{}
	mi := &file_console_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HiroGrantUserInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HiroGrantUserInventoryRequest) ProtoMessage() {}

func (x *HiroGrantUserInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HiroGrantUserInventoryRequest.ProtoReflect.Descriptor instead.
func (*HiroGrantUserInventoryRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{50}
}

func (x *HiroGrantUserInventoryRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *HiroGrantUserInventoryRequest) GetItems() map[string]int64 {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *HiroGrantUserInventoryRequest) GetIgnoreLimits() bool {
	if x != nil {
		return x.IgnoreLimits
	}
	return false
}

type HiroDeleteUserInventoryItemsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user ID to delete inventory items for.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// list of instance ids
	InstanceIds   []string `protobuf:"bytes,2,rep,name=instance_ids,json=instanceIds,proto3" json:"instance_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HiroDeleteUserInventoryItemsRequest) Reset() {
	*x = HiroDeleteUserInventoryItemsRequest{}
	mi := &file_console_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HiroDeleteUserInventoryItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HiroDeleteUserInventoryItemsRequest) ProtoMessage() {}

func (x *HiroDeleteUserInventoryItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HiroDeleteUserInventoryItemsRequest.ProtoReflect.Descriptor instead.
func (*HiroDeleteUserInventoryItemsRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{51}
}

func (x *HiroDeleteUserInventoryItemsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *HiroDeleteUserInventoryItemsRequest) GetInstanceIds() []string {
	if x != nil {
		return x.InstanceIds
	}
	return nil
}

type HiroUpdateUserInventoryItemsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user ID to update inventory items for.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The item updates to action, keyed by item instance ID.
	ItemUpdates   map[string]*hiro.InventoryUpdateItemProperties `protobuf:"bytes,2,rep,name=item_updates,json=itemUpdates,proto3" json:"item_updates,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HiroUpdateUserInventoryItemsRequest) Reset() {
	*x = HiroUpdateUserInventoryItemsRequest{}
	mi := &file_console_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HiroUpdateUserInventoryItemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HiroUpdateUserInventoryItemsRequest) ProtoMessage() {}

func (x *HiroUpdateUserInventoryItemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HiroUpdateUserInventoryItemsRequest.ProtoReflect.Descriptor instead.
func (*HiroUpdateUserInventoryItemsRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{52}
}

func (x *HiroUpdateUserInventoryItemsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *HiroUpdateUserInventoryItemsRequest) GetItemUpdates() map[string]*hiro.InventoryUpdateItemProperties {
	if x != nil {
		return x.ItemUpdates
	}
	return nil
}

// Request user's progressions.
type HiroProgressionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user ID to list progressions for.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Optional last known progressions state, keyed by progression ID.
	Progressions  map[string]*hiro.Progression `protobuf:"bytes,2,rep,name=progressions,proto3" json:"progressions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HiroProgressionsRequest) Reset() {
	*x = HiroProgressionsRequest{}
	mi := &file_console_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HiroProgressionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HiroProgressionsRequest) ProtoMessage() {}

func (x *HiroProgressionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HiroProgressionsRequest.ProtoReflect.Descriptor instead.
func (*HiroProgressionsRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{53}
}

func (x *HiroProgressionsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *HiroProgressionsRequest) GetProgressions() map[string]*hiro.Progression {
	if x != nil {
		return x.Progressions
	}
	return nil
}

// Request to reset one or more progressions for a user.
type HiroResetProgressionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user ID to reset progressions for.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Progression ids to reset.
	ProgressionIds []string `protobuf:"bytes,2,rep,name=progression_ids,json=progressionIds,proto3" json:"progression_ids,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *HiroResetProgressionsRequest) Reset() {
	*x = HiroResetProgressionsRequest{}
	mi := &file_console_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HiroResetProgressionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HiroResetProgressionsRequest) ProtoMessage() {}

func (x *HiroResetProgressionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HiroResetProgressionsRequest.ProtoReflect.Descriptor instead.
func (*HiroResetProgressionsRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{54}
}

func (x *HiroResetProgressionsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *HiroResetProgressionsRequest) GetProgressionIds() []string {
	if x != nil {
		return x.ProgressionIds
	}
	return nil
}

// Request to unlock one or more progressions for a user.
type HiroUnlockProgressionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user ID to unlock progressions for.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Progression ids to unlock.
	ProgressionIds []string `protobuf:"bytes,2,rep,name=progression_ids,json=progressionIds,proto3" json:"progression_ids,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *HiroUnlockProgressionsRequest) Reset() {
	*x = HiroUnlockProgressionsRequest{}
	mi := &file_console_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HiroUnlockProgressionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HiroUnlockProgressionsRequest) ProtoMessage() {}

func (x *HiroUnlockProgressionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HiroUnlockProgressionsRequest.ProtoReflect.Descriptor instead.
func (*HiroUnlockProgressionsRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{55}
}

func (x *HiroUnlockProgressionsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *HiroUnlockProgressionsRequest) GetProgressionIds() []string {
	if x != nil {
		return x.ProgressionIds
	}
	return nil
}

// Request to update a progression for a user.
type HiroUpdateProgressionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user ID to update progressions for.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Progression ID to update.
	ProgressionId string `protobuf:"bytes,2,opt,name=progression_id,json=progressionId,proto3" json:"progression_id,omitempty"`
	// Counts to apply to the progression.
	Counts        map[string]int64 `protobuf:"bytes,3,rep,name=counts,proto3" json:"counts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HiroUpdateProgressionsRequest) Reset() {
	*x = HiroUpdateProgressionsRequest{}
	mi := &file_console_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HiroUpdateProgressionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HiroUpdateProgressionsRequest) ProtoMessage() {}

func (x *HiroUpdateProgressionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HiroUpdateProgressionsRequest.ProtoReflect.Descriptor instead.
func (*HiroUpdateProgressionsRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{56}
}

func (x *HiroUpdateProgressionsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *HiroUpdateProgressionsRequest) GetProgressionId() string {
	if x != nil {
		return x.ProgressionId
	}
	return ""
}

func (x *HiroUpdateProgressionsRequest) GetCounts() map[string]int64 {
	if x != nil {
		return x.Counts
	}
	return nil
}

// Request to purchase a progression for a user.
type HiroPurchaseProgressionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user ID to purchase progressions for.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Progression ID to purchase.
	ProgressionId string `protobuf:"bytes,2,opt,name=progression_id,json=progressionId,proto3" json:"progression_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HiroPurchaseProgressionsRequest) Reset() {
	*x = HiroPurchaseProgressionsRequest{}
	mi := &file_console_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HiroPurchaseProgressionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HiroPurchaseProgressionsRequest) ProtoMessage() {}

func (x *HiroPurchaseProgressionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HiroPurchaseProgressionsRequest.ProtoReflect.Descriptor instead.
func (*HiroPurchaseProgressionsRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{57}
}

func (x *HiroPurchaseProgressionsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *HiroPurchaseProgressionsRequest) GetProgressionId() string {
	if x != nil {
		return x.ProgressionId
	}
	return ""
}

// Request to modify a user's economy wallet.
type HiroEconomyGrantRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user ID to update economy for.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Currencies to grant.
	Currencies    map[string]int64 `protobuf:"bytes,2,rep,name=currencies,proto3" json:"currencies,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HiroEconomyGrantRequest) Reset() {
	*x = HiroEconomyGrantRequest{}
	mi := &file_console_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HiroEconomyGrantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HiroEconomyGrantRequest) ProtoMessage() {}

func (x *HiroEconomyGrantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HiroEconomyGrantRequest.ProtoReflect.Descriptor instead.
func (*HiroEconomyGrantRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{58}
}

func (x *HiroEconomyGrantRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *HiroEconomyGrantRequest) GetCurrencies() map[string]int64 {
	if x != nil {
		return x.Currencies
	}
	return nil
}

// Request to list a user's stats.
type HiroStatsListRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user ID to list stats for.
	UserId        string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HiroStatsListRequest) Reset() {
	*x = HiroStatsListRequest{}
	mi := &file_console_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HiroStatsListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HiroStatsListRequest) ProtoMessage() {}

func (x *HiroStatsListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HiroStatsListRequest.ProtoReflect.Descriptor instead.
func (*HiroStatsListRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{59}
}

func (x *HiroStatsListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// Request to update a user's stats.
type HiroStatsUpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user ID to update stats for.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Public stat updates.
	Public []*hiro.StatUpdate `protobuf:"bytes,2,rep,name=public,proto3" json:"public,omitempty"`
	// Private stat updates.
	Private       []*hiro.StatUpdate `protobuf:"bytes,3,rep,name=private,proto3" json:"private,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HiroStatsUpdateRequest) Reset() {
	*x = HiroStatsUpdateRequest{}
	mi := &file_console_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HiroStatsUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HiroStatsUpdateRequest) ProtoMessage() {}

func (x *HiroStatsUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HiroStatsUpdateRequest.ProtoReflect.Descriptor instead.
func (*HiroStatsUpdateRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{60}
}

func (x *HiroStatsUpdateRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *HiroStatsUpdateRequest) GetPublic() []*hiro.StatUpdate {
	if x != nil {
		return x.Public
	}
	return nil
}

func (x *HiroStatsUpdateRequest) GetPrivate() []*hiro.StatUpdate {
	if x != nil {
		return x.Private
	}
	return nil
}

// Request to update a user's energy.
type HiroEnergyGrantRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user ID to update energy for.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Energy amounts to grant.
	Amounts       map[string]int32 `protobuf:"bytes,2,rep,name=amounts,proto3" json:"amounts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HiroEnergyGrantRequest) Reset() {
	*x = HiroEnergyGrantRequest{}
	mi := &file_console_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HiroEnergyGrantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HiroEnergyGrantRequest) ProtoMessage() {}

func (x *HiroEnergyGrantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HiroEnergyGrantRequest.ProtoReflect.Descriptor instead.
func (*HiroEnergyGrantRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{61}
}

func (x *HiroEnergyGrantRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *HiroEnergyGrantRequest) GetAmounts() map[string]int32 {
	if x != nil {
		return x.Amounts
	}
	return nil
}

// Which Console extensions are registered and available.
type Extensions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Is Hiro registered.
	Hiro bool `protobuf:"varint,1,opt,name=hiro,proto3" json:"hiro,omitempty"`
	// Hiro registered systems, if hiro is available.
	HiroSystems *Extensions_HiroSystems `protobuf:"bytes,2,opt,name=hiro_systems,json=hiroSystems,proto3" json:"hiro_systems,omitempty"`
	// Is Satori registered.
	Satori        bool `protobuf:"varint,3,opt,name=satori,proto3" json:"satori,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Extensions) Reset() {
	*x = Extensions{}
	mi := &file_console_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Extensions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Extensions) ProtoMessage() {}

func (x *Extensions) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Extensions.ProtoReflect.Descriptor instead.
func (*Extensions) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{62}
}

func (x *Extensions) GetHiro() bool {
	if x != nil {
		return x.Hiro
	}
	return false
}

func (x *Extensions) GetHiroSystems() *Extensions_HiroSystems {
	if x != nil {
		return x.HiroSystems
	}
	return nil
}

func (x *Extensions) GetSatori() bool {
	if x != nil {
		return x.Satori
	}
	return false
}

// A leaderboard.
type Leaderboard struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the leaderboard.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The title for the leaderboard.
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// The description of the leaderboard. May be blank.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// The category of the leaderboard. e.g. "vip" could be category 1.
	Category uint32 `protobuf:"varint,4,opt,name=category,proto3" json:"category,omitempty"`
	// ASC or DESC sort mode of scores in the leaderboard.
	SortOrder uint32 `protobuf:"varint,5,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order,omitempty"`
	// The current number of players in the leaderboard.
	Size uint32 `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	// The maximum number of players for the leaderboard.
	MaxSize uint32 `protobuf:"varint,7,opt,name=max_size,json=maxSize,proto3" json:"max_size,omitempty"`
	// The maximum score updates allowed per player for the current leaderboard.
	MaxNumScore uint32 `protobuf:"varint,8,opt,name=max_num_score,json=maxNumScore,proto3" json:"max_num_score,omitempty"`
	// The operator of the leaderboard
	Operator uint32 `protobuf:"varint,9,opt,name=operator,proto3" json:"operator,omitempty"`
	// The UNIX time when the leaderboard stops being active until next reset. A computed value.
	EndActive uint32 `protobuf:"varint,10,opt,name=end_active,json=endActive,proto3" json:"end_active,omitempty"`
	// Reset cron expression.
	ResetSchedule string `protobuf:"bytes,11,opt,name=reset_schedule,json=resetSchedule,proto3" json:"reset_schedule,omitempty"`
	// Additional information stored as a JSON object.
	Metadata string `protobuf:"bytes,12,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// The UNIX time when the leaderboard was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The UNIX time when the leaderboard will start.
	StartTime *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// The UNIX time when the leaderboard will be stopped.
	EndTime *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// Duration of the tournament in seconds.
	Duration uint32 `protobuf:"varint,16,opt,name=duration,proto3" json:"duration,omitempty"`
	// The UNIX time when the leaderboard start being active. A computed value.
	StartActive uint32 `protobuf:"varint,17,opt,name=start_active,json=startActive,proto3" json:"start_active,omitempty"`
	// Join required.
	JoinRequired bool `protobuf:"varint,18,opt,name=join_required,json=joinRequired,proto3" json:"join_required,omitempty"`
	// Authoritative.
	Authoritative bool `protobuf:"varint,19,opt,name=authoritative,proto3" json:"authoritative,omitempty"`
	// Tournament.
	Tournament bool `protobuf:"varint,20,opt,name=tournament,proto3" json:"tournament,omitempty"`
	// The UNIX time when the tournament was last reset. A computed value.
	PrevReset uint32 `protobuf:"varint,21,opt,name=prev_reset,json=prevReset,proto3" json:"prev_reset,omitempty"`
	// The UNIX time when the tournament is next playable. A computed value.
	NextReset     uint32 `protobuf:"varint,22,opt,name=next_reset,json=nextReset,proto3" json:"next_reset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Leaderboard) Reset() {
	*x = Leaderboard{}
	mi := &file_console_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Leaderboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Leaderboard) ProtoMessage() {}

func (x *Leaderboard) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Leaderboard.ProtoReflect.Descriptor instead.
func (*Leaderboard) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{63}
}

func (x *Leaderboard) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Leaderboard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Leaderboard) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Leaderboard) GetCategory() uint32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *Leaderboard) GetSortOrder() uint32 {
	if x != nil {
		return x.SortOrder
	}
	return 0
}

func (x *Leaderboard) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Leaderboard) GetMaxSize() uint32 {
	if x != nil {
		return x.MaxSize
	}
	return 0
}

func (x *Leaderboard) GetMaxNumScore() uint32 {
	if x != nil {
		return x.MaxNumScore
	}
	return 0
}

func (x *Leaderboard) GetOperator() uint32 {
	if x != nil {
		return x.Operator
	}
	return 0
}

func (x *Leaderboard) GetEndActive() uint32 {
	if x != nil {
		return x.EndActive
	}
	return 0
}

func (x *Leaderboard) GetResetSchedule() string {
	if x != nil {
		return x.ResetSchedule
	}
	return ""
}

func (x *Leaderboard) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *Leaderboard) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Leaderboard) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *Leaderboard) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *Leaderboard) GetDuration() uint32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Leaderboard) GetStartActive() uint32 {
	if x != nil {
		return x.StartActive
	}
	return 0
}

func (x *Leaderboard) GetJoinRequired() bool {
	if x != nil {
		return x.JoinRequired
	}
	return false
}

func (x *Leaderboard) GetAuthoritative() bool {
	if x != nil {
		return x.Authoritative
	}
	return false
}

func (x *Leaderboard) GetTournament() bool {
	if x != nil {
		return x.Tournament
	}
	return false
}

func (x *Leaderboard) GetPrevReset() uint32 {
	if x != nil {
		return x.PrevReset
	}
	return 0
}

func (x *Leaderboard) GetNextReset() uint32 {
	if x != nil {
		return x.NextReset
	}
	return 0
}

// List leaderboards.
type LeaderboardListRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An optional cursor to paginate from.
	Cursor        string `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaderboardListRequest) Reset() {
	*x = LeaderboardListRequest{}
	mi := &file_console_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaderboardListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardListRequest) ProtoMessage() {}

func (x *LeaderboardListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardListRequest.ProtoReflect.Descriptor instead.
func (*LeaderboardListRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{64}
}

func (x *LeaderboardListRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

// A list of leaderboards.
type LeaderboardList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of leaderboards returned.
	Leaderboards []*Leaderboard `protobuf:"bytes,1,rep,name=leaderboards,proto3" json:"leaderboards,omitempty"`
	// Total count of leaderboards and tournaments.
	Total int32 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	// A cursor, if any.
	Cursor        string `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaderboardList) Reset() {
	*x = LeaderboardList{}
	mi := &file_console_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaderboardList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardList) ProtoMessage() {}

func (x *LeaderboardList) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardList.ProtoReflect.Descriptor instead.
func (*LeaderboardList) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{65}
}

func (x *LeaderboardList) GetLeaderboards() []*Leaderboard {
	if x != nil {
		return x.Leaderboards
	}
	return nil
}

func (x *LeaderboardList) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *LeaderboardList) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

// Get Leaderboard.
type LeaderboardRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Leaderboard ID
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaderboardRequest) Reset() {
	*x = LeaderboardRequest{}
	mi := &file_console_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaderboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardRequest) ProtoMessage() {}

func (x *LeaderboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardRequest.ProtoReflect.Descriptor instead.
func (*LeaderboardRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{66}
}

func (x *LeaderboardRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// List (and optionally filter) users.
type ListAccountsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User ID or username filter.
	Filter string `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	// Search only recorded deletes.
	Tombstones bool `protobuf:"varint,2,opt,name=tombstones,proto3" json:"tombstones,omitempty"`
	// Cursor to start from
	Cursor        string `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAccountsRequest) Reset() {
	*x = ListAccountsRequest{}
	mi := &file_console_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountsRequest) ProtoMessage() {}

func (x *ListAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountsRequest.ProtoReflect.Descriptor instead.
func (*ListAccountsRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{67}
}

func (x *ListAccountsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListAccountsRequest) GetTombstones() bool {
	if x != nil {
		return x.Tombstones
	}
	return false
}

func (x *ListAccountsRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

// List selected channel messages.
type ListChannelMessagesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Type of the chat channel
	Type ListChannelMessagesRequest_Type `protobuf:"varint,1,opt,name=type,proto3,enum=nakama.console.ListChannelMessagesRequest_Type" json:"type,omitempty"`
	// Label of the channel, if a standard chat room
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	// Group ID of the channel, if a group chat
	GroupId string `protobuf:"bytes,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// User IDs, if a direct chat
	UserIdOne string `protobuf:"bytes,4,opt,name=user_id_one,json=userIdOne,proto3" json:"user_id_one,omitempty"`
	UserIdTwo string `protobuf:"bytes,5,opt,name=user_id_two,json=userIdTwo,proto3" json:"user_id_two,omitempty"`
	// Cursor to start from
	Cursor        string `protobuf:"bytes,6,opt,name=cursor,proto3" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChannelMessagesRequest) Reset() {
	*x = ListChannelMessagesRequest{}
	mi := &file_console_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChannelMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChannelMessagesRequest) ProtoMessage() {}

func (x *ListChannelMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChannelMessagesRequest.ProtoReflect.Descriptor instead.
func (*ListChannelMessagesRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{68}
}

func (x *ListChannelMessagesRequest) GetType() ListChannelMessagesRequest_Type {
	if x != nil {
		return x.Type
	}
	return ListChannelMessagesRequest_UNKNOWN
}

func (x *ListChannelMessagesRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ListChannelMessagesRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *ListChannelMessagesRequest) GetUserIdOne() string {
	if x != nil {
		return x.UserIdOne
	}
	return ""
}

func (x *ListChannelMessagesRequest) GetUserIdTwo() string {
	if x != nil {
		return x.UserIdTwo
	}
	return ""
}

func (x *ListChannelMessagesRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

// List (and optionally filter) groups.
type ListGroupsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User ID or username filter.
	Filter string `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	// Cursor to start from
	Cursor        string `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListGroupsRequest) Reset() {
	*x = ListGroupsRequest{}
	mi := &file_console_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupsRequest) ProtoMessage() {}

func (x *ListGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupsRequest.ProtoReflect.Descriptor instead.
func (*ListGroupsRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{69}
}

func (x *ListGroupsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListGroupsRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

// List realtime matches.
type ListMatchesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Limit the number of returned matches.
	Limit *wrapperspb.Int32Value `protobuf:"bytes,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Authoritative or relayed matches, or null for both.
	Authoritative *wrapperspb.BoolValue `protobuf:"bytes,2,opt,name=authoritative,proto3" json:"authoritative,omitempty"`
	// Label filter.
	Label *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	// Minimum user count.
	MinSize *wrapperspb.Int32Value `protobuf:"bytes,4,opt,name=min_size,json=minSize,proto3" json:"min_size,omitempty"`
	// Maximum user count.
	MaxSize *wrapperspb.Int32Value `protobuf:"bytes,5,opt,name=max_size,json=maxSize,proto3" json:"max_size,omitempty"`
	// Match ID.
	MatchId string `protobuf:"bytes,6,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	// Arbitrary label query.
	Query *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=query,proto3" json:"query,omitempty"`
	// Node name filter, optional.
	Node          *wrapperspb.StringValue `protobuf:"bytes,8,opt,name=node,proto3" json:"node,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMatchesRequest) Reset() {
	*x = ListMatchesRequest{}
	mi := &file_console_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMatchesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMatchesRequest) ProtoMessage() {}

func (x *ListMatchesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMatchesRequest.ProtoReflect.Descriptor instead.
func (*ListMatchesRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{70}
}

func (x *ListMatchesRequest) GetLimit() *wrapperspb.Int32Value {
	if x != nil {
		return x.Limit
	}
	return nil
}

func (x *ListMatchesRequest) GetAuthoritative() *wrapperspb.BoolValue {
	if x != nil {
		return x.Authoritative
	}
	return nil
}

func (x *ListMatchesRequest) GetLabel() *wrapperspb.StringValue {
	if x != nil {
		return x.Label
	}
	return nil
}

func (x *ListMatchesRequest) GetMinSize() *wrapperspb.Int32Value {
	if x != nil {
		return x.MinSize
	}
	return nil
}

func (x *ListMatchesRequest) GetMaxSize() *wrapperspb.Int32Value {
	if x != nil {
		return x.MaxSize
	}
	return nil
}

func (x *ListMatchesRequest) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *ListMatchesRequest) GetQuery() *wrapperspb.StringValue {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ListMatchesRequest) GetNode() *wrapperspb.StringValue {
	if x != nil {
		return x.Node
	}
	return nil
}

// List notifications.
type ListNotificationsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User ID to filter purchases for
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The number of notifications to get.
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// A cursor to page through notifications.
	Cursor        string `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotificationsRequest) Reset() {
	*x = ListNotificationsRequest{}
	mi := &file_console_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationsRequest) ProtoMessage() {}

func (x *ListNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationsRequest.ProtoReflect.Descriptor instead.
func (*ListNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{71}
}

func (x *ListNotificationsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListNotificationsRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListNotificationsRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

// List validated purchases.
type ListPurchasesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User ID to filter purchases for
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Max number of results per page
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// Cursor to retrieve a page of records from
	Cursor string `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	// Optional timestamp threshold to list purchases after.
	After *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=after,proto3" json:"after,omitempty"`
	// Optional timestamp threshold to list purchases before.
	Before *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=before,proto3" json:"before,omitempty"`
	// Filter to use when searching for specific purchases.
	Filter        string `protobuf:"bytes,6,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPurchasesRequest) Reset() {
	*x = ListPurchasesRequest{}
	mi := &file_console_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPurchasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPurchasesRequest) ProtoMessage() {}

func (x *ListPurchasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPurchasesRequest.ProtoReflect.Descriptor instead.
func (*ListPurchasesRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{72}
}

func (x *ListPurchasesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListPurchasesRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListPurchasesRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *ListPurchasesRequest) GetAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.After
	}
	return nil
}

func (x *ListPurchasesRequest) GetBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *ListPurchasesRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

// List subscriptions.
type ListSubscriptionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UserID to filter subscriptions for
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Max number of results per page
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// Cursor to retrieve a page of records from
	Cursor string `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	// Optional timestamp threshold to list subscriptions after.
	After *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=after,proto3" json:"after,omitempty"`
	// Optional timestamp threshold to list subscriptions before.
	Before *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=before,proto3" json:"before,omitempty"`
	// Filter to use when searching for specific subscriptions.
	Filter        string `protobuf:"bytes,6,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSubscriptionsRequest) Reset() {
	*x = ListSubscriptionsRequest{}
	mi := &file_console_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSubscriptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubscriptionsRequest) ProtoMessage() {}

func (x *ListSubscriptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubscriptionsRequest.ProtoReflect.Descriptor instead.
func (*ListSubscriptionsRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{73}
}

func (x *ListSubscriptionsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListSubscriptionsRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListSubscriptionsRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *ListSubscriptionsRequest) GetAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.After
	}
	return nil
}

func (x *ListSubscriptionsRequest) GetBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *ListSubscriptionsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

// List (and optionally filter) storage objects.
type ListStorageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User ID to filter objects for.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Key to filter objects for
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// Collection name to filter objects for
	Collection string `protobuf:"bytes,3,opt,name=collection,proto3" json:"collection,omitempty"`
	// Cursor to retrieve a page of records from
	Cursor        string `protobuf:"bytes,4,opt,name=cursor,proto3" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListStorageRequest) Reset() {
	*x = ListStorageRequest{}
	mi := &file_console_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStorageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStorageRequest) ProtoMessage() {}

func (x *ListStorageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStorageRequest.ProtoReflect.Descriptor instead.
func (*ListStorageRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{74}
}

func (x *ListStorageRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListStorageRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ListStorageRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *ListStorageRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

// Match state
type MatchState struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Presence list.
	Presences []*rtapi.UserPresence `protobuf:"bytes,1,rep,name=presences,proto3" json:"presences,omitempty"`
	// Current tick number.
	Tick int64 `protobuf:"varint,2,opt,name=tick,proto3" json:"tick,omitempty"`
	// State.
	State         string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchState) Reset() {
	*x = MatchState{}
	mi := &file_console_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchState) ProtoMessage() {}

func (x *MatchState) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchState.ProtoReflect.Descriptor instead.
func (*MatchState) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{75}
}

func (x *MatchState) GetPresences() []*rtapi.UserPresence {
	if x != nil {
		return x.Presences
	}
	return nil
}

func (x *MatchState) GetTick() int64 {
	if x != nil {
		return x.Tick
	}
	return 0
}

func (x *MatchState) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

// Get current state of a running match
type MatchStateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Match ID
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchStateRequest) Reset() {
	*x = MatchStateRequest{}
	mi := &file_console_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchStateRequest) ProtoMessage() {}

func (x *MatchStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchStateRequest.ProtoReflect.Descriptor instead.
func (*MatchStateRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{76}
}

func (x *MatchStateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Notification struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Notification.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Subject of the notification.
	Subject string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	// Content of the notification in JSON.
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	// Category code for this notification.
	Code int32 `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`
	// ID of the sender, if a user. Otherwise 'null'.
	SenderId string `protobuf:"bytes,5,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	// The UNIX time (for gRPC clients) or ISO string (for REST clients) when the notification was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// True if this notification was persisted to the database.
	Persistent bool `protobuf:"varint,7,opt,name=persistent,proto3" json:"persistent,omitempty"`
	// User id.
	UserId        string `protobuf:"bytes,8,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Notification) Reset() {
	*x = Notification{}
	mi := &file_console_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{77}
}

func (x *Notification) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Notification) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Notification) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Notification) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Notification) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *Notification) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Notification) GetPersistent() bool {
	if x != nil {
		return x.Persistent
	}
	return false
}

func (x *Notification) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type NotificationList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of notifications.
	Notifications []*Notification `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	// Next page cursor if any.
	NextCursor string `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	// Previous page cursor if any.
	PrevCursor    string `protobuf:"bytes,3,opt,name=prev_cursor,json=prevCursor,proto3" json:"prev_cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationList) Reset() {
	*x = NotificationList{}
	mi := &file_console_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationList) ProtoMessage() {}

func (x *NotificationList) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationList.ProtoReflect.Descriptor instead.
func (*NotificationList) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{78}
}

func (x *NotificationList) GetNotifications() []*Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *NotificationList) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

func (x *NotificationList) GetPrevCursor() string {
	if x != nil {
		return x.PrevCursor
	}
	return ""
}

type DeleteChannelMessagesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Total number of messages deleted.
	Total         int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteChannelMessagesResponse) Reset() {
	*x = DeleteChannelMessagesResponse{}
	mi := &file_console_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteChannelMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChannelMessagesResponse) ProtoMessage() {}

func (x *DeleteChannelMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChannelMessagesResponse.ProtoReflect.Descriptor instead.
func (*DeleteChannelMessagesResponse) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{79}
}

func (x *DeleteChannelMessagesResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// List of storage objects.
type StorageList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of storage objects matching list/filter operation.
	Objects []*StorageListObject `protobuf:"bytes,1,rep,name=objects,proto3" json:"objects,omitempty"`
	// Approximate total number of storage objects.
	TotalCount int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Next page cursor if any
	NextCursor    string `protobuf:"bytes,3,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageList) Reset() {
	*x = StorageList{}
	mi := &file_console_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageList) ProtoMessage() {}

func (x *StorageList) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageList.ProtoReflect.Descriptor instead.
func (*StorageList) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{80}
}

func (x *StorageList) GetObjects() []*StorageListObject {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *StorageList) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *StorageList) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

type StorageCollectionsList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Available collection names in the whole of the storage
	Collections   []string `protobuf:"bytes,3,rep,name=collections,proto3" json:"collections,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageCollectionsList) Reset() {
	*x = StorageCollectionsList{}
	mi := &file_console_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageCollectionsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageCollectionsList) ProtoMessage() {}

func (x *StorageCollectionsList) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageCollectionsList.ProtoReflect.Descriptor instead.
func (*StorageCollectionsList) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{81}
}

func (x *StorageCollectionsList) GetCollections() []string {
	if x != nil {
		return x.Collections
	}
	return nil
}

// Unlink a particular device ID from a user's account.
type UnlinkDeviceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User ID to unlink from.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Device ID to unlink.
	DeviceId      string `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlinkDeviceRequest) Reset() {
	*x = UnlinkDeviceRequest{}
	mi := &file_console_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlinkDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlinkDeviceRequest) ProtoMessage() {}

func (x *UnlinkDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlinkDeviceRequest.ProtoReflect.Descriptor instead.
func (*UnlinkDeviceRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{82}
}

func (x *UnlinkDeviceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UnlinkDeviceRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

// Update user account information.
type UpdateAccountRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User ID to update.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Username.
	Username *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	// Display name.
	DisplayName *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Metadata.
	Metadata *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Avatar URL.
	AvatarUrl *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	// Langtag.
	LangTag *wrapperspb.StringValue `protobuf:"bytes,6,opt,name=lang_tag,json=langTag,proto3" json:"lang_tag,omitempty"`
	// Location.
	Location *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=location,proto3" json:"location,omitempty"`
	// Timezone.
	Timezone *wrapperspb.StringValue `protobuf:"bytes,8,opt,name=timezone,proto3" json:"timezone,omitempty"`
	// Custom ID.
	CustomId *wrapperspb.StringValue `protobuf:"bytes,9,opt,name=custom_id,json=customId,proto3" json:"custom_id,omitempty"`
	// Email.
	Email *wrapperspb.StringValue `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`
	// Password.
	Password *wrapperspb.StringValue `protobuf:"bytes,11,opt,name=password,proto3" json:"password,omitempty"`
	// Device ID modifications.
	DeviceIds map[string]string `protobuf:"bytes,12,rep,name=device_ids,json=deviceIds,proto3" json:"device_ids,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Wallet.
	Wallet        *wrapperspb.StringValue `protobuf:"bytes,13,opt,name=wallet,proto3" json:"wallet,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAccountRequest) Reset() {
	*x = UpdateAccountRequest{}
	mi := &file_console_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountRequest) ProtoMessage() {}

func (x *UpdateAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountRequest.ProtoReflect.Descriptor instead.
func (*UpdateAccountRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{83}
}

func (x *UpdateAccountRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateAccountRequest) GetUsername() *wrapperspb.StringValue {
	if x != nil {
		return x.Username
	}
	return nil
}

func (x *UpdateAccountRequest) GetDisplayName() *wrapperspb.StringValue {
	if x != nil {
		return x.DisplayName
	}
	return nil
}

func (x *UpdateAccountRequest) GetMetadata() *wrapperspb.StringValue {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UpdateAccountRequest) GetAvatarUrl() *wrapperspb.StringValue {
	if x != nil {
		return x.AvatarUrl
	}
	return nil
}

func (x *UpdateAccountRequest) GetLangTag() *wrapperspb.StringValue {
	if x != nil {
		return x.LangTag
	}
	return nil
}

func (x *UpdateAccountRequest) GetLocation() *wrapperspb.StringValue {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *UpdateAccountRequest) GetTimezone() *wrapperspb.StringValue {
	if x != nil {
		return x.Timezone
	}
	return nil
}

func (x *UpdateAccountRequest) GetCustomId() *wrapperspb.StringValue {
	if x != nil {
		return x.CustomId
	}
	return nil
}

func (x *UpdateAccountRequest) GetEmail() *wrapperspb.StringValue {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *UpdateAccountRequest) GetPassword() *wrapperspb.StringValue {
	if x != nil {
		return x.Password
	}
	return nil
}

func (x *UpdateAccountRequest) GetDeviceIds() map[string]string {
	if x != nil {
		return x.DeviceIds
	}
	return nil
}

func (x *UpdateAccountRequest) GetWallet() *wrapperspb.StringValue {
	if x != nil {
		return x.Wallet
	}
	return nil
}

// Update group information.
type UpdateGroupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Group ID to update.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name.
	Name *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Description.
	Description *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Langtag.
	LangTag *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=lang_tag,json=langTag,proto3" json:"lang_tag,omitempty"`
	// Metadata.
	Metadata *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Avatar URL.
	AvatarUrl *wrapperspb.StringValue `protobuf:"bytes,6,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	// Anyone can join open groups, otherwise only admins can accept members.
	Open *wrapperspb.BoolValue `protobuf:"bytes,7,opt,name=open,proto3" json:"open,omitempty"`
	// The maximum number of members allowed.
	MaxCount      *wrapperspb.Int32Value `protobuf:"bytes,8,opt,name=max_count,json=maxCount,proto3" json:"max_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateGroupRequest) Reset() {
	*x = UpdateGroupRequest{}
	mi := &file_console_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupRequest) ProtoMessage() {}

func (x *UpdateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupRequest.ProtoReflect.Descriptor instead.
func (*UpdateGroupRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{84}
}

func (x *UpdateGroupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateGroupRequest) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *UpdateGroupRequest) GetDescription() *wrapperspb.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *UpdateGroupRequest) GetLangTag() *wrapperspb.StringValue {
	if x != nil {
		return x.LangTag
	}
	return nil
}

func (x *UpdateGroupRequest) GetMetadata() *wrapperspb.StringValue {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UpdateGroupRequest) GetAvatarUrl() *wrapperspb.StringValue {
	if x != nil {
		return x.AvatarUrl
	}
	return nil
}

func (x *UpdateGroupRequest) GetOpen() *wrapperspb.BoolValue {
	if x != nil {
		return x.Open
	}
	return nil
}

func (x *UpdateGroupRequest) GetMaxCount() *wrapperspb.Int32Value {
	if x != nil {
		return x.MaxCount
	}
	return nil
}

// The identifier for a user account.
type Username struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique username of the user account.
	Username      string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Username) Reset() {
	*x = Username{}
	mi := &file_console_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Username) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Username) ProtoMessage() {}

func (x *Username) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Username.ProtoReflect.Descriptor instead.
func (*Username) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{85}
}

func (x *Username) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// A console user
type User struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User identifier.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Username of the user
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	// Email of the user
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	// ACL.
	Acl map[string]*Permissions `protobuf:"bytes,4,rep,name=acl,proto3" json:"acl,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Whether the user is required to setup MFA.
	MfaRequired bool `protobuf:"varint,5,opt,name=mfa_required,json=mfaRequired,proto3" json:"mfa_required,omitempty"`
	// Whether the user has MFA enabled.
	MfaEnabled bool `protobuf:"varint,6,opt,name=mfa_enabled,json=mfaEnabled,proto3" json:"mfa_enabled,omitempty"`
	// User's create time
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// User's update time
	UpdateTime    *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_console_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{86}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetAcl() map[string]*Permissions {
	if x != nil {
		return x.Acl
	}
	return nil
}

func (x *User) GetMfaRequired() bool {
	if x != nil {
		return x.MfaRequired
	}
	return false
}

func (x *User) GetMfaEnabled() bool {
	if x != nil {
		return x.MfaEnabled
	}
	return false
}

func (x *User) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *User) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

// A list of console users.
type UserList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of users.
	Users         []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserList) Reset() {
	*x = UserList{}
	mi := &file_console_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserList) ProtoMessage() {}

func (x *UserList) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserList.ProtoReflect.Descriptor instead.
func (*UserList) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{87}
}

func (x *UserList) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

// List of nodes and their stats.
type StatusList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of nodes and their stats.
	Nodes []*StatusList_Status `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	// Timestamp
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusList) Reset() {
	*x = StatusList{}
	mi := &file_console_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusList) ProtoMessage() {}

func (x *StatusList) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusList.ProtoReflect.Descriptor instead.
func (*StatusList) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{88}
}

func (x *StatusList) GetNodes() []*StatusList_Status {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *StatusList) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Runtime information
type RuntimeInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Lua registered RPC functions
	LuaRpcFunctions []string `protobuf:"bytes,1,rep,name=lua_rpc_functions,json=luaRpcFunctions,proto3" json:"lua_rpc_functions,omitempty"`
	// Go registered RPC functions
	GoRpcFunctions []string `protobuf:"bytes,2,rep,name=go_rpc_functions,json=goRpcFunctions,proto3" json:"go_rpc_functions,omitempty"`
	// JavaScript registered RPC functions
	JsRpcFunctions []string `protobuf:"bytes,3,rep,name=js_rpc_functions,json=jsRpcFunctions,proto3" json:"js_rpc_functions,omitempty"`
	// Go loaded modules
	GoModules []*RuntimeInfo_ModuleInfo `protobuf:"bytes,4,rep,name=go_modules,json=goModules,proto3" json:"go_modules,omitempty"`
	// Lua loaded modules
	LuaModules []*RuntimeInfo_ModuleInfo `protobuf:"bytes,5,rep,name=lua_modules,json=luaModules,proto3" json:"lua_modules,omitempty"`
	// JavaScript loaded modules
	JsModules     []*RuntimeInfo_ModuleInfo `protobuf:"bytes,6,rep,name=js_modules,json=jsModules,proto3" json:"js_modules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuntimeInfo) Reset() {
	*x = RuntimeInfo{}
	mi := &file_console_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeInfo) ProtoMessage() {}

func (x *RuntimeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeInfo.ProtoReflect.Descriptor instead.
func (*RuntimeInfo) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{89}
}

func (x *RuntimeInfo) GetLuaRpcFunctions() []string {
	if x != nil {
		return x.LuaRpcFunctions
	}
	return nil
}

func (x *RuntimeInfo) GetGoRpcFunctions() []string {
	if x != nil {
		return x.GoRpcFunctions
	}
	return nil
}

func (x *RuntimeInfo) GetJsRpcFunctions() []string {
	if x != nil {
		return x.JsRpcFunctions
	}
	return nil
}

func (x *RuntimeInfo) GetGoModules() []*RuntimeInfo_ModuleInfo {
	if x != nil {
		return x.GoModules
	}
	return nil
}

func (x *RuntimeInfo) GetLuaModules() []*RuntimeInfo_ModuleInfo {
	if x != nil {
		return x.LuaModules
	}
	return nil
}

func (x *RuntimeInfo) GetJsModules() []*RuntimeInfo_ModuleInfo {
	if x != nil {
		return x.JsModules
	}
	return nil
}

// An individual update to a user's wallet.
type WalletLedger struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identifier of this wallet change.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The user ID this wallet ledger item belongs to.
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The changeset.
	Changeset string `protobuf:"bytes,3,opt,name=changeset,proto3" json:"changeset,omitempty"`
	// Any associated metadata.
	Metadata string `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// The UNIX time when the wallet ledger item was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The UNIX time when the wallet ledger item was updated.
	UpdateTime    *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WalletLedger) Reset() {
	*x = WalletLedger{}
	mi := &file_console_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WalletLedger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletLedger) ProtoMessage() {}

func (x *WalletLedger) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletLedger.ProtoReflect.Descriptor instead.
func (*WalletLedger) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{90}
}

func (x *WalletLedger) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WalletLedger) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *WalletLedger) GetChangeset() string {
	if x != nil {
		return x.Changeset
	}
	return ""
}

func (x *WalletLedger) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *WalletLedger) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *WalletLedger) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

// List of wallet ledger items for a particular user.
type WalletLedgerList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of wallet ledger items.
	Items []*WalletLedger `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// The cursor to send when retrieving the next older page, if any.
	NextCursor string `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	// The cursor to send when retrieving the previous page newer, if any.
	PrevCursor    string `protobuf:"bytes,3,opt,name=prev_cursor,json=prevCursor,proto3" json:"prev_cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WalletLedgerList) Reset() {
	*x = WalletLedgerList{}
	mi := &file_console_proto_msgTypes[91]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WalletLedgerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletLedgerList) ProtoMessage() {}

func (x *WalletLedgerList) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[91]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletLedgerList.ProtoReflect.Descriptor instead.
func (*WalletLedgerList) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{91}
}

func (x *WalletLedgerList) GetItems() []*WalletLedger {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *WalletLedgerList) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

func (x *WalletLedgerList) GetPrevCursor() string {
	if x != nil {
		return x.PrevCursor
	}
	return ""
}

// Write a new storage object or update an existing one.
type WriteStorageObjectRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Collection.
	Collection string `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	// Key.
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// Owner user ID.
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Value.
	Value string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	// Version for OCC.
	Version string `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	// Read permission value.
	PermissionRead *wrapperspb.Int32Value `protobuf:"bytes,6,opt,name=permission_read,json=permissionRead,proto3" json:"permission_read,omitempty"`
	// Write permission value.
	PermissionWrite *wrapperspb.Int32Value `protobuf:"bytes,7,opt,name=permission_write,json=permissionWrite,proto3" json:"permission_write,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *WriteStorageObjectRequest) Reset() {
	*x = WriteStorageObjectRequest{}
	mi := &file_console_proto_msgTypes[92]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteStorageObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteStorageObjectRequest) ProtoMessage() {}

func (x *WriteStorageObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[92]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteStorageObjectRequest.ProtoReflect.Descriptor instead.
func (*WriteStorageObjectRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{92}
}

func (x *WriteStorageObjectRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *WriteStorageObjectRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WriteStorageObjectRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *WriteStorageObjectRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *WriteStorageObjectRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *WriteStorageObjectRequest) GetPermissionRead() *wrapperspb.Int32Value {
	if x != nil {
		return x.PermissionRead
	}
	return nil
}

func (x *WriteStorageObjectRequest) GetPermissionWrite() *wrapperspb.Int32Value {
	if x != nil {
		return x.PermissionWrite
	}
	return nil
}

type GetWalletLedgerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the user account.
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// Max number of results per page.
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// Cursor to retrieve a page of records from.
	Cursor string `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	// Optional timestamp threshold to list wallet ledger records after.
	After *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=after,proto3" json:"after,omitempty"`
	// Optional timestamp threshold to list wallet ledger records before.
	Before        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=before,proto3" json:"before,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWalletLedgerRequest) Reset() {
	*x = GetWalletLedgerRequest{}
	mi := &file_console_proto_msgTypes[93]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletLedgerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletLedgerRequest) ProtoMessage() {}

func (x *GetWalletLedgerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[93]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletLedgerRequest.ProtoReflect.Descriptor instead.
func (*GetWalletLedgerRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{93}
}

func (x *GetWalletLedgerRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *GetWalletLedgerRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetWalletLedgerRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *GetWalletLedgerRequest) GetAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.After
	}
	return nil
}

func (x *GetWalletLedgerRequest) GetBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.Before
	}
	return nil
}

type GetNotificationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Notification id.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotificationRequest) Reset() {
	*x = GetNotificationRequest{}
	mi := &file_console_proto_msgTypes[94]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationRequest) ProtoMessage() {}

func (x *GetNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[94]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationRequest.ProtoReflect.Descriptor instead.
func (*GetNotificationRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{94}
}

func (x *GetNotificationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetPurchaseRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Purchase original transaction id.
	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPurchaseRequest) Reset() {
	*x = GetPurchaseRequest{}
	mi := &file_console_proto_msgTypes[95]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPurchaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPurchaseRequest) ProtoMessage() {}

func (x *GetPurchaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[95]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPurchaseRequest.ProtoReflect.Descriptor instead.
func (*GetPurchaseRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{95}
}

func (x *GetPurchaseRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type GetSubscriptionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Subscription original transaction id.
	OriginalTransactionId string `protobuf:"bytes,1,opt,name=original_transaction_id,json=originalTransactionId,proto3" json:"original_transaction_id,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GetSubscriptionRequest) Reset() {
	*x = GetSubscriptionRequest{}
	mi := &file_console_proto_msgTypes[96]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionRequest) ProtoMessage() {}

func (x *GetSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[96]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*GetSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{96}
}

func (x *GetSubscriptionRequest) GetOriginalTransactionId() string {
	if x != nil {
		return x.OriginalTransactionId
	}
	return ""
}

// An object within the storage engine.
type StorageListObject struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The collection which stores the object.
	Collection string `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	// The key of the object within the collection.
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// The user owner of the object.
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The version hash of the object.
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	// The read access permissions for the object.
	PermissionRead int32 `protobuf:"varint,5,opt,name=permission_read,json=permissionRead,proto3" json:"permission_read,omitempty"`
	// The write access permissions for the object.
	PermissionWrite int32 `protobuf:"varint,6,opt,name=permission_write,json=permissionWrite,proto3" json:"permission_write,omitempty"`
	// The UNIX time (for gRPC clients) or ISO string (for REST clients) when the object was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The UNIX time (for gRPC clients) or ISO string (for REST clients) when the object was last updated.
	UpdateTime    *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageListObject) Reset() {
	*x = StorageListObject{}
	mi := &file_console_proto_msgTypes[97]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageListObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageListObject) ProtoMessage() {}

func (x *StorageListObject) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[97]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageListObject.ProtoReflect.Descriptor instead.
func (*StorageListObject) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{97}
}

func (x *StorageListObject) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *StorageListObject) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *StorageListObject) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *StorageListObject) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *StorageListObject) GetPermissionRead() int32 {
	if x != nil {
		return x.PermissionRead
	}
	return 0
}

func (x *StorageListObject) GetPermissionWrite() int32 {
	if x != nil {
		return x.PermissionWrite
	}
	return 0
}

func (x *StorageListObject) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *StorageListObject) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

// A single setting.
type Setting struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name identifier.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Setting value.
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// Update time.
	UpdateTimeSec int64 `protobuf:"varint,3,opt,name=update_time_sec,json=updateTimeSec,proto3" json:"update_time_sec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Setting) Reset() {
	*x = Setting{}
	mi := &file_console_proto_msgTypes[98]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Setting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Setting) ProtoMessage() {}

func (x *Setting) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[98]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Setting.ProtoReflect.Descriptor instead.
func (*Setting) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{98}
}

func (x *Setting) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Setting) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Setting) GetUpdateTimeSec() int64 {
	if x != nil {
		return x.UpdateTimeSec
	}
	return 0
}

// Request to get a setting by name.
type SettingRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the setting
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SettingRequest) Reset() {
	*x = SettingRequest{}
	mi := &file_console_proto_msgTypes[99]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingRequest) ProtoMessage() {}

func (x *SettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[99]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingRequest.ProtoReflect.Descriptor instead.
func (*SettingRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{99}
}

func (x *SettingRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Request to list settings.
type ListSettingsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of setting names, if empty all settings are returned.
	Names         []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSettingsRequest) Reset() {
	*x = ListSettingsRequest{}
	mi := &file_console_proto_msgTypes[100]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSettingsRequest) ProtoMessage() {}

func (x *ListSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[100]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSettingsRequest.ProtoReflect.Descriptor instead.
func (*ListSettingsRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{100}
}

func (x *ListSettingsRequest) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

// Request to update an existing setting.
type UpdateSettingRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name identifier.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Setting value.
	Value         string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSettingRequest) Reset() {
	*x = UpdateSettingRequest{}
	mi := &file_console_proto_msgTypes[101]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSettingRequest) ProtoMessage() {}

func (x *UpdateSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[101]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSettingRequest.ProtoReflect.Descriptor instead.
func (*UpdateSettingRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{101}
}

func (x *UpdateSettingRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateSettingRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// A list of settings.
type SettingList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of settings.
	Settings []*Setting `protobuf:"bytes,1,rep,name=settings,proto3" json:"settings,omitempty"`
	// This field is only used to allow the swagger generator to output the enum values.
	AclResources  []AclResources `protobuf:"varint,2,rep,packed,name=acl_resources,json=aclResources,proto3,enum=nakama.console.AclResources" json:"acl_resources,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SettingList) Reset() {
	*x = SettingList{}
	mi := &file_console_proto_msgTypes[102]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettingList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingList) ProtoMessage() {}

func (x *SettingList) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[102]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingList.ProtoReflect.Descriptor instead.
func (*SettingList) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{102}
}

func (x *SettingList) GetSettings() []*Setting {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *SettingList) GetAclResources() []AclResources {
	if x != nil {
		return x.AclResources
	}
	return nil
}

// Request to update an existing user.
type UpdateUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User username.
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// ACL.
	Acl           map[string]*Permissions `protobuf:"bytes,2,rep,name=acl,proto3" json:"acl,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	mi := &file_console_proto_msgTypes[103]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[103]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{103}
}

func (x *UpdateUserRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UpdateUserRequest) GetAcl() map[string]*Permissions {
	if x != nil {
		return x.Acl
	}
	return nil
}

// Request to send a notification.
type SendNotificationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// One or more users to send the notification to, or empty to send to all users.
	UserIds []string `protobuf:"bytes,1,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	// Subject for the notification.
	Subject string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	// Arbitrary content.
	Content *structpb.Struct `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	// Code.
	Code int32 `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`
	// Persistent flag.
	Persistent bool `protobuf:"varint,5,opt,name=persistent,proto3" json:"persistent,omitempty"`
	// Sender identifier.
	SenderId      string `protobuf:"bytes,6,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendNotificationRequest) Reset() {
	*x = SendNotificationRequest{}
	mi := &file_console_proto_msgTypes[104]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationRequest) ProtoMessage() {}

func (x *SendNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[104]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationRequest.ProtoReflect.Descriptor instead.
func (*SendNotificationRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{104}
}

func (x *SendNotificationRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *SendNotificationRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *SendNotificationRequest) GetContent() *structpb.Struct {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *SendNotificationRequest) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SendNotificationRequest) GetPersistent() bool {
	if x != nil {
		return x.Persistent
	}
	return false
}

func (x *SendNotificationRequest) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

// A template.
type Template struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identifier.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The display name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Create time.
	CreateTimeSec int64 `protobuf:"varint,4,opt,name=create_time_sec,json=createTimeSec,proto3" json:"create_time_sec,omitempty"`
	// Update time.
	UpdateTimeSec int64 `protobuf:"varint,5,opt,name=update_time_sec,json=updateTimeSec,proto3" json:"update_time_sec,omitempty"`
	// The template value to generate the message's content.
	Value string `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	// The template variants..
	Variants []*TemplateVariant `protobuf:"bytes,7,rep,name=variants,proto3" json:"variants,omitempty"`
	// The title to generate the message's title.
	Title string `protobuf:"bytes,8,opt,name=title,proto3" json:"title,omitempty"`
	// The image_url for the message.
	ImageUrl string `protobuf:"bytes,9,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	// The value_type for the message's content
	ValueType string `protobuf:"bytes,10,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`
	// The json_metadata for the message
	JsonMetadata string `protobuf:"bytes,11,opt,name=json_metadata,json=jsonMetadata,proto3" json:"json_metadata,omitempty"`
	// Category label identifiers.
	Categories    []*Category_View `protobuf:"bytes,12,rep,name=categories,proto3" json:"categories,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Template) Reset() {
	*x = Template{}
	mi := &file_console_proto_msgTypes[105]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Template) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Template) ProtoMessage() {}

func (x *Template) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[105]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Template.ProtoReflect.Descriptor instead.
func (*Template) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{105}
}

func (x *Template) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Template) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Template) GetCreateTimeSec() int64 {
	if x != nil {
		return x.CreateTimeSec
	}
	return 0
}

func (x *Template) GetUpdateTimeSec() int64 {
	if x != nil {
		return x.UpdateTimeSec
	}
	return 0
}

func (x *Template) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Template) GetVariants() []*TemplateVariant {
	if x != nil {
		return x.Variants
	}
	return nil
}

func (x *Template) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Template) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Template) GetValueType() string {
	if x != nil {
		return x.ValueType
	}
	return ""
}

func (x *Template) GetJsonMetadata() string {
	if x != nil {
		return x.JsonMetadata
	}
	return ""
}

func (x *Template) GetCategories() []*Category_View {
	if x != nil {
		return x.Categories
	}
	return nil
}

// A template variant.
type TemplateVariant struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The language of the template.
	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	// The template value to generate the message's content.
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// Create time.
	CreateTimeSec int64 `protobuf:"varint,4,opt,name=create_time_sec,json=createTimeSec,proto3" json:"create_time_sec,omitempty"`
	// Update time.
	UpdateTimeSec int64 `protobuf:"varint,5,opt,name=update_time_sec,json=updateTimeSec,proto3" json:"update_time_sec,omitempty"`
	// The title to generate the message's title.
	Title string `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	// The image_url for the message.
	ImageUrl      string `protobuf:"bytes,7,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TemplateVariant) Reset() {
	*x = TemplateVariant{}
	mi := &file_console_proto_msgTypes[106]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TemplateVariant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemplateVariant) ProtoMessage() {}

func (x *TemplateVariant) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[106]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemplateVariant.ProtoReflect.Descriptor instead.
func (*TemplateVariant) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{106}
}

func (x *TemplateVariant) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *TemplateVariant) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TemplateVariant) GetCreateTimeSec() int64 {
	if x != nil {
		return x.CreateTimeSec
	}
	return 0
}

func (x *TemplateVariant) GetUpdateTimeSec() int64 {
	if x != nil {
		return x.UpdateTimeSec
	}
	return 0
}

func (x *TemplateVariant) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TemplateVariant) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

// Represents a category label.
type Category struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Description.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Color hex for the label.
	Color string `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	// Create time.
	CreateTimeSec int64 `protobuf:"varint,5,opt,name=create_time_sec,json=createTimeSec,proto3" json:"create_time_sec,omitempty"`
	// Update time.
	UpdateTimeSec int64 `protobuf:"varint,6,opt,name=update_time_sec,json=updateTimeSec,proto3" json:"update_time_sec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Category) Reset() {
	*x = Category{}
	mi := &file_console_proto_msgTypes[107]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[107]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{107}
}

func (x *Category) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Category) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Category) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Category) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Category) GetCreateTimeSec() int64 {
	if x != nil {
		return x.CreateTimeSec
	}
	return 0
}

func (x *Category) GetUpdateTimeSec() int64 {
	if x != nil {
		return x.UpdateTimeSec
	}
	return 0
}

// The request to send direct messages.
type SendDirectMessageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identifier of the template used to render the message content.
	TemplateId string `protobuf:"bytes,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	// A list of recipient identity IDs.
	IdentityIds []string `protobuf:"bytes,2,rep,name=identity_ids,json=identityIds,proto3" json:"identity_ids,omitempty"`
	// A list of integrations to use for sending the message.
	Integrations []MessageIntegrationType `protobuf:"varint,3,rep,packed,name=integrations,proto3,enum=nakama.console.MessageIntegrationType" json:"integrations,omitempty"`
	// Whether the message should be stored in the recipient's inbox.
	Persist bool `protobuf:"varint,4,opt,name=persist,proto3" json:"persist,omitempty"`
	// If applicable, channels to send this message through, per integration.
	Channels      map[int32]*SendDirectMessageRequest_MessageChannels `protobuf:"bytes,5,rep,name=channels,proto3" json:"channels,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendDirectMessageRequest) Reset() {
	*x = SendDirectMessageRequest{}
	mi := &file_console_proto_msgTypes[108]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendDirectMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendDirectMessageRequest) ProtoMessage() {}

func (x *SendDirectMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[108]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendDirectMessageRequest.ProtoReflect.Descriptor instead.
func (*SendDirectMessageRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{108}
}

func (x *SendDirectMessageRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *SendDirectMessageRequest) GetIdentityIds() []string {
	if x != nil {
		return x.IdentityIds
	}
	return nil
}

func (x *SendDirectMessageRequest) GetIntegrations() []MessageIntegrationType {
	if x != nil {
		return x.Integrations
	}
	return nil
}

func (x *SendDirectMessageRequest) GetPersist() bool {
	if x != nil {
		return x.Persist
	}
	return false
}

func (x *SendDirectMessageRequest) GetChannels() map[int32]*SendDirectMessageRequest_MessageChannels {
	if x != nil {
		return x.Channels
	}
	return nil
}

// The response for the SendDirectMessageRequest.
type SendDirectMessageResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Results for each attempted message delivery.
	DeliveryResults []*SendDirectMessageResponse_DeliveryResult `protobuf:"bytes,1,rep,name=delivery_results,json=deliveryResults,proto3" json:"delivery_results,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SendDirectMessageResponse) Reset() {
	*x = SendDirectMessageResponse{}
	mi := &file_console_proto_msgTypes[109]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendDirectMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendDirectMessageResponse) ProtoMessage() {}

func (x *SendDirectMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[109]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendDirectMessageResponse.ProtoReflect.Descriptor instead.
func (*SendDirectMessageResponse) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{109}
}

func (x *SendDirectMessageResponse) GetDeliveryResults() []*SendDirectMessageResponse_DeliveryResult {
	if x != nil {
		return x.DeliveryResults
	}
	return nil
}

type MessageIntegration struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the Message integration.
	Type MessageIntegrationType `protobuf:"varint,1,opt,name=type,proto3,enum=nakama.console.MessageIntegrationType" json:"type,omitempty"`
	// The status of the integration.
	Enabled bool `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// The update time of the integration.
	UpdateTimeSec int64 `protobuf:"varint,3,opt,name=update_time_sec,json=updateTimeSec,proto3" json:"update_time_sec,omitempty"`
	// The configuration of this integration.
	//
	// Types that are valid to be assigned to Configuration:
	//
	//	*MessageIntegration_Apns
	//	*MessageIntegration_Fcm
	//	*MessageIntegration_FacebookNotification
	//	*MessageIntegration_OnesignalNotification
	Configuration isMessageIntegration_Configuration `protobuf_oneof:"configuration"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageIntegration) Reset() {
	*x = MessageIntegration{}
	mi := &file_console_proto_msgTypes[110]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageIntegration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageIntegration) ProtoMessage() {}

func (x *MessageIntegration) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[110]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageIntegration.ProtoReflect.Descriptor instead.
func (*MessageIntegration) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{110}
}

func (x *MessageIntegration) GetType() MessageIntegrationType {
	if x != nil {
		return x.Type
	}
	return MessageIntegrationType_UNKNOWN_MESSAGE_TYPE
}

func (x *MessageIntegration) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *MessageIntegration) GetUpdateTimeSec() int64 {
	if x != nil {
		return x.UpdateTimeSec
	}
	return 0
}

func (x *MessageIntegration) GetConfiguration() isMessageIntegration_Configuration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *MessageIntegration) GetApns() *AppleMessageConfiguration {
	if x != nil {
		if x, ok := x.Configuration.(*MessageIntegration_Apns); ok {
			return x.Apns
		}
	}
	return nil
}

func (x *MessageIntegration) GetFcm() *FirebaseMessagingConfiguration {
	if x != nil {
		if x, ok := x.Configuration.(*MessageIntegration_Fcm); ok {
			return x.Fcm
		}
	}
	return nil
}

func (x *MessageIntegration) GetFacebookNotification() *FacebookNotificationConfiguration {
	if x != nil {
		if x, ok := x.Configuration.(*MessageIntegration_FacebookNotification); ok {
			return x.FacebookNotification
		}
	}
	return nil
}

func (x *MessageIntegration) GetOnesignalNotification() *OneSignalNotificationConfiguration {
	if x != nil {
		if x, ok := x.Configuration.(*MessageIntegration_OnesignalNotification); ok {
			return x.OnesignalNotification
		}
	}
	return nil
}

type isMessageIntegration_Configuration interface {
	isMessageIntegration_Configuration()
}

type MessageIntegration_Apns struct {
	// The new configuration for APNs.
	Apns *AppleMessageConfiguration `protobuf:"bytes,4,opt,name=apns,proto3,oneof"`
}

type MessageIntegration_Fcm struct {
	// The new configuration for FCM.
	Fcm *FirebaseMessagingConfiguration `protobuf:"bytes,5,opt,name=fcm,proto3,oneof"`
}

type MessageIntegration_FacebookNotification struct {
	// The new configuration for Facebook App-to-User Notifications.
	FacebookNotification *FacebookNotificationConfiguration `protobuf:"bytes,6,opt,name=facebook_notification,json=facebookNotification,proto3,oneof"`
}

type MessageIntegration_OnesignalNotification struct {
	// The new configuration for OneSignal Notifications.
	OnesignalNotification *OneSignalNotificationConfiguration `protobuf:"bytes,7,opt,name=onesignal_notification,json=onesignalNotification,proto3,oneof"`
}

func (*MessageIntegration_Apns) isMessageIntegration_Configuration() {}

func (*MessageIntegration_Fcm) isMessageIntegration_Configuration() {}

func (*MessageIntegration_FacebookNotification) isMessageIntegration_Configuration() {}

func (*MessageIntegration_OnesignalNotification) isMessageIntegration_Configuration() {}

// The configuration necessary to integrate with APNs.
type AppleMessageConfiguration struct {
	state          protoimpl.MessageState            `protogen:"open.v1"`
	TeamId         string                            `protobuf:"bytes,1,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Topic          string                            `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	P8AuthKeyId    string                            `protobuf:"bytes,3,opt,name=p8_auth_key_id,json=p8AuthKeyId,proto3" json:"p8_auth_key_id,omitempty"`
	P8AuthKeyValue string                            `protobuf:"bytes,4,opt,name=p8_auth_key_value,json=p8AuthKeyValue,proto3" json:"p8_auth_key_value,omitempty"`
	Env            AppleMessageConfiguration_EnvType `protobuf:"varint,5,opt,name=env,proto3,enum=nakama.console.AppleMessageConfiguration_EnvType" json:"env,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AppleMessageConfiguration) Reset() {
	*x = AppleMessageConfiguration{}
	mi := &file_console_proto_msgTypes[111]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppleMessageConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppleMessageConfiguration) ProtoMessage() {}

func (x *AppleMessageConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[111]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppleMessageConfiguration.ProtoReflect.Descriptor instead.
func (*AppleMessageConfiguration) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{111}
}

func (x *AppleMessageConfiguration) GetTeamId() string {
	if x != nil {
		return x.TeamId
	}
	return ""
}

func (x *AppleMessageConfiguration) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *AppleMessageConfiguration) GetP8AuthKeyId() string {
	if x != nil {
		return x.P8AuthKeyId
	}
	return ""
}

func (x *AppleMessageConfiguration) GetP8AuthKeyValue() string {
	if x != nil {
		return x.P8AuthKeyValue
	}
	return ""
}

func (x *AppleMessageConfiguration) GetEnv() AppleMessageConfiguration_EnvType {
	if x != nil {
		return x.Env
	}
	return AppleMessageConfiguration_PRODUCTION
}

// The configuration necessary to integrate with Google's Firebase Cloud Messaging.
type FirebaseMessagingConfiguration struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Credentials   string                 `protobuf:"bytes,1,opt,name=credentials,proto3" json:"credentials,omitempty"`
	ProjectId     string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FirebaseMessagingConfiguration) Reset() {
	*x = FirebaseMessagingConfiguration{}
	mi := &file_console_proto_msgTypes[112]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FirebaseMessagingConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FirebaseMessagingConfiguration) ProtoMessage() {}

func (x *FirebaseMessagingConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[112]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FirebaseMessagingConfiguration.ProtoReflect.Descriptor instead.
func (*FirebaseMessagingConfiguration) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{112}
}

func (x *FirebaseMessagingConfiguration) GetCredentials() string {
	if x != nil {
		return x.Credentials
	}
	return ""
}

func (x *FirebaseMessagingConfiguration) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

// The configuration necessary to integrate with Facebook App-To-User Notifications.
type FacebookNotificationConfiguration struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppId         string                 `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	AppSecret     string                 `protobuf:"bytes,2,opt,name=app_secret,json=appSecret,proto3" json:"app_secret,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FacebookNotificationConfiguration) Reset() {
	*x = FacebookNotificationConfiguration{}
	mi := &file_console_proto_msgTypes[113]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FacebookNotificationConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacebookNotificationConfiguration) ProtoMessage() {}

func (x *FacebookNotificationConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[113]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacebookNotificationConfiguration.ProtoReflect.Descriptor instead.
func (*FacebookNotificationConfiguration) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{113}
}

func (x *FacebookNotificationConfiguration) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *FacebookNotificationConfiguration) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

// The configuration necessary to integrate with OneSignal Notifications.
type OneSignalNotificationConfiguration struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppId         string                 `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	ApiKey        string                 `protobuf:"bytes,2,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OneSignalNotificationConfiguration) Reset() {
	*x = OneSignalNotificationConfiguration{}
	mi := &file_console_proto_msgTypes[114]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OneSignalNotificationConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneSignalNotificationConfiguration) ProtoMessage() {}

func (x *OneSignalNotificationConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[114]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneSignalNotificationConfiguration.ProtoReflect.Descriptor instead.
func (*OneSignalNotificationConfiguration) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{114}
}

func (x *OneSignalNotificationConfiguration) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *OneSignalNotificationConfiguration) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

// The possible actions that can done over a resource.
type Permissions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Read a resource.
	Read bool `protobuf:"varint,1,opt,name=read,proto3" json:"read,omitempty"`
	// Create and/or modify a resource.
	Write bool `protobuf:"varint,2,opt,name=write,proto3" json:"write,omitempty"`
	// Delete a resource.
	Delete        bool `protobuf:"varint,3,opt,name=delete,proto3" json:"delete,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Permissions) Reset() {
	*x = Permissions{}
	mi := &file_console_proto_msgTypes[115]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Permissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permissions) ProtoMessage() {}

func (x *Permissions) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[115]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permissions.ProtoReflect.Descriptor instead.
func (*Permissions) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{115}
}

func (x *Permissions) GetRead() bool {
	if x != nil {
		return x.Read
	}
	return false
}

func (x *Permissions) GetWrite() bool {
	if x != nil {
		return x.Write
	}
	return false
}

func (x *Permissions) GetDelete() bool {
	if x != nil {
		return x.Delete
	}
	return false
}

type AuditLogList_AuditLog struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Id of the entry.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The time the action occurred.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The console user id that performed the action.
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The console user username that performed the action.
	Username string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	// The console user email that performed the action.
	Email string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	// The resource the action was performed on.
	Resource AclResources `protobuf:"varint,6,opt,name=resource,proto3,enum=nakama.console.AclResources" json:"resource,omitempty"`
	// The action that was performed.
	Action AuditLogAction `protobuf:"varint,7,opt,name=action,proto3,enum=nakama.console.AuditLogAction" json:"action,omitempty"`
	// Log message.
	Message string `protobuf:"bytes,8,opt,name=message,proto3" json:"message,omitempty"`
	// Additional details about the action.
	Metadata      string `protobuf:"bytes,9,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditLogList_AuditLog) Reset() {
	*x = AuditLogList_AuditLog{}
	mi := &file_console_proto_msgTypes[116]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditLogList_AuditLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditLogList_AuditLog) ProtoMessage() {}

func (x *AuditLogList_AuditLog) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[116]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditLogList_AuditLog.ProtoReflect.Descriptor instead.
func (*AuditLogList_AuditLog) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{9, 0}
}

func (x *AuditLogList_AuditLog) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AuditLogList_AuditLog) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *AuditLogList_AuditLog) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AuditLogList_AuditLog) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AuditLogList_AuditLog) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AuditLogList_AuditLog) GetResource() AclResources {
	if x != nil {
		return x.Resource
	}
	return AclResources_ACCOUNT
}

func (x *AuditLogList_AuditLog) GetAction() AuditLogAction {
	if x != nil {
		return x.Action
	}
	return AuditLogAction_UNKNOWN
}

func (x *AuditLogList_AuditLog) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AuditLogList_AuditLog) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

type MatchList_Match struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The API match
	ApiMatch *api.Match `protobuf:"bytes,1,opt,name=api_match,json=apiMatch,proto3" json:"api_match,omitempty"`
	// The node name
	Node          string `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchList_Match) Reset() {
	*x = MatchList_Match{}
	mi := &file_console_proto_msgTypes[117]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchList_Match) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchList_Match) ProtoMessage() {}

func (x *MatchList_Match) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[117]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchList_Match.ProtoReflect.Descriptor instead.
func (*MatchList_Match) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{13, 0}
}

func (x *MatchList_Match) GetApiMatch() *api.Match {
	if x != nil {
		return x.ApiMatch
	}
	return nil
}

func (x *MatchList_Match) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

// A warning for a configuration field.
type Config_Warning struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The config field this warning is for in a JSON pointer format.
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// Warning message text.
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Config_Warning) Reset() {
	*x = Config_Warning{}
	mi := &file_console_proto_msgTypes[123]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config_Warning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_Warning) ProtoMessage() {}

func (x *Config_Warning) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[123]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_Warning.ProtoReflect.Descriptor instead.
func (*Config_Warning) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{34, 0}
}

func (x *Config_Warning) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *Config_Warning) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Hiro available systems.
type Extensions_HiroSystems struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Is Economy system registered.
	EconomySystem bool `protobuf:"varint,1,opt,name=economy_system,json=economySystem,proto3" json:"economy_system,omitempty"`
	// Is Inventory system registered.
	InventorySystem bool `protobuf:"varint,2,opt,name=inventory_system,json=inventorySystem,proto3" json:"inventory_system,omitempty"`
	// Is Progression system registered.
	ProgressionSystem bool `protobuf:"varint,3,opt,name=progression_system,json=progressionSystem,proto3" json:"progression_system,omitempty"`
	// Is Stats system registered.
	StatsSystem bool `protobuf:"varint,4,opt,name=stats_system,json=statsSystem,proto3" json:"stats_system,omitempty"`
	// Is Energy system registered.
	EnergySystem  bool `protobuf:"varint,5,opt,name=energy_system,json=energySystem,proto3" json:"energy_system,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Extensions_HiroSystems) Reset() {
	*x = Extensions_HiroSystems{}
	mi := &file_console_proto_msgTypes[130]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Extensions_HiroSystems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Extensions_HiroSystems) ProtoMessage() {}

func (x *Extensions_HiroSystems) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[130]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Extensions_HiroSystems.ProtoReflect.Descriptor instead.
func (*Extensions_HiroSystems) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{62, 0}
}

func (x *Extensions_HiroSystems) GetEconomySystem() bool {
	if x != nil {
		return x.EconomySystem
	}
	return false
}

func (x *Extensions_HiroSystems) GetInventorySystem() bool {
	if x != nil {
		return x.InventorySystem
	}
	return false
}

func (x *Extensions_HiroSystems) GetProgressionSystem() bool {
	if x != nil {
		return x.ProgressionSystem
	}
	return false
}

func (x *Extensions_HiroSystems) GetStatsSystem() bool {
	if x != nil {
		return x.StatsSystem
	}
	return false
}

func (x *Extensions_HiroSystems) GetEnergySystem() bool {
	if x != nil {
		return x.EnergySystem
	}
	return false
}

// The status of a Nakama node.
type StatusList_Status struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Node name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Health score.
	Health StatusHealth `protobuf:"varint,2,opt,name=health,proto3,enum=nakama.console.StatusHealth" json:"health,omitempty"`
	// Currently connected sessions.
	SessionCount int32 `protobuf:"varint,3,opt,name=session_count,json=sessionCount,proto3" json:"session_count,omitempty"`
	// Currently registered live presences.
	PresenceCount int32 `protobuf:"varint,4,opt,name=presence_count,json=presenceCount,proto3" json:"presence_count,omitempty"`
	// Current number of active authoritative matches.
	MatchCount int32 `protobuf:"varint,5,opt,name=match_count,json=matchCount,proto3" json:"match_count,omitempty"`
	// Current number of running goroutines.
	GoroutineCount int32 `protobuf:"varint,6,opt,name=goroutine_count,json=goroutineCount,proto3" json:"goroutine_count,omitempty"`
	// Average response latency in milliseconds.
	AvgLatencyMs float64 `protobuf:"fixed64,7,opt,name=avg_latency_ms,json=avgLatencyMs,proto3" json:"avg_latency_ms,omitempty"`
	// Average number of requests per second.
	AvgRateSec float64 `protobuf:"fixed64,8,opt,name=avg_rate_sec,json=avgRateSec,proto3" json:"avg_rate_sec,omitempty"`
	// Average input bandwidth usage.
	AvgInputKbs float64 `protobuf:"fixed64,9,opt,name=avg_input_kbs,json=avgInputKbs,proto3" json:"avg_input_kbs,omitempty"`
	// Average output bandwidth usage.
	AvgOutputKbs  float64 `protobuf:"fixed64,10,opt,name=avg_output_kbs,json=avgOutputKbs,proto3" json:"avg_output_kbs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusList_Status) Reset() {
	*x = StatusList_Status{}
	mi := &file_console_proto_msgTypes[133]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusList_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusList_Status) ProtoMessage() {}

func (x *StatusList_Status) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[133]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusList_Status.ProtoReflect.Descriptor instead.
func (*StatusList_Status) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{88, 0}
}

func (x *StatusList_Status) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StatusList_Status) GetHealth() StatusHealth {
	if x != nil {
		return x.Health
	}
	return StatusHealth_STATUS_HEALTH_OK
}

func (x *StatusList_Status) GetSessionCount() int32 {
	if x != nil {
		return x.SessionCount
	}
	return 0
}

func (x *StatusList_Status) GetPresenceCount() int32 {
	if x != nil {
		return x.PresenceCount
	}
	return 0
}

func (x *StatusList_Status) GetMatchCount() int32 {
	if x != nil {
		return x.MatchCount
	}
	return 0
}

func (x *StatusList_Status) GetGoroutineCount() int32 {
	if x != nil {
		return x.GoroutineCount
	}
	return 0
}

func (x *StatusList_Status) GetAvgLatencyMs() float64 {
	if x != nil {
		return x.AvgLatencyMs
	}
	return 0
}

func (x *StatusList_Status) GetAvgRateSec() float64 {
	if x != nil {
		return x.AvgRateSec
	}
	return 0
}

func (x *StatusList_Status) GetAvgInputKbs() float64 {
	if x != nil {
		return x.AvgInputKbs
	}
	return 0
}

func (x *StatusList_Status) GetAvgOutputKbs() float64 {
	if x != nil {
		return x.AvgOutputKbs
	}
	return 0
}

// Module information
type RuntimeInfo_ModuleInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Module path
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// Module last modified date
	ModTime       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=mod_time,json=modTime,proto3" json:"mod_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuntimeInfo_ModuleInfo) Reset() {
	*x = RuntimeInfo_ModuleInfo{}
	mi := &file_console_proto_msgTypes[134]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeInfo_ModuleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeInfo_ModuleInfo) ProtoMessage() {}

func (x *RuntimeInfo_ModuleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[134]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeInfo_ModuleInfo.ProtoReflect.Descriptor instead.
func (*RuntimeInfo_ModuleInfo) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{89, 0}
}

func (x *RuntimeInfo_ModuleInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RuntimeInfo_ModuleInfo) GetModTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ModTime
	}
	return nil
}

// A template view.
type Template_View struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identifier.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The display name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Create time.
	CreateTimeSec int64 `protobuf:"varint,4,opt,name=create_time_sec,json=createTimeSec,proto3" json:"create_time_sec,omitempty"`
	// Update time.
	UpdateTimeSec int64 `protobuf:"varint,5,opt,name=update_time_sec,json=updateTimeSec,proto3" json:"update_time_sec,omitempty"`
	// The template value to generate the message's content.
	Value string `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	// The title to generate the message's title.
	Title string `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	// The image_url for the message.
	ImageUrl string `protobuf:"bytes,8,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	// The value_type for the message's content
	ValueType string `protobuf:"bytes,9,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`
	// The json_metadata for the message
	JsonMetadata string `protobuf:"bytes,10,opt,name=json_metadata,json=jsonMetadata,proto3" json:"json_metadata,omitempty"`
	// Category label identifiers.
	Categories    []*Category_View `protobuf:"bytes,11,rep,name=categories,proto3" json:"categories,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Template_View) Reset() {
	*x = Template_View{}
	mi := &file_console_proto_msgTypes[136]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Template_View) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Template_View) ProtoMessage() {}

func (x *Template_View) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[136]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Template_View.ProtoReflect.Descriptor instead.
func (*Template_View) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{105, 0}
}

func (x *Template_View) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Template_View) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Template_View) GetCreateTimeSec() int64 {
	if x != nil {
		return x.CreateTimeSec
	}
	return 0
}

func (x *Template_View) GetUpdateTimeSec() int64 {
	if x != nil {
		return x.UpdateTimeSec
	}
	return 0
}

func (x *Template_View) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Template_View) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Template_View) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Template_View) GetValueType() string {
	if x != nil {
		return x.ValueType
	}
	return ""
}

func (x *Template_View) GetJsonMetadata() string {
	if x != nil {
		return x.JsonMetadata
	}
	return ""
}

func (x *Template_View) GetCategories() []*Category_View {
	if x != nil {
		return x.Categories
	}
	return nil
}

// An export of a message template.
type Template_Export struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identifier.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The display name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The template value to generate the message's content.
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	// The template variants..
	Variants []*Template_VariantExport `protobuf:"bytes,4,rep,name=variants,proto3" json:"variants,omitempty"`
	// The title to generate the message's title.
	Title string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	// The image_url for the message.
	ImageUrl string `protobuf:"bytes,6,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	// The value_type for the message's content
	ValueType string `protobuf:"bytes,7,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`
	// The json_metadata for the message
	JsonMetadata string `protobuf:"bytes,8,opt,name=json_metadata,json=jsonMetadata,proto3" json:"json_metadata,omitempty"`
	// Category label identifiers.
	CategoryIds   []string `protobuf:"bytes,9,rep,name=category_ids,json=categoryIds,proto3" json:"category_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Template_Export) Reset() {
	*x = Template_Export{}
	mi := &file_console_proto_msgTypes[137]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Template_Export) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Template_Export) ProtoMessage() {}

func (x *Template_Export) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[137]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Template_Export.ProtoReflect.Descriptor instead.
func (*Template_Export) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{105, 1}
}

func (x *Template_Export) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Template_Export) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Template_Export) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Template_Export) GetVariants() []*Template_VariantExport {
	if x != nil {
		return x.Variants
	}
	return nil
}

func (x *Template_Export) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Template_Export) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Template_Export) GetValueType() string {
	if x != nil {
		return x.ValueType
	}
	return ""
}

func (x *Template_Export) GetJsonMetadata() string {
	if x != nil {
		return x.JsonMetadata
	}
	return ""
}

func (x *Template_Export) GetCategoryIds() []string {
	if x != nil {
		return x.CategoryIds
	}
	return nil
}

type Template_VariantExport struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The language of the template.
	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	// The template value to generate the message's content.
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// The title to generate the message's title.
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// The image_url for the message.
	ImageUrl      string `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Template_VariantExport) Reset() {
	*x = Template_VariantExport{}
	mi := &file_console_proto_msgTypes[138]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Template_VariantExport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Template_VariantExport) ProtoMessage() {}

func (x *Template_VariantExport) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[138]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Template_VariantExport.ProtoReflect.Descriptor instead.
func (*Template_VariantExport) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{105, 2}
}

func (x *Template_VariantExport) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Template_VariantExport) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Template_VariantExport) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Template_VariantExport) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

// The request to list templates.
type Template_ListRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Search options.
	Search *Template_ListRequest_SearchOptions `protobuf:"bytes,5,opt,name=search,proto3" json:"search,omitempty"`
	// Pagination options.
	Pagination    *Template_ListRequest_PaginationOptions `protobuf:"bytes,6,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Template_ListRequest) Reset() {
	*x = Template_ListRequest{}
	mi := &file_console_proto_msgTypes[139]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Template_ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Template_ListRequest) ProtoMessage() {}

func (x *Template_ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[139]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Template_ListRequest.ProtoReflect.Descriptor instead.
func (*Template_ListRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{105, 3}
}

func (x *Template_ListRequest) GetSearch() *Template_ListRequest_SearchOptions {
	if x != nil {
		return x.Search
	}
	return nil
}

func (x *Template_ListRequest) GetPagination() *Template_ListRequest_PaginationOptions {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// The SingleTextValueFilterOption specifies the operation to apply to single value text fields.
// Only a single operation can be used at one time.
type Template_SingleTextValueFilterOption struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Filter by elements matching one of the parameters.
	Or []string `protobuf:"bytes,1,rep,name=or,proto3" json:"or,omitempty"`
	// Filter by elements matching exactly the value.
	Exact string `protobuf:"bytes,2,opt,name=exact,proto3" json:"exact,omitempty"`
	// Filter by elements matching the pattern.
	Like          string `protobuf:"bytes,3,opt,name=like,proto3" json:"like,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Template_SingleTextValueFilterOption) Reset() {
	*x = Template_SingleTextValueFilterOption{}
	mi := &file_console_proto_msgTypes[140]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Template_SingleTextValueFilterOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Template_SingleTextValueFilterOption) ProtoMessage() {}

func (x *Template_SingleTextValueFilterOption) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[140]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Template_SingleTextValueFilterOption.ProtoReflect.Descriptor instead.
func (*Template_SingleTextValueFilterOption) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{105, 4}
}

func (x *Template_SingleTextValueFilterOption) GetOr() []string {
	if x != nil {
		return x.Or
	}
	return nil
}

func (x *Template_SingleTextValueFilterOption) GetExact() string {
	if x != nil {
		return x.Exact
	}
	return ""
}

func (x *Template_SingleTextValueFilterOption) GetLike() string {
	if x != nil {
		return x.Like
	}
	return ""
}

// A list of templates.
type Template_ListResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of templates.
	Templates []*Template_View `protobuf:"bytes,1,rep,name=templates,proto3" json:"templates,omitempty"`
	// The pagination options, if there are more pages.
	PageOptions   *Template_PageOptions `protobuf:"bytes,2,opt,name=page_options,json=pageOptions,proto3" json:"page_options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Template_ListResponse) Reset() {
	*x = Template_ListResponse{}
	mi := &file_console_proto_msgTypes[141]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Template_ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Template_ListResponse) ProtoMessage() {}

func (x *Template_ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[141]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Template_ListResponse.ProtoReflect.Descriptor instead.
func (*Template_ListResponse) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{105, 5}
}

func (x *Template_ListResponse) GetTemplates() []*Template_View {
	if x != nil {
		return x.Templates
	}
	return nil
}

func (x *Template_ListResponse) GetPageOptions() *Template_PageOptions {
	if x != nil {
		return x.PageOptions
	}
	return nil
}

// The request to create a template.
type Template_CreateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name for the template.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The template value to generate the message's content.
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// The title to generate the message's title.
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// The image_url for the message.
	ImageUrl string `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	// The value_type for the message's content
	ValueType string `protobuf:"bytes,5,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`
	// The json_metadata for the message
	JsonMetadata string `protobuf:"bytes,6,opt,name=json_metadata,json=jsonMetadata,proto3" json:"json_metadata,omitempty"`
	// Category label identifiers.
	CategoryIds   []string `protobuf:"bytes,7,rep,name=category_ids,json=categoryIds,proto3" json:"category_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Template_CreateRequest) Reset() {
	*x = Template_CreateRequest{}
	mi := &file_console_proto_msgTypes[142]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Template_CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Template_CreateRequest) ProtoMessage() {}

func (x *Template_CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[142]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Template_CreateRequest.ProtoReflect.Descriptor instead.
func (*Template_CreateRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{105, 6}
}

func (x *Template_CreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Template_CreateRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Template_CreateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Template_CreateRequest) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Template_CreateRequest) GetValueType() string {
	if x != nil {
		return x.ValueType
	}
	return ""
}

func (x *Template_CreateRequest) GetJsonMetadata() string {
	if x != nil {
		return x.JsonMetadata
	}
	return ""
}

func (x *Template_CreateRequest) GetCategoryIds() []string {
	if x != nil {
		return x.CategoryIds
	}
	return nil
}

// The request to update a template.
type Template_UpdateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identifier of the template.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The new name for the template.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// The template value to generate the message's content.
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	// The title to generate the message's title.
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	// The image_url for the message.
	ImageUrl string `protobuf:"bytes,5,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	// The value_type for the message's content
	ValueType string `protobuf:"bytes,6,opt,name=value_type,json=valueType,proto3" json:"value_type,omitempty"`
	// The json_metadata for the message
	JsonMetadata string `protobuf:"bytes,7,opt,name=json_metadata,json=jsonMetadata,proto3" json:"json_metadata,omitempty"`
	// Category label identifiers.
	CategoryIds   []string `protobuf:"bytes,8,rep,name=category_ids,json=categoryIds,proto3" json:"category_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Template_UpdateRequest) Reset() {
	*x = Template_UpdateRequest{}
	mi := &file_console_proto_msgTypes[143]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Template_UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Template_UpdateRequest) ProtoMessage() {}

func (x *Template_UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[143]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Template_UpdateRequest.ProtoReflect.Descriptor instead.
func (*Template_UpdateRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{105, 7}
}

func (x *Template_UpdateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Template_UpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Template_UpdateRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Template_UpdateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Template_UpdateRequest) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Template_UpdateRequest) GetValueType() string {
	if x != nil {
		return x.ValueType
	}
	return ""
}

func (x *Template_UpdateRequest) GetJsonMetadata() string {
	if x != nil {
		return x.JsonMetadata
	}
	return ""
}

func (x *Template_UpdateRequest) GetCategoryIds() []string {
	if x != nil {
		return x.CategoryIds
	}
	return nil
}

type Template_PageOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Cursor, if there are prev pages.
	PrevCursor string `protobuf:"bytes,1,opt,name=prev_cursor,json=prevCursor,proto3" json:"prev_cursor,omitempty"`
	// Cursor, if there are next pages.
	NextCursor    string `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Template_PageOptions) Reset() {
	*x = Template_PageOptions{}
	mi := &file_console_proto_msgTypes[144]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Template_PageOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Template_PageOptions) ProtoMessage() {}

func (x *Template_PageOptions) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[144]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Template_PageOptions.ProtoReflect.Descriptor instead.
func (*Template_PageOptions) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{105, 8}
}

func (x *Template_PageOptions) GetPrevCursor() string {
	if x != nil {
		return x.PrevCursor
	}
	return ""
}

func (x *Template_PageOptions) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

type Template_ListRequest_SearchOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Filter by Name.
	Name *Template_SingleTextValueFilterOption `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Filter by Label name.
	LabelName     *Template_ListRequest_MultiTextValueFilterOption `protobuf:"bytes,3,opt,name=label_name,json=labelName,proto3" json:"label_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Template_ListRequest_SearchOptions) Reset() {
	*x = Template_ListRequest_SearchOptions{}
	mi := &file_console_proto_msgTypes[145]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Template_ListRequest_SearchOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Template_ListRequest_SearchOptions) ProtoMessage() {}

func (x *Template_ListRequest_SearchOptions) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[145]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Template_ListRequest_SearchOptions.ProtoReflect.Descriptor instead.
func (*Template_ListRequest_SearchOptions) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{105, 3, 0}
}

func (x *Template_ListRequest_SearchOptions) GetName() *Template_SingleTextValueFilterOption {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Template_ListRequest_SearchOptions) GetLabelName() *Template_ListRequest_MultiTextValueFilterOption {
	if x != nil {
		return x.LabelName
	}
	return nil
}

// The MultiTextValueFilterOption specifies the operation to apply to multi-value text fields.
// Only a single operation can be used at one time.
type Template_ListRequest_MultiTextValueFilterOption struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Filter by elements matching one of the parameters.
	Or []string `protobuf:"bytes,1,rep,name=or,proto3" json:"or,omitempty"`
	// Filter by elements matching all parameters.
	And           []string `protobuf:"bytes,2,rep,name=and,proto3" json:"and,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Template_ListRequest_MultiTextValueFilterOption) Reset() {
	*x = Template_ListRequest_MultiTextValueFilterOption{}
	mi := &file_console_proto_msgTypes[146]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Template_ListRequest_MultiTextValueFilterOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Template_ListRequest_MultiTextValueFilterOption) ProtoMessage() {}

func (x *Template_ListRequest_MultiTextValueFilterOption) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[146]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Template_ListRequest_MultiTextValueFilterOption.ProtoReflect.Descriptor instead.
func (*Template_ListRequest_MultiTextValueFilterOption) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{105, 3, 1}
}

func (x *Template_ListRequest_MultiTextValueFilterOption) GetOr() []string {
	if x != nil {
		return x.Or
	}
	return nil
}

func (x *Template_ListRequest_MultiTextValueFilterOption) GetAnd() []string {
	if x != nil {
		return x.And
	}
	return nil
}

type Template_ListRequest_PaginationOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Limit of results to return.
	Limit int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Cursor to the next page.
	Cursor        string `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Template_ListRequest_PaginationOptions) Reset() {
	*x = Template_ListRequest_PaginationOptions{}
	mi := &file_console_proto_msgTypes[147]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Template_ListRequest_PaginationOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Template_ListRequest_PaginationOptions) ProtoMessage() {}

func (x *Template_ListRequest_PaginationOptions) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[147]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Template_ListRequest_PaginationOptions.ProtoReflect.Descriptor instead.
func (*Template_ListRequest_PaginationOptions) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{105, 3, 2}
}

func (x *Template_ListRequest_PaginationOptions) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Template_ListRequest_PaginationOptions) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

// A export of a Category
type Category_Export struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Description.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Color hex for the label.
	Color         string `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Category_Export) Reset() {
	*x = Category_Export{}
	mi := &file_console_proto_msgTypes[148]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Category_Export) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category_Export) ProtoMessage() {}

func (x *Category_Export) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[148]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category_Export.ProtoReflect.Descriptor instead.
func (*Category_Export) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{107, 0}
}

func (x *Category_Export) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Category_Export) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Category_Export) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Category_Export) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

// A summary of a Category.
type Category_View struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Color hex for the label.
	Color         string `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Category_View) Reset() {
	*x = Category_View{}
	mi := &file_console_proto_msgTypes[149]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Category_View) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category_View) ProtoMessage() {}

func (x *Category_View) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[149]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category_View.ProtoReflect.Descriptor instead.
func (*Category_View) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{107, 1}
}

func (x *Category_View) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Category_View) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Category_View) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type SendDirectMessageRequest_MessageChannels struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channels      []MessageChannelType   `protobuf:"varint,1,rep,packed,name=channels,proto3,enum=nakama.console.MessageChannelType" json:"channels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendDirectMessageRequest_MessageChannels) Reset() {
	*x = SendDirectMessageRequest_MessageChannels{}
	mi := &file_console_proto_msgTypes[151]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendDirectMessageRequest_MessageChannels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendDirectMessageRequest_MessageChannels) ProtoMessage() {}

func (x *SendDirectMessageRequest_MessageChannels) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[151]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendDirectMessageRequest_MessageChannels.ProtoReflect.Descriptor instead.
func (*SendDirectMessageRequest_MessageChannels) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{108, 1}
}

func (x *SendDirectMessageRequest_MessageChannels) GetChannels() []MessageChannelType {
	if x != nil {
		return x.Channels
	}
	return nil
}

// Details of each delivery attempt.
type SendDirectMessageResponse_DeliveryResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identity ID of the recipient.
	RecipientId string `protobuf:"bytes,1,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"`
	// Results for each valid integration used in the delivery.
	IntegrationResults []*SendDirectMessageResponse_DeliveryResult_IntegrationResult `protobuf:"bytes,2,rep,name=integration_results,json=integrationResults,proto3" json:"integration_results,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SendDirectMessageResponse_DeliveryResult) Reset() {
	*x = SendDirectMessageResponse_DeliveryResult{}
	mi := &file_console_proto_msgTypes[152]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendDirectMessageResponse_DeliveryResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendDirectMessageResponse_DeliveryResult) ProtoMessage() {}

func (x *SendDirectMessageResponse_DeliveryResult) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[152]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendDirectMessageResponse_DeliveryResult.ProtoReflect.Descriptor instead.
func (*SendDirectMessageResponse_DeliveryResult) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{109, 0}
}

func (x *SendDirectMessageResponse_DeliveryResult) GetRecipientId() string {
	if x != nil {
		return x.RecipientId
	}
	return ""
}

func (x *SendDirectMessageResponse_DeliveryResult) GetIntegrationResults() []*SendDirectMessageResponse_DeliveryResult_IntegrationResult {
	if x != nil {
		return x.IntegrationResults
	}
	return nil
}

// The outcome of using a specific integration.
type SendDirectMessageResponse_DeliveryResult_IntegrationResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The integration type used for the message delivery.
	IntegrationType MessageIntegrationType `protobuf:"varint,1,opt,name=integration_type,json=integrationType,proto3,enum=nakama.console.MessageIntegrationType" json:"integration_type,omitempty"`
	// Whether the message was successfully delivered using this integration.
	Success bool `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	// An error message, if the delivery failed.
	ErrorMessage string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// The channel type used for the message delivery.
	ChannelType   MessageChannelType `protobuf:"varint,4,opt,name=channel_type,json=channelType,proto3,enum=nakama.console.MessageChannelType" json:"channel_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendDirectMessageResponse_DeliveryResult_IntegrationResult) Reset() {
	*x = SendDirectMessageResponse_DeliveryResult_IntegrationResult{}
	mi := &file_console_proto_msgTypes[153]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendDirectMessageResponse_DeliveryResult_IntegrationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendDirectMessageResponse_DeliveryResult_IntegrationResult) ProtoMessage() {}

func (x *SendDirectMessageResponse_DeliveryResult_IntegrationResult) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[153]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendDirectMessageResponse_DeliveryResult_IntegrationResult.ProtoReflect.Descriptor instead.
func (*SendDirectMessageResponse_DeliveryResult_IntegrationResult) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{109, 0, 0}
}

func (x *SendDirectMessageResponse_DeliveryResult_IntegrationResult) GetIntegrationType() MessageIntegrationType {
	if x != nil {
		return x.IntegrationType
	}
	return MessageIntegrationType_UNKNOWN_MESSAGE_TYPE
}

func (x *SendDirectMessageResponse_DeliveryResult_IntegrationResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SendDirectMessageResponse_DeliveryResult_IntegrationResult) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *SendDirectMessageResponse_DeliveryResult_IntegrationResult) GetChannelType() MessageChannelType {
	if x != nil {
		return x.ChannelType
	}
	return MessageChannelType_DEFAULT
}

type MessageIntegration_Export struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The type of the message integration.
	Type MessageIntegrationType `protobuf:"varint,1,opt,name=type,proto3,enum=nakama.console.MessageIntegrationType" json:"type,omitempty"`
	// The platform specific configuration as JSON.
	Configuration string `protobuf:"bytes,2,opt,name=configuration,proto3" json:"configuration,omitempty"`
	// The last time it was updated.
	UpdateTime    int64 `protobuf:"varint,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageIntegration_Export) Reset() {
	*x = MessageIntegration_Export{}
	mi := &file_console_proto_msgTypes[154]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageIntegration_Export) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageIntegration_Export) ProtoMessage() {}

func (x *MessageIntegration_Export) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[154]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageIntegration_Export.ProtoReflect.Descriptor instead.
func (*MessageIntegration_Export) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{110, 0}
}

func (x *MessageIntegration_Export) GetType() MessageIntegrationType {
	if x != nil {
		return x.Type
	}
	return MessageIntegrationType_UNKNOWN_MESSAGE_TYPE
}

func (x *MessageIntegration_Export) GetConfiguration() string {
	if x != nil {
		return x.Configuration
	}
	return ""
}

func (x *MessageIntegration_Export) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

var File_console_proto protoreflect.FileDescriptor

const file_console_proto_rawDesc = "" +
	"\n" +
	"\rconsole.proto\x12\x0enakama.console\x1a\rapi/api.proto\x1a\x14rtapi/realtime.proto\x1a\n" +
	"hiro.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"T\n" +
	"\x15ApiEndpointDescriptor\x12\x16\n" +
	"\x06method\x18\x01 \x01(\tR\x06method\x12#\n" +
	"\rbody_template\x18\x02 \x01(\tR\fbodyTemplate\"w\n" +
	"\aAccount\x12-\n" +
	"\aaccount\x18\x01 \x01(\v2\x13.nakama.api.AccountR\aaccount\x12=\n" +
	"\fdisable_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\vdisableTime\"k\n" +
	"\x14AccountDeleteRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12C\n" +
	"\x0frecord_deletion\x18\x02 \x01(\v2\x1a.google.protobuf.BoolValueR\x0erecordDeletion\"\xd9\x03\n" +
	"\rAccountExport\x12-\n" +
	"\aaccount\x18\x01 \x01(\v2\x13.nakama.api.AccountR\aaccount\x123\n" +
	"\aobjects\x18\x02 \x03(\v2\x19.nakama.api.StorageObjectR\aobjects\x12,\n" +
	"\afriends\x18\x03 \x03(\v2\x12.nakama.api.FriendR\afriends\x12)\n" +
	"\x06groups\x18\x04 \x03(\v2\x11.nakama.api.GroupR\x06groups\x126\n" +
	"\bmessages\x18\x05 \x03(\v2\x1a.nakama.api.ChannelMessageR\bmessages\x12N\n" +
	"\x13leaderboard_records\x18\x06 \x03(\v2\x1d.nakama.api.LeaderboardRecordR\x12leaderboardRecords\x12>\n" +
	"\rnotifications\x18\a \x03(\v2\x18.nakama.api.NotificationR\rnotifications\x12C\n" +
	"\x0ewallet_ledgers\x18\b \x03(\v2\x1c.nakama.console.WalletLedgerR\rwalletLedgers\"R\n" +
	"\rAccountImport\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x121\n" +
	"\x04data\x18\x02 \x01(\v2\x1d.nakama.console.AccountExportR\x04data\"\x1b\n" +
	"\tAccountId\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"w\n" +
	"\vAccountList\x12&\n" +
	"\x05users\x18\x01 \x03(\v2\x10.nakama.api.UserR\x05users\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x1f\n" +
	"\vnext_cursor\x18\x03 \x01(\tR\n" +
	"nextCursor\"\xb2\x02\n" +
	"\x0fAuditLogRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x127\n" +
	"\bresource\x18\x03 \x01(\v2\x1b.google.protobuf.Int32ValueR\bresource\x126\n" +
	"\x06action\x18\x04 \x01(\x0e2\x1e.nakama.console.AuditLogActionR\x06action\x120\n" +
	"\x05after\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x05after\x122\n" +
	"\x06before\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x06before\x12\x16\n" +
	"\x06cursor\x18\a \x01(\tR\x06cursor\"1\n" +
	"\x11AuditLogUsersList\x12\x1c\n" +
	"\tusernames\x18\x01 \x03(\tR\tusernames\"\xdb\x03\n" +
	"\fAuditLogList\x12?\n" +
	"\aentries\x18\x01 \x03(\v2%.nakama.console.AuditLogList.AuditLogR\aentries\x12\x1f\n" +
	"\vnext_cursor\x18\x02 \x01(\tR\n" +
	"nextCursor\x12\x1f\n" +
	"\vprev_cursor\x18\x03 \x01(\tR\n" +
	"prevCursor\x1a\xc7\x02\n" +
	"\bAuditLog\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x1a\n" +
	"\busername\x18\x04 \x01(\tR\busername\x12\x14\n" +
	"\x05email\x18\x05 \x01(\tR\x05email\x128\n" +
	"\bresource\x18\x06 \x01(\x0e2\x1c.nakama.console.AclResourcesR\bresource\x126\n" +
	"\x06action\x18\a \x01(\x0e2\x1e.nakama.console.AuditLogActionR\x06action\x12\x18\n" +
	"\amessage\x18\b \x01(\tR\amessage\x12\x1a\n" +
	"\bmetadata\x18\t \x01(\tR\bmetadata\"\x19\n" +
	"\aGroupId\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"x\n" +
	"\tGroupList\x12)\n" +
	"\x06groups\x18\x01 \x03(\v2\x11.nakama.api.GroupR\x06groups\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x1f\n" +
	"\vnext_cursor\x18\x03 \x01(\tR\n" +
	"nextCursor\"u\n" +
	"\vGroupExport\x12'\n" +
	"\x05group\x18\x01 \x01(\v2\x11.nakama.api.GroupR\x05group\x12=\n" +
	"\amembers\x18\x02 \x03(\v2#.nakama.api.GroupUserList.GroupUserR\amembers\"\x93\x01\n" +
	"\tMatchList\x129\n" +
	"\amatches\x18\x01 \x03(\v2\x1f.nakama.console.MatchList.MatchR\amatches\x1aK\n" +
	"\x05Match\x12.\n" +
	"\tapi_match\x18\x01 \x01(\v2\x11.nakama.api.MatchR\bapiMatch\x12\x12\n" +
	"\x04node\x18\x02 \x01(\tR\x04node\"\xca\x02\n" +
	"\x0eAddUserRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x12\x14\n" +
	"\x05email\x18\x03 \x01(\tR\x05email\x129\n" +
	"\x03acl\x18\x04 \x03(\v2'.nakama.console.AddUserRequest.AclEntryR\x03acl\x12!\n" +
	"\fmfa_required\x18\x05 \x01(\bR\vmfaRequired\x127\n" +
	"\x17newsletter_subscription\x18\x06 \x01(\bR\x16newsletterSubscription\x1aS\n" +
	"\bAclEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x121\n" +
	"\x05value\x18\x02 \x01(\v2\x1b.nakama.console.PermissionsR\x05value:\x028\x01\"f\n" +
	"\x14AddGroupUsersRequest\x12\x10\n" +
	"\x03ids\x18\x01 \x01(\tR\x03ids\x12\x19\n" +
	"\bgroup_id\x18\x02 \x01(\tR\agroupId\x12!\n" +
	"\fjoin_request\x18\x03 \x01(\bR\vjoinRequest\"Z\n" +
	"\x15AddAccountNoteRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"account_id\x18\x02 \x01(\tR\taccountId\x12\x12\n" +
	"\x04note\x18\x03 \x01(\tR\x04note\"\xe4\x01\n" +
	"\x15AddAclTemplateRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12@\n" +
	"\x03acl\x18\x03 \x03(\v2..nakama.console.AddAclTemplateRequest.AclEntryR\x03acl\x1aS\n" +
	"\bAclEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x121\n" +
	"\x05value\x18\x02 \x01(\v2\x1b.nakama.console.PermissionsR\x05value:\x028\x01\"\xfa\x01\n" +
	"\x18UpdateAclTemplateRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12C\n" +
	"\x03acl\x18\x04 \x03(\v21.nakama.console.UpdateAclTemplateRequest.AclEntryR\x03acl\x1aS\n" +
	"\bAclEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x121\n" +
	"\x05value\x18\x02 \x01(\v2\x1b.nakama.console.PermissionsR\x05value:\x028\x01\"L\n" +
	"\x0fAclTemplateList\x129\n" +
	"\ttemplates\x18\x01 \x03(\v2\x1b.nakama.console.AclTemplateR\ttemplates\"\xda\x02\n" +
	"\vAclTemplate\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x126\n" +
	"\x03acl\x18\x04 \x03(\v2$.nakama.console.AclTemplate.AclEntryR\x03acl\x12;\n" +
	"\vcreate_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\x12;\n" +
	"\vupdate_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"updateTime\x1aS\n" +
	"\bAclEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x121\n" +
	"\x05value\x18\x02 \x01(\v2\x1b.nakama.console.PermissionsR\x05value:\x028\x01\"\xd0\x02\n" +
	"\vAccountNote\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x12\n" +
	"\x04note\x18\x03 \x01(\tR\x04note\x12;\n" +
	"\vcreate_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\x12;\n" +
	"\vupdate_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"updateTime\x12\x1b\n" +
	"\tcreate_id\x18\x06 \x01(\tR\bcreateId\x12'\n" +
	"\x0fcreate_username\x18\a \x01(\tR\x0ecreateUsername\x12\x1b\n" +
	"\tupdate_id\x18\b \x01(\tR\bupdateId\x12'\n" +
	"\x0fupdate_username\x18\t \x01(\tR\x0eupdateUsername\"f\n" +
	"\x17ListAccountNotesRequest\x12\x1d\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tR\taccountId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06cursor\x18\x03 \x01(\tR\x06cursor\"*\n" +
	"\x18DeleteAclTemplateRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"R\n" +
	"\x18DeleteAccountNoteRequest\x12\x1d\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tR\taccountId\x12\x17\n" +
	"\anote_id\x18\x02 \x01(\tR\x06noteId\"e\n" +
	"\x18ListAccountNotesResponse\x121\n" +
	"\x05notes\x18\x01 \x03(\v2\x1b.nakama.console.AccountNoteR\x05notes\x12\x16\n" +
	"\x06cursor\x18\x02 \x01(\tR\x06cursor\"Q\n" +
	"\x0fAddUserResponse\x12(\n" +
	"\x04user\x18\x01 \x01(\v2\x14.nakama.console.UserR\x04user\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\"\xa2\x01\n" +
	"\x0fApiEndpointList\x12C\n" +
	"\tendpoints\x18\x01 \x03(\v2%.nakama.console.ApiEndpointDescriptorR\tendpoints\x12J\n" +
	"\rrpc_endpoints\x18\x02 \x03(\v2%.nakama.console.ApiEndpointDescriptorR\frpcEndpoints\"_\n" +
	"\x13AuthenticateRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x12\x10\n" +
	"\x03mfa\x18\x03 \x01(\tR\x03mfa\"C\n" +
	"\x1bAuthenticateMFASetupRequest\x12\x10\n" +
	"\x03mfa\x18\x01 \x01(\tR\x03mfa\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\"E\n" +
	"\x1cAuthenticateMFASetupResponse\x12%\n" +
	"\x0erecovery_codes\x18\x01 \x03(\tR\rrecoveryCodes\"1\n" +
	"\x19AuthenticateLogoutRequest\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\"\xf9\x01\n" +
	"\x16CallApiEndpointRequest\x12\x16\n" +
	"\x06method\x18\x01 \x01(\tR\x06method\x12\x12\n" +
	"\x04body\x18\x02 \x01(\tR\x04body\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12Z\n" +
	"\fsession_vars\x18\x04 \x03(\v27.nakama.console.CallApiEndpointRequest.SessionVarsEntryR\vsessionVars\x1a>\n" +
	"\x10SessionVarsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"R\n" +
	"\x17CallApiEndpointResponse\x12\x12\n" +
	"\x04body\x18\x01 \x01(\tR\x04body\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"\xbe\x01\n" +
	"\x06Config\x12\x16\n" +
	"\x06config\x18\x01 \x01(\tR\x06config\x12:\n" +
	"\bwarnings\x18\x02 \x03(\v2\x1e.nakama.console.Config.WarningR\bwarnings\x12%\n" +
	"\x0eserver_version\x18\x03 \x01(\tR\rserverVersion\x1a9\n" +
	"\aWarning\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"_\n" +
	"\x0eConsoleSession\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\x127\n" +
	"\bmfa_code\x18\x02 \x01(\v2\x1c.google.protobuf.StringValueR\amfaCode\"d\n" +
	"\x1cDeleteChannelMessagesRequest\x122\n" +
	"\x06before\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x06before\x12\x10\n" +
	"\x03ids\x18\x02 \x03(\tR\x03ids\"B\n" +
	"\x13DeleteFriendRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tfriend_id\x18\x02 \x01(\tR\bfriendId\"$\n" +
	"\x12DeleteGroupRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"C\n" +
	"\x16DeleteGroupUserRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bgroup_id\x18\x02 \x01(\tR\agroupId\"H\n" +
	"\x1bUpdateGroupUserStateRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bgroup_id\x18\x02 \x01(\tR\agroupId\"\"\n" +
	"\x10ResetUserRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"1\n" +
	"\x13ResetUserMfaRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\"'\n" +
	"\x11ResetUserResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\"O\n" +
	"\x15RequireUserMfaRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\brequired\x18\x02 \x01(\bR\brequired\"K\n" +
	"\x1eDeleteLeaderboardRecordRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bowner_id\x18\x02 \x01(\tR\aownerId\"+\n" +
	"\x19DeleteNotificationRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x81\x01\n" +
	"\x1aDeleteStorageObjectRequest\x12\x1e\n" +
	"\n" +
	"collection\x18\x01 \x01(\tR\n" +
	"collection\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x18\n" +
	"\aversion\x18\x04 \x01(\tR\aversion\"H\n" +
	"\x19DeleteWalletLedgerRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\twallet_id\x18\x02 \x01(\tR\bwalletId\"X\n" +
	"\x18HiroInventoryListRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12#\n" +
	"\ritem_category\x18\x02 \x01(\tR\fitemCategory\"\xe7\x01\n" +
	"\x1dHiroGrantUserInventoryRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12N\n" +
	"\x05items\x18\x02 \x03(\v28.nakama.console.HiroGrantUserInventoryRequest.ItemsEntryR\x05items\x12#\n" +
	"\rignore_limits\x18\x03 \x01(\bR\fignoreLimits\x1a8\n" +
	"\n" +
	"ItemsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"a\n" +
	"#HiroDeleteUserInventoryItemsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12!\n" +
	"\finstance_ids\x18\x02 \x03(\tR\vinstanceIds\"\x8c\x02\n" +
	"#HiroUpdateUserInventoryItemsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12g\n" +
	"\fitem_updates\x18\x02 \x03(\v2D.nakama.console.HiroUpdateUserInventoryItemsRequest.ItemUpdatesEntryR\vitemUpdates\x1ac\n" +
	"\x10ItemUpdatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x129\n" +
	"\x05value\x18\x02 \x01(\v2#.hiro.InventoryUpdateItemPropertiesR\x05value:\x028\x01\"\xe5\x01\n" +
	"\x17HiroProgressionsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12]\n" +
	"\fprogressions\x18\x02 \x03(\v29.nakama.console.HiroProgressionsRequest.ProgressionsEntryR\fprogressions\x1aR\n" +
	"\x11ProgressionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12'\n" +
	"\x05value\x18\x02 \x01(\v2\x11.hiro.ProgressionR\x05value:\x028\x01\"`\n" +
	"\x1cHiroResetProgressionsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12'\n" +
	"\x0fprogression_ids\x18\x02 \x03(\tR\x0eprogressionIds\"a\n" +
	"\x1dHiroUnlockProgressionsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12'\n" +
	"\x0fprogression_ids\x18\x02 \x03(\tR\x0eprogressionIds\"\xed\x01\n" +
	"\x1dHiroUpdateProgressionsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12%\n" +
	"\x0eprogression_id\x18\x02 \x01(\tR\rprogressionId\x12Q\n" +
	"\x06counts\x18\x03 \x03(\v29.nakama.console.HiroUpdateProgressionsRequest.CountsEntryR\x06counts\x1a9\n" +
	"\vCountsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"a\n" +
	"\x1fHiroPurchaseProgressionsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12%\n" +
	"\x0eprogression_id\x18\x02 \x01(\tR\rprogressionId\"\xca\x01\n" +
	"\x17HiroEconomyGrantRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12W\n" +
	"\n" +
	"currencies\x18\x02 \x03(\v27.nakama.console.HiroEconomyGrantRequest.CurrenciesEntryR\n" +
	"currencies\x1a=\n" +
	"\x0fCurrenciesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"/\n" +
	"\x14HiroStatsListRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"\x87\x01\n" +
	"\x16HiroStatsUpdateRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12(\n" +
	"\x06public\x18\x02 \x03(\v2\x10.hiro.StatUpdateR\x06public\x12*\n" +
	"\aprivate\x18\x03 \x03(\v2\x10.hiro.StatUpdateR\aprivate\"\xbc\x01\n" +
	"\x16HiroEnergyGrantRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12M\n" +
	"\aamounts\x18\x02 \x03(\v23.nakama.console.HiroEnergyGrantRequest.AmountsEntryR\aamounts\x1a:\n" +
	"\fAmountsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\xdc\x02\n" +
	"\n" +
	"Extensions\x12\x12\n" +
	"\x04hiro\x18\x01 \x01(\bR\x04hiro\x12I\n" +
	"\fhiro_systems\x18\x02 \x01(\v2&.nakama.console.Extensions.HiroSystemsR\vhiroSystems\x12\x16\n" +
	"\x06satori\x18\x03 \x01(\bR\x06satori\x1a\xd6\x01\n" +
	"\vHiroSystems\x12%\n" +
	"\x0eeconomy_system\x18\x01 \x01(\bR\reconomySystem\x12)\n" +
	"\x10inventory_system\x18\x02 \x01(\bR\x0finventorySystem\x12-\n" +
	"\x12progression_system\x18\x03 \x01(\bR\x11progressionSystem\x12!\n" +
	"\fstats_system\x18\x04 \x01(\bR\vstatsSystem\x12#\n" +
	"\renergy_system\x18\x05 \x01(\bR\fenergySystem\"\xf8\x05\n" +
	"\vLeaderboard\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1a\n" +
	"\bcategory\x18\x04 \x01(\rR\bcategory\x12\x1d\n" +
	"\n" +
	"sort_order\x18\x05 \x01(\rR\tsortOrder\x12\x12\n" +
	"\x04size\x18\x06 \x01(\rR\x04size\x12\x19\n" +
	"\bmax_size\x18\a \x01(\rR\amaxSize\x12\"\n" +
	"\rmax_num_score\x18\b \x01(\rR\vmaxNumScore\x12\x1a\n" +
	"\boperator\x18\t \x01(\rR\boperator\x12\x1d\n" +
	"\n" +
	"end_active\x18\n" +
	" \x01(\rR\tendActive\x12%\n" +
	"\x0ereset_schedule\x18\v \x01(\tR\rresetSchedule\x12\x1a\n" +
	"\bmetadata\x18\f \x01(\tR\bmetadata\x12;\n" +
	"\vcreate_time\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\x129\n" +
	"\n" +
	"start_time\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x1a\n" +
	"\bduration\x18\x10 \x01(\rR\bduration\x12!\n" +
	"\fstart_active\x18\x11 \x01(\rR\vstartActive\x12#\n" +
	"\rjoin_required\x18\x12 \x01(\bR\fjoinRequired\x12$\n" +
	"\rauthoritative\x18\x13 \x01(\bR\rauthoritative\x12\x1e\n" +
	"\n" +
	"tournament\x18\x14 \x01(\bR\n" +
	"tournament\x12\x1d\n" +
	"\n" +
	"prev_reset\x18\x15 \x01(\rR\tprevReset\x12\x1d\n" +
	"\n" +
	"next_reset\x18\x16 \x01(\rR\tnextReset\"0\n" +
	"\x16LeaderboardListRequest\x12\x16\n" +
	"\x06cursor\x18\x01 \x01(\tR\x06cursor\"\x80\x01\n" +
	"\x0fLeaderboardList\x12?\n" +
	"\fleaderboards\x18\x01 \x03(\v2\x1b.nakama.console.LeaderboardR\fleaderboards\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12\x16\n" +
	"\x06cursor\x18\x03 \x01(\tR\x06cursor\"$\n" +
	"\x12LeaderboardRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"e\n" +
	"\x13ListAccountsRequest\x12\x16\n" +
	"\x06filter\x18\x01 \x01(\tR\x06filter\x12\x1e\n" +
	"\n" +
	"tombstones\x18\x02 \x01(\bR\n" +
	"tombstones\x12\x16\n" +
	"\x06cursor\x18\x03 \x01(\tR\x06cursor\"\xa0\x02\n" +
	"\x1aListChannelMessagesRequest\x12C\n" +
	"\x04type\x18\x01 \x01(\x0e2/.nakama.console.ListChannelMessagesRequest.TypeR\x04type\x12\x14\n" +
	"\x05label\x18\x02 \x01(\tR\x05label\x12\x19\n" +
	"\bgroup_id\x18\x03 \x01(\tR\agroupId\x12\x1e\n" +
	"\vuser_id_one\x18\x04 \x01(\tR\tuserIdOne\x12\x1e\n" +
	"\vuser_id_two\x18\x05 \x01(\tR\tuserIdTwo\x12\x16\n" +
	"\x06cursor\x18\x06 \x01(\tR\x06cursor\"4\n" +
	"\x04Type\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\b\n" +
	"\x04ROOM\x10\x02\x12\t\n" +
	"\x05GROUP\x10\x03\x12\n" +
	"\n" +
	"\x06DIRECT\x10\x04\"C\n" +
	"\x11ListGroupsRequest\x12\x16\n" +
	"\x06filter\x18\x01 \x01(\tR\x06filter\x12\x16\n" +
	"\x06cursor\x18\x02 \x01(\tR\x06cursor\"\xae\x03\n" +
	"\x12ListMatchesRequest\x121\n" +
	"\x05limit\x18\x01 \x01(\v2\x1b.google.protobuf.Int32ValueR\x05limit\x12@\n" +
	"\rauthoritative\x18\x02 \x01(\v2\x1a.google.protobuf.BoolValueR\rauthoritative\x122\n" +
	"\x05label\x18\x03 \x01(\v2\x1c.google.protobuf.StringValueR\x05label\x126\n" +
	"\bmin_size\x18\x04 \x01(\v2\x1b.google.protobuf.Int32ValueR\aminSize\x126\n" +
	"\bmax_size\x18\x05 \x01(\v2\x1b.google.protobuf.Int32ValueR\amaxSize\x12\x19\n" +
	"\bmatch_id\x18\x06 \x01(\tR\amatchId\x122\n" +
	"\x05query\x18\a \x01(\v2\x1c.google.protobuf.StringValueR\x05query\x120\n" +
	"\x04node\x18\b \x01(\v2\x1c.google.protobuf.StringValueR\x04node\"a\n" +
	"\x18ListNotificationsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\rR\x05limit\x12\x16\n" +
	"\x06cursor\x18\x03 \x01(\tR\x06cursor\"\xdb\x01\n" +
	"\x14ListPurchasesRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\rR\x05limit\x12\x16\n" +
	"\x06cursor\x18\x03 \x01(\tR\x06cursor\x120\n" +
	"\x05after\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x05after\x122\n" +
	"\x06before\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x06before\x12\x16\n" +
	"\x06filter\x18\x06 \x01(\tR\x06filter\"\xdf\x01\n" +
	"\x18ListSubscriptionsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\rR\x05limit\x12\x16\n" +
	"\x06cursor\x18\x03 \x01(\tR\x06cursor\x120\n" +
	"\x05after\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x05after\x122\n" +
	"\x06before\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x06before\x12\x16\n" +
	"\x06filter\x18\x06 \x01(\tR\x06filter\"w\n" +
	"\x12ListStorageRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\x12\x1e\n" +
	"\n" +
	"collection\x18\x03 \x01(\tR\n" +
	"collection\x12\x16\n" +
	"\x06cursor\x18\x04 \x01(\tR\x06cursor\"s\n" +
	"\n" +
	"MatchState\x12;\n" +
	"\tpresences\x18\x01 \x03(\v2\x1d.nakama.realtime.UserPresenceR\tpresences\x12\x12\n" +
	"\x04tick\x18\x02 \x01(\x03R\x04tick\x12\x14\n" +
	"\x05state\x18\x03 \x01(\tR\x05state\"#\n" +
	"\x11MatchStateRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xf9\x01\n" +
	"\fNotification\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\asubject\x18\x02 \x01(\tR\asubject\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12\x12\n" +
	"\x04code\x18\x04 \x01(\x05R\x04code\x12\x1b\n" +
	"\tsender_id\x18\x05 \x01(\tR\bsenderId\x12;\n" +
	"\vcreate_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\x12\x1e\n" +
	"\n" +
	"persistent\x18\a \x01(\bR\n" +
	"persistent\x12\x17\n" +
	"\auser_id\x18\b \x01(\tR\x06userId\"\x98\x01\n" +
	"\x10NotificationList\x12B\n" +
	"\rnotifications\x18\x01 \x03(\v2\x1c.nakama.console.NotificationR\rnotifications\x12\x1f\n" +
	"\vnext_cursor\x18\x02 \x01(\tR\n" +
	"nextCursor\x12\x1f\n" +
	"\vprev_cursor\x18\x03 \x01(\tR\n" +
	"prevCursor\"5\n" +
	"\x1dDeleteChannelMessagesResponse\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x03R\x05total\"\x8c\x01\n" +
	"\vStorageList\x12;\n" +
	"\aobjects\x18\x01 \x03(\v2!.nakama.console.StorageListObjectR\aobjects\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x1f\n" +
	"\vnext_cursor\x18\x03 \x01(\tR\n" +
	"nextCursor\":\n" +
	"\x16StorageCollectionsList\x12 \n" +
	"\vcollections\x18\x03 \x03(\tR\vcollections\"B\n" +
	"\x13UnlinkDeviceRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tdevice_id\x18\x02 \x01(\tR\bdeviceId\"\xb6\x06\n" +
	"\x14UpdateAccountRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x128\n" +
	"\busername\x18\x02 \x01(\v2\x1c.google.protobuf.StringValueR\busername\x12?\n" +
	"\fdisplay_name\x18\x03 \x01(\v2\x1c.google.protobuf.StringValueR\vdisplayName\x128\n" +
	"\bmetadata\x18\x04 \x01(\v2\x1c.google.protobuf.StringValueR\bmetadata\x12;\n" +
	"\n" +
	"avatar_url\x18\x05 \x01(\v2\x1c.google.protobuf.StringValueR\tavatarUrl\x127\n" +
	"\blang_tag\x18\x06 \x01(\v2\x1c.google.protobuf.StringValueR\alangTag\x128\n" +
	"\blocation\x18\a \x01(\v2\x1c.google.protobuf.StringValueR\blocation\x128\n" +
	"\btimezone\x18\b \x01(\v2\x1c.google.protobuf.StringValueR\btimezone\x129\n" +
	"\tcustom_id\x18\t \x01(\v2\x1c.google.protobuf.StringValueR\bcustomId\x122\n" +
	"\x05email\x18\n" +
	" \x01(\v2\x1c.google.protobuf.StringValueR\x05email\x128\n" +
	"\bpassword\x18\v \x01(\v2\x1c.google.protobuf.StringValueR\bpassword\x12R\n" +
	"\n" +
	"device_ids\x18\f \x03(\v23.nakama.console.UpdateAccountRequest.DeviceIdsEntryR\tdeviceIds\x124\n" +
	"\x06wallet\x18\r \x01(\v2\x1c.google.protobuf.StringValueR\x06wallet\x1a<\n" +
	"\x0eDeviceIdsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb0\x03\n" +
	"\x12UpdateGroupRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x120\n" +
	"\x04name\x18\x02 \x01(\v2\x1c.google.protobuf.StringValueR\x04name\x12>\n" +
	"\vdescription\x18\x03 \x01(\v2\x1c.google.protobuf.StringValueR\vdescription\x127\n" +
	"\blang_tag\x18\x04 \x01(\v2\x1c.google.protobuf.StringValueR\alangTag\x128\n" +
	"\bmetadata\x18\x05 \x01(\v2\x1c.google.protobuf.StringValueR\bmetadata\x12;\n" +
	"\n" +
	"avatar_url\x18\x06 \x01(\v2\x1c.google.protobuf.StringValueR\tavatarUrl\x12.\n" +
	"\x04open\x18\a \x01(\v2\x1a.google.protobuf.BoolValueR\x04open\x128\n" +
	"\tmax_count\x18\b \x01(\v2\x1b.google.protobuf.Int32ValueR\bmaxCount\"&\n" +
	"\bUsername\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\"\x8c\x03\n" +
	"\x04User\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x14\n" +
	"\x05email\x18\x03 \x01(\tR\x05email\x12/\n" +
	"\x03acl\x18\x04 \x03(\v2\x1d.nakama.console.User.AclEntryR\x03acl\x12!\n" +
	"\fmfa_required\x18\x05 \x01(\bR\vmfaRequired\x12\x1f\n" +
	"\vmfa_enabled\x18\x06 \x01(\bR\n" +
	"mfaEnabled\x12;\n" +
	"\vcreate_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\x12;\n" +
	"\vupdate_time\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"updateTime\x1aS\n" +
	"\bAclEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x121\n" +
	"\x05value\x18\x02 \x01(\v2\x1b.nakama.console.PermissionsR\x05value:\x028\x01\"6\n" +
	"\bUserList\x12*\n" +
	"\x05users\x18\x01 \x03(\v2\x14.nakama.console.UserR\x05users\"\xfc\x03\n" +
	"\n" +
	"StatusList\x127\n" +
	"\x05nodes\x18\x01 \x03(\v2!.nakama.console.StatusList.StatusR\x05nodes\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1a\xfa\x02\n" +
	"\x06Status\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x124\n" +
	"\x06health\x18\x02 \x01(\x0e2\x1c.nakama.console.StatusHealthR\x06health\x12#\n" +
	"\rsession_count\x18\x03 \x01(\x05R\fsessionCount\x12%\n" +
	"\x0epresence_count\x18\x04 \x01(\x05R\rpresenceCount\x12\x1f\n" +
	"\vmatch_count\x18\x05 \x01(\x05R\n" +
	"matchCount\x12'\n" +
	"\x0fgoroutine_count\x18\x06 \x01(\x05R\x0egoroutineCount\x12$\n" +
	"\x0eavg_latency_ms\x18\a \x01(\x01R\favgLatencyMs\x12 \n" +
	"\favg_rate_sec\x18\b \x01(\x01R\n" +
	"avgRateSec\x12\"\n" +
	"\ravg_input_kbs\x18\t \x01(\x01R\vavgInputKbs\x12$\n" +
	"\x0eavg_output_kbs\x18\n" +
	" \x01(\x01R\favgOutputKbs\"\xbd\x03\n" +
	"\vRuntimeInfo\x12*\n" +
	"\x11lua_rpc_functions\x18\x01 \x03(\tR\x0fluaRpcFunctions\x12(\n" +
	"\x10go_rpc_functions\x18\x02 \x03(\tR\x0egoRpcFunctions\x12(\n" +
	"\x10js_rpc_functions\x18\x03 \x03(\tR\x0ejsRpcFunctions\x12E\n" +
	"\n" +
	"go_modules\x18\x04 \x03(\v2&.nakama.console.RuntimeInfo.ModuleInfoR\tgoModules\x12G\n" +
	"\vlua_modules\x18\x05 \x03(\v2&.nakama.console.RuntimeInfo.ModuleInfoR\n" +
	"luaModules\x12E\n" +
	"\n" +
	"js_modules\x18\x06 \x03(\v2&.nakama.console.RuntimeInfo.ModuleInfoR\tjsModules\x1aW\n" +
	"\n" +
	"ModuleInfo\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x125\n" +
	"\bmod_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\amodTime\"\xeb\x01\n" +
	"\fWalletLedger\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1c\n" +
	"\tchangeset\x18\x03 \x01(\tR\tchangeset\x12\x1a\n" +
	"\bmetadata\x18\x04 \x01(\tR\bmetadata\x12;\n" +
	"\vcreate_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\x12;\n" +
	"\vupdate_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"updateTime\"\x88\x01\n" +
	"\x10WalletLedgerList\x122\n" +
	"\x05items\x18\x01 \x03(\v2\x1c.nakama.console.WalletLedgerR\x05items\x12\x1f\n" +
	"\vnext_cursor\x18\x02 \x01(\tR\n" +
	"nextCursor\x12\x1f\n" +
	"\vprev_cursor\x18\x03 \x01(\tR\n" +
	"prevCursor\"\xa4\x02\n" +
	"\x19WriteStorageObjectRequest\x12\x1e\n" +
	"\n" +
	"collection\x18\x01 \x01(\tR\n" +
	"collection\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x14\n" +
	"\x05value\x18\x04 \x01(\tR\x05value\x12\x18\n" +
	"\aversion\x18\x05 \x01(\tR\aversion\x12D\n" +
	"\x0fpermission_read\x18\x06 \x01(\v2\x1b.google.protobuf.Int32ValueR\x0epermissionRead\x12F\n" +
	"\x10permission_write\x18\a \x01(\v2\x1b.google.protobuf.Int32ValueR\x0fpermissionWrite\"\xcb\x01\n" +
	"\x16GetWalletLedgerRequest\x12\x1d\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tR\taccountId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\rR\x05limit\x12\x16\n" +
	"\x06cursor\x18\x03 \x01(\tR\x06cursor\x120\n" +
	"\x05after\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x05after\x122\n" +
	"\x06before\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x06before\"(\n" +
	"\x16GetNotificationRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\";\n" +
	"\x12GetPurchaseRequest\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\"P\n" +
	"\x16GetSubscriptionRequest\x126\n" +
	"\x17original_transaction_id\x18\x01 \x01(\tR\x15originalTransactionId\"\xc6\x02\n" +
	"\x11StorageListObject\x12\x1e\n" +
	"\n" +
	"collection\x18\x01 \x01(\tR\n" +
	"collection\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x18\n" +
	"\aversion\x18\x04 \x01(\tR\aversion\x12'\n" +
	"\x0fpermission_read\x18\x05 \x01(\x05R\x0epermissionRead\x12)\n" +
	"\x10permission_write\x18\x06 \x01(\x05R\x0fpermissionWrite\x12;\n" +
	"\vcreate_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\x12;\n" +
	"\vupdate_time\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"updateTime\"[\n" +
	"\aSetting\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12&\n" +
	"\x0fupdate_time_sec\x18\x03 \x01(\x03R\rupdateTimeSec\"$\n" +
	"\x0eSettingRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"+\n" +
	"\x13ListSettingsRequest\x12\x14\n" +
	"\x05names\x18\x01 \x03(\tR\x05names\"@\n" +
	"\x14UpdateSettingRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"\x85\x01\n" +
	"\vSettingList\x123\n" +
	"\bsettings\x18\x01 \x03(\v2\x17.nakama.console.SettingR\bsettings\x12A\n" +
	"\racl_resources\x18\x02 \x03(\x0e2\x1c.nakama.console.AclResourcesR\faclResources\"\xc2\x01\n" +
	"\x11UpdateUserRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12<\n" +
	"\x03acl\x18\x02 \x03(\v2*.nakama.console.UpdateUserRequest.AclEntryR\x03acl\x1aS\n" +
	"\bAclEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x121\n" +
	"\x05value\x18\x02 \x01(\v2\x1b.nakama.console.PermissionsR\x05value:\x028\x01\"\xd2\x01\n" +
	"\x17SendNotificationRequest\x12\x19\n" +
	"\buser_ids\x18\x01 \x03(\tR\auserIds\x12\x18\n" +
	"\asubject\x18\x02 \x01(\tR\asubject\x121\n" +
	"\acontent\x18\x03 \x01(\v2\x17.google.protobuf.StructR\acontent\x12\x12\n" +
	"\x04code\x18\x04 \x01(\x05R\x04code\x12\x1e\n" +
	"\n" +
	"persistent\x18\x05 \x01(\bR\n" +
	"persistent\x12\x1b\n" +
	"\tsender_id\x18\x06 \x01(\tR\bsenderId\"\xd9\x12\n" +
	"\bTemplate\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12&\n" +
	"\x0fcreate_time_sec\x18\x04 \x01(\x03R\rcreateTimeSec\x12&\n" +
	"\x0fupdate_time_sec\x18\x05 \x01(\x03R\rupdateTimeSec\x12\x14\n" +
	"\x05value\x18\x06 \x01(\tR\x05value\x12;\n" +
	"\bvariants\x18\a \x03(\v2\x1f.nakama.console.TemplateVariantR\bvariants\x12\x14\n" +
	"\x05title\x18\b \x01(\tR\x05title\x12\x1b\n" +
	"\timage_url\x18\t \x01(\tR\bimageUrl\x12\x1d\n" +
	"\n" +
	"value_type\x18\n" +
	" \x01(\tR\tvalueType\x12#\n" +
	"\rjson_metadata\x18\v \x01(\tR\fjsonMetadata\x12=\n" +
	"\n" +
	"categories\x18\f \x03(\v2\x1d.nakama.console.Category.ViewR\n" +
	"categories\x1a\xc6\x02\n" +
	"\x04View\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12&\n" +
	"\x0fcreate_time_sec\x18\x04 \x01(\x03R\rcreateTimeSec\x12&\n" +
	"\x0fupdate_time_sec\x18\x05 \x01(\x03R\rupdateTimeSec\x12\x14\n" +
	"\x05value\x18\x06 \x01(\tR\x05value\x12\x14\n" +
	"\x05title\x18\a \x01(\tR\x05title\x12\x1b\n" +
	"\timage_url\x18\b \x01(\tR\bimageUrl\x12\x1d\n" +
	"\n" +
	"value_type\x18\t \x01(\tR\tvalueType\x12#\n" +
	"\rjson_metadata\x18\n" +
	" \x01(\tR\fjsonMetadata\x12=\n" +
	"\n" +
	"categories\x18\v \x03(\v2\x1d.nakama.console.Category.ViewR\n" +
	"categories\x1a\xa0\x02\n" +
	"\x06Export\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x03 \x01(\tR\x05value\x12B\n" +
	"\bvariants\x18\x04 \x03(\v2&.nakama.console.Template.VariantExportR\bvariants\x12\x14\n" +
	"\x05title\x18\x05 \x01(\tR\x05title\x12\x1b\n" +
	"\timage_url\x18\x06 \x01(\tR\bimageUrl\x12\x1d\n" +
	"\n" +
	"value_type\x18\a \x01(\tR\tvalueType\x12#\n" +
	"\rjson_metadata\x18\b \x01(\tR\fjsonMetadata\x12!\n" +
	"\fcategory_ids\x18\t \x03(\tR\vcategoryIds\x1at\n" +
	"\rVariantExport\x12\x1a\n" +
	"\blanguage\x18\x01 \x01(\tR\blanguage\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x1b\n" +
	"\timage_url\x18\x04 \x01(\tR\bimageUrl\x1a\xf0\x03\n" +
	"\vListRequest\x12J\n" +
	"\x06search\x18\x05 \x01(\v22.nakama.console.Template.ListRequest.SearchOptionsR\x06search\x12V\n" +
	"\n" +
	"pagination\x18\x06 \x01(\v26.nakama.console.Template.ListRequest.PaginationOptionsR\n" +
	"pagination\x1a\xb9\x01\n" +
	"\rSearchOptions\x12H\n" +
	"\x04name\x18\x01 \x01(\v24.nakama.console.Template.SingleTextValueFilterOptionR\x04name\x12^\n" +
	"\n" +
	"label_name\x18\x03 \x01(\v2?.nakama.console.Template.ListRequest.MultiTextValueFilterOptionR\tlabelName\x1a>\n" +
	"\x1aMultiTextValueFilterOption\x12\x0e\n" +
	"\x02or\x18\x01 \x03(\tR\x02or\x12\x10\n" +
	"\x03and\x18\x02 \x03(\tR\x03and\x1aA\n" +
	"\x11PaginationOptions\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06cursor\x18\x02 \x01(\tR\x06cursor\x1aW\n" +
	"\x1bSingleTextValueFilterOption\x12\x0e\n" +
	"\x02or\x18\x01 \x03(\tR\x02or\x12\x14\n" +
	"\x05exact\x18\x02 \x01(\tR\x05exact\x12\x12\n" +
	"\x04like\x18\x03 \x01(\tR\x04like\x1a\x94\x01\n" +
	"\fListResponse\x12;\n" +
	"\ttemplates\x18\x01 \x03(\v2\x1d.nakama.console.Template.ViewR\ttemplates\x12G\n" +
	"\fpage_options\x18\x02 \x01(\v2$.nakama.console.Template.PageOptionsR\vpageOptions\x1a\xd3\x01\n" +
	"\rCreateRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x1b\n" +
	"\timage_url\x18\x04 \x01(\tR\bimageUrl\x12\x1d\n" +
	"\n" +
	"value_type\x18\x05 \x01(\tR\tvalueType\x12#\n" +
	"\rjson_metadata\x18\x06 \x01(\tR\fjsonMetadata\x12!\n" +
	"\fcategory_ids\x18\a \x03(\tR\vcategoryIds\x1a\xe3\x01\n" +
	"\rUpdateRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x03 \x01(\tR\x05value\x12\x14\n" +
	"\x05title\x18\x04 \x01(\tR\x05title\x12\x1b\n" +
	"\timage_url\x18\x05 \x01(\tR\bimageUrl\x12\x1d\n" +
	"\n" +
	"value_type\x18\x06 \x01(\tR\tvalueType\x12#\n" +
	"\rjson_metadata\x18\a \x01(\tR\fjsonMetadata\x12!\n" +
	"\fcategory_ids\x18\b \x03(\tR\vcategoryIds\x1aO\n" +
	"\vPageOptions\x12\x1f\n" +
	"\vprev_cursor\x18\x01 \x01(\tR\n" +
	"prevCursor\x12\x1f\n" +
	"\vnext_cursor\x18\x02 \x01(\tR\n" +
	"nextCursor\"\xc6\x01\n" +
	"\x0fTemplateVariant\x12\x1a\n" +
	"\blanguage\x18\x01 \x01(\tR\blanguage\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12&\n" +
	"\x0fcreate_time_sec\x18\x04 \x01(\x03R\rcreateTimeSec\x12&\n" +
	"\x0fupdate_time_sec\x18\x05 \x01(\x03R\rupdateTimeSec\x12\x14\n" +
	"\x05title\x18\x06 \x01(\tR\x05title\x12\x1b\n" +
	"\timage_url\x18\a \x01(\tR\bimageUrl\"\xde\x02\n" +
	"\bCategory\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x14\n" +
	"\x05color\x18\x04 \x01(\tR\x05color\x12&\n" +
	"\x0fcreate_time_sec\x18\x05 \x01(\x03R\rcreateTimeSec\x12&\n" +
	"\x0fupdate_time_sec\x18\x06 \x01(\x03R\rupdateTimeSec\x1ad\n" +
	"\x06Export\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x14\n" +
	"\x05color\x18\x04 \x01(\tR\x05color\x1a@\n" +
	"\x04View\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x14\n" +
	"\x05color\x18\x03 \x01(\tR\x05color\"\xe2\x03\n" +
	"\x18SendDirectMessageRequest\x12\x1f\n" +
	"\vtemplate_id\x18\x01 \x01(\tR\n" +
	"templateId\x12!\n" +
	"\fidentity_ids\x18\x02 \x03(\tR\videntityIds\x12J\n" +
	"\fintegrations\x18\x03 \x03(\x0e2&.nakama.console.MessageIntegrationTypeR\fintegrations\x12\x18\n" +
	"\apersist\x18\x04 \x01(\bR\apersist\x12R\n" +
	"\bchannels\x18\x05 \x03(\v26.nakama.console.SendDirectMessageRequest.ChannelsEntryR\bchannels\x1au\n" +
	"\rChannelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x05R\x03key\x12N\n" +
	"\x05value\x18\x02 \x01(\v28.nakama.console.SendDirectMessageRequest.MessageChannelsR\x05value:\x028\x01\x1aQ\n" +
	"\x0fMessageChannels\x12>\n" +
	"\bchannels\x18\x01 \x03(\x0e2\".nakama.console.MessageChannelTypeR\bchannels\"\xa2\x04\n" +
	"\x19SendDirectMessageResponse\x12c\n" +
	"\x10delivery_results\x18\x01 \x03(\v28.nakama.console.SendDirectMessageResponse.DeliveryResultR\x0fdeliveryResults\x1a\x9f\x03\n" +
	"\x0eDeliveryResult\x12!\n" +
	"\frecipient_id\x18\x01 \x01(\tR\vrecipientId\x12{\n" +
	"\x13integration_results\x18\x02 \x03(\v2J.nakama.console.SendDirectMessageResponse.DeliveryResult.IntegrationResultR\x12integrationResults\x1a\xec\x01\n" +
	"\x11IntegrationResult\x12Q\n" +
	"\x10integration_type\x18\x01 \x01(\x0e2&.nakama.console.MessageIntegrationTypeR\x0fintegrationType\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12E\n" +
	"\fchannel_type\x18\x04 \x01(\x0e2\".nakama.console.MessageChannelTypeR\vchannelType\"\x8d\x05\n" +
	"\x12MessageIntegration\x12:\n" +
	"\x04type\x18\x01 \x01(\x0e2&.nakama.console.MessageIntegrationTypeR\x04type\x12\x18\n" +
	"\aenabled\x18\x02 \x01(\bR\aenabled\x12&\n" +
	"\x0fupdate_time_sec\x18\x03 \x01(\x03R\rupdateTimeSec\x12?\n" +
	"\x04apns\x18\x04 \x01(\v2).nakama.console.AppleMessageConfigurationH\x00R\x04apns\x12B\n" +
	"\x03fcm\x18\x05 \x01(\v2..nakama.console.FirebaseMessagingConfigurationH\x00R\x03fcm\x12h\n" +
	"\x15facebook_notification\x18\x06 \x01(\v21.nakama.console.FacebookNotificationConfigurationH\x00R\x14facebookNotification\x12k\n" +
	"\x16onesignal_notification\x18\a \x01(\v22.nakama.console.OneSignalNotificationConfigurationH\x00R\x15onesignalNotification\x1a\x8b\x01\n" +
	"\x06Export\x12:\n" +
	"\x04type\x18\x01 \x01(\x0e2&.nakama.console.MessageIntegrationTypeR\x04type\x12$\n" +
	"\rconfiguration\x18\x02 \x01(\tR\rconfiguration\x12\x1f\n" +
	"\vupdate_time\x18\x03 \x01(\x03R\n" +
	"updateTimeB\x0f\n" +
	"\rconfiguration\"\x8b\x02\n" +
	"\x19AppleMessageConfiguration\x12\x17\n" +
	"\ateam_id\x18\x01 \x01(\tR\x06teamId\x12\x14\n" +
	"\x05topic\x18\x02 \x01(\tR\x05topic\x12#\n" +
	"\x0ep8_auth_key_id\x18\x03 \x01(\tR\vp8AuthKeyId\x12)\n" +
	"\x11p8_auth_key_value\x18\x04 \x01(\tR\x0ep8AuthKeyValue\x12C\n" +
	"\x03env\x18\x05 \x01(\x0e21.nakama.console.AppleMessageConfiguration.EnvTypeR\x03env\"*\n" +
	"\aEnvType\x12\x0e\n" +
	"\n" +
	"PRODUCTION\x10\x00\x12\x0f\n" +
	"\vDEVELOPMENT\x10\x01\"a\n" +
	"\x1eFirebaseMessagingConfiguration\x12 \n" +
	"\vcredentials\x18\x01 \x01(\tR\vcredentials\x12\x1d\n" +
	"\n" +
	"project_id\x18\x02 \x01(\tR\tprojectId\"Y\n" +
	"!FacebookNotificationConfiguration\x12\x15\n" +
	"\x06app_id\x18\x01 \x01(\tR\x05appId\x12\x1d\n" +
	"\n" +
	"app_secret\x18\x02 \x01(\tR\tappSecret\"T\n" +
	"\"OneSignalNotificationConfiguration\x12\x15\n" +
	"\x06app_id\x18\x01 \x01(\tR\x05appId\x12\x17\n" +
	"\aapi_key\x18\x02 \x01(\tR\x06apiKey\"O\n" +
	"\vPermissions\x12\x12\n" +
	"\x04read\x18\x01 \x01(\bR\x04read\x12\x14\n" +
	"\x05write\x18\x02 \x01(\bR\x05write\x12\x16\n" +
	"\x06delete\x18\x03 \x01(\bR\x06delete*|\n" +
	"\fStatusHealth\x12\x14\n" +
	"\x10STATUS_HEALTH_OK\x10\x00\x12\x17\n" +
	"\x13STATUS_HEALTH_ERROR\x10\x01\x12\x1c\n" +
	"\x18STATUS_HEALTH_CONNECTING\x10\x02\x12\x1f\n" +
	"\x1bSTATUS_HEALTH_DISCONNECTING\x10\x03*\x96\x01\n" +
	"\x16MessageIntegrationType\x12\x18\n" +
	"\x14UNKNOWN_MESSAGE_TYPE\x10\x00\x12\a\n" +
	"\x03FCM\x10\x01\x12\b\n" +
	"\x04APNS\x10\x02\x12\x19\n" +
	"\x15FACEBOOK_NOTIFICATION\x10\x03\x12\x1a\n" +
	"\x16ONESIGNAL_NOTIFICATION\x10\x04\x12\x18\n" +
	"\x14WEBHOOK_NOTIFICATION\x10\x05*6\n" +
	"\x12MessageChannelType\x12\v\n" +
	"\aDEFAULT\x10\x00\x12\b\n" +
	"\x04PUSH\x10\x01\x12\t\n" +
	"\x05EMAIL\x10\x02*\xa5\x04\n" +
	"\fAclResources\x12\v\n" +
	"\aACCOUNT\x10\x00\x12\x12\n" +
	"\x0eACCOUNT_WALLET\x10\x01\x12\x12\n" +
	"\x0eACCOUNT_EXPORT\x10\x02\x12\x13\n" +
	"\x0fACCOUNT_FRIENDS\x10\x03\x12\x12\n" +
	"\x0eACCOUNT_GROUPS\x10\x04\x12\x11\n" +
	"\rACCOUNT_NOTES\x10\x05\x12\x10\n" +
	"\fACL_TEMPLATE\x10\x06\x12\x10\n" +
	"\fALL_ACCOUNTS\x10\a\x12\f\n" +
	"\bALL_DATA\x10\b\x12\x0f\n" +
	"\vALL_STORAGE\x10\t\x12\x10\n" +
	"\fAPI_EXPLORER\x10\n" +
	"\x12\r\n" +
	"\tAUDIT_LOG\x10\v\x12\x11\n" +
	"\rCONFIGURATION\x10\f\x12\x13\n" +
	"\x0fCHANNEL_MESSAGE\x10\r\x12\b\n" +
	"\x04USER\x10\x0e\x12\t\n" +
	"\x05GROUP\x10\x0f\x12\x13\n" +
	"\x0fIN_APP_PURCHASE\x10\x10\x12\x0f\n" +
	"\vLEADERBOARD\x10\x11\x12\x16\n" +
	"\x12LEADERBOARD_RECORD\x10\x12\x12\t\n" +
	"\x05MATCH\x10\x13\x12\x10\n" +
	"\fNOTIFICATION\x10\x14\x12\x12\n" +
	"\x0eSATORI_MESSAGE\x10\x15\x12\f\n" +
	"\bSETTINGS\x10\x16\x12\x10\n" +
	"\fSTORAGE_DATA\x10\x17\x12\x17\n" +
	"\x13STORAGE_DATA_IMPORT\x10\x18\x12\x12\n" +
	"\x0eHIRO_INVENTORY\x10\x19\x12\x14\n" +
	"\x10HIRO_PROGRESSION\x10\x1a\x12\x10\n" +
	"\fHIRO_ECONOMY\x10\x1b\x12\x0e\n" +
	"\n" +
	"HIRO_STATS\x10\x1c\x12\x0f\n" +
	"\vHIRO_ENERGY\x10\x1d*e\n" +
	"\x0eAuditLogAction\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\n" +
	"\n" +
	"\x06CREATE\x10\x01\x12\n" +
	"\n" +
	"\x06UPDATE\x10\x02\x12\n" +
	"\n" +
	"\x06DELETE\x10\x03\x12\n" +
	"\n" +
	"\x06INVOKE\x10\x04\x12\n" +
	"\n" +
	"\x06IMPORT\x10\x05\x12\n" +
	"\n" +
	"\x06EXPORT\x10\x062\xd0e\n" +
	"\aConsole\x12\x83\x01\n" +
	"\fAuthenticate\x12#.nakama.console.AuthenticateRequest\x1a\x1e.nakama.console.ConsoleSession\".\x92A\bb\x06\n" +
	"\x04\n" +
	"\x00\x12\x00\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/v2/console/authenticate\x12\x83\x01\n" +
	"\x12AuthenticateLogout\x12).nakama.console.AuthenticateLogoutRequest\x1a\x16.google.protobuf.Empty\"*\x82\xd3\xe4\x93\x02$:\x01*\"\x1f/v2/console/authenticate/logout\x12\x9a\x01\n" +
	"\x14AuthenticateMFASetup\x12+.nakama.console.AuthenticateMFASetupRequest\x1a,.nakama.console.AuthenticateMFASetupResponse\"'\x82\xd3\xe4\x93\x02!:\x01*\"\x1c/v2/console/authenticate/mfa\x12\x86\x01\n" +
	"\x0eAddAccountNote\x12%.nakama.console.AddAccountNoteRequest\x1a\x1b.nakama.console.AccountNote\"0\x82\xd3\xe4\x93\x02*:\x01*\"%/v2/console/account/{account_id}/note\x12\x94\x01\n" +
	"\x10ListAccountNotes\x12'.nakama.console.ListAccountNotesRequest\x1a(.nakama.console.ListAccountNotesResponse\"-\x82\xd3\xe4\x93\x02'\x12%/v2/console/account/{account_id}/note\x12y\n" +
	"\x0eAddAclTemplate\x12%.nakama.console.AddAclTemplateRequest\x1a\x1b.nakama.console.AclTemplate\"#\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/v2/console/acl/template\x12\x84\x01\n" +
	"\x11UpdateAclTemplate\x12(.nakama.console.UpdateAclTemplateRequest\x1a\x1b.nakama.console.AclTemplate\"(\x82\xd3\xe4\x93\x02\":\x01*\x1a\x1d/v2/console/acl/template/{id}\x12m\n" +
	"\x10ListAclTemplates\x12\x16.google.protobuf.Empty\x1a\x1f.nakama.console.AclTemplateList\" \x82\xd3\xe4\x93\x02\x1a\x12\x18/v2/console/acl/template\x12|\n" +
	"\x11DeleteAclTemplate\x12(.nakama.console.DeleteAclTemplateRequest\x1a\x16.google.protobuf.Empty\"%\x82\xd3\xe4\x93\x02\x1f*\x1d/v2/console/acl/template/{id}\x12\x8e\x01\n" +
	"\x11DeleteAccountNote\x12(.nakama.console.DeleteAccountNoteRequest\x1a\x16.google.protobuf.Empty\"7\x82\xd3\xe4\x93\x021*//v2/console/account/{account_id}/note/{note_id}\x12g\n" +
	"\aAddUser\x12\x1e.nakama.console.AddUserRequest\x1a\x1f.nakama.console.AddUserResponse\"\x1b\x82\xd3\xe4\x93\x02\x15:\x01*\"\x10/v2/console/user\x12\x84\x01\n" +
	"\x11ResetUserPassword\x12\x18.nakama.console.Username\x1a!.nakama.console.ResetUserResponse\"2\x82\xd3\xe4\x93\x02,\"*/v1/console/user/{username}/reset/password\x12z\n" +
	"\rAddGroupUsers\x12$.nakama.console.AddGroupUsersRequest\x1a\x16.google.protobuf.Empty\"+\x82\xd3\xe4\x93\x02%:\x01*\" /v2/console/group/{group_id}/add\x12e\n" +
	"\n" +
	"BanAccount\x12\x19.nakama.console.AccountId\x1a\x16.google.protobuf.Empty\"$\x82\xd3\xe4\x93\x02\x1e\"\x1c/v2/console/account/{id}/ban\x12\x91\x01\n" +
	"\x0fCallApiEndpoint\x12&.nakama.console.CallApiEndpointRequest\x1a'.nakama.console.CallApiEndpointResponse\"-\x82\xd3\xe4\x93\x02':\x01*\"\"/v2/console/api/endpoints/{method}\x12\x95\x01\n" +
	"\x0fCallRpcEndpoint\x12&.nakama.console.CallApiEndpointRequest\x1a'.nakama.console.CallApiEndpointResponse\"1\x82\xd3\xe4\x93\x02+:\x01*\"&/v2/console/api/endpoints/rpc/{method}\x12X\n" +
	"\rDeleteAllData\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.Empty\"\x17\x82\xd3\xe4\x93\x02\x11*\x0f/v2/console/all\x12o\n" +
	"\rDeleteAccount\x12$.nakama.console.AccountDeleteRequest\x1a\x16.google.protobuf.Empty\" \x82\xd3\xe4\x93\x02\x1a*\x18/v2/console/account/{id}\x12\x91\x01\n" +
	"\x15DeleteChannelMessages\x12,.nakama.console.DeleteChannelMessagesRequest\x1a-.nakama.console.DeleteChannelMessagesResponse\"\x1b\x82\xd3\xe4\x93\x02\x15*\x13/v2/console/message\x12\x80\x01\n" +
	"\fDeleteFriend\x12#.nakama.console.DeleteFriendRequest\x1a\x16.google.protobuf.Empty\"3\x82\xd3\xe4\x93\x02-*+/v2/console/account/{id}/friend/{friend_id}\x12i\n" +
	"\vDeleteGroup\x12\".nakama.console.DeleteGroupRequest\x1a\x16.google.protobuf.Empty\"\x1e\x82\xd3\xe4\x93\x02\x18*\x16/v2/console/group/{id}\x12\x84\x01\n" +
	"\x0fDeleteGroupUser\x12&.nakama.console.DeleteGroupUserRequest\x1a\x16.google.protobuf.Empty\"1\x82\xd3\xe4\x93\x02+*)/v2/console/account/{id}/group/{group_id}\x12\\\n" +
	"\rDeleteStorage\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.Empty\"\x1b\x82\xd3\xe4\x93\x02\x15*\x13/v2/console/storage\x12\xd1\x01\n" +
	"\x13DeleteStorageObject\x12*.nakama.console.DeleteStorageObjectRequest\x1a\x16.google.protobuf.Empty\"v\x82\xd3\xe4\x93\x02pZ<*:/v2/console/storage/{collection}/{key}/{user_id}/{version}*0/v2/console/storage/{collection}/{key}/{user_id}\x12]\n" +
	"\x0eDeleteAccounts\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.Empty\"\x1b\x82\xd3\xe4\x93\x02\x15*\x13/v2/console/account\x12u\n" +
	"\x11DeleteLeaderboard\x12\".nakama.console.LeaderboardRequest\x1a\x16.google.protobuf.Empty\"$\x82\xd3\xe4\x93\x02\x1e*\x1c/v2/console/leaderboard/{id}\x12\x98\x01\n" +
	"\x17DeleteLeaderboardRecord\x12..nakama.console.DeleteLeaderboardRecordRequest\x1a\x16.google.protobuf.Empty\"5\x82\xd3\xe4\x93\x02/*-/v2/console/leaderboard/{id}/owner/{owner_id}\x12~\n" +
	"\x12DeleteNotification\x12).nakama.console.DeleteNotificationRequest\x1a\x16.google.protobuf.Empty\"%\x82\xd3\xe4\x93\x02\x1f*\x1d/v2/console/notification/{id}\x12X\n" +
	"\n" +
	"DeleteUser\x12\x18.nakama.console.Username\x1a\x16.google.protobuf.Empty\"\x18\x82\xd3\xe4\x93\x02\x12*\x10/v2/console/user\x12\x8c\x01\n" +
	"\x12DeleteWalletLedger\x12).nakama.console.DeleteWalletLedgerRequest\x1a\x16.google.protobuf.Empty\"3\x82\xd3\xe4\x93\x02-*+/v2/console/account/{id}/wallet/{wallet_id}\x12\x92\x01\n" +
	"\x11DemoteGroupMember\x12+.nakama.console.UpdateGroupUserStateRequest\x1a\x16.google.protobuf.Empty\"8\x82\xd3\xe4\x93\x022\"0/v2/console/group/{group_id}/account/{id}/demote\x12r\n" +
	"\rExportAccount\x12\x19.nakama.console.AccountId\x1a\x1d.nakama.console.AccountExport\"'\x82\xd3\xe4\x93\x02!\x12\x1f/v2/console/account/{id}/export\x12r\n" +
	"\rImportAccount\x12\x1d.nakama.console.AccountImport\x1a\x16.google.protobuf.Empty\"*\x82\xd3\xe4\x93\x02$:\x01*\x1a\x1f/v2/console/account/{id}/import\x12k\n" +
	"\x11ImportAccountFull\x12\x1d.nakama.console.AccountImport\x1a\x17.nakama.console.Account\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*\"\x13/v2/console/account\x12j\n" +
	"\vExportGroup\x12\x17.nakama.console.GroupId\x1a\x1b.nakama.console.GroupExport\"%\x82\xd3\xe4\x93\x02\x1f\x12\x1d/v2/console/group/{id}/export\x12b\n" +
	"\n" +
	"GetAccount\x12\x19.nakama.console.AccountId\x1a\x17.nakama.console.Account\" \x82\xd3\xe4\x93\x02\x1a\x12\x18/v2/console/account/{id}\x12W\n" +
	"\tGetConfig\x12\x16.google.protobuf.Empty\x1a\x16.nakama.console.Config\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/v2/console/config\x12h\n" +
	"\n" +
	"GetFriends\x12\x19.nakama.console.AccountId\x1a\x16.nakama.api.FriendList\"'\x82\xd3\xe4\x93\x02!\x12\x1f/v2/console/account/{id}/friend\x12V\n" +
	"\bGetGroup\x12\x17.nakama.console.GroupId\x1a\x11.nakama.api.Group\"\x1e\x82\xd3\xe4\x93\x02\x18\x12\x16/v2/console/group/{id}\x12g\n" +
	"\n" +
	"GetMembers\x12\x17.nakama.console.GroupId\x1a\x19.nakama.api.GroupUserList\"%\x82\xd3\xe4\x93\x02\x1f\x12\x1d/v2/console/group/{id}/member\x12i\n" +
	"\tGetGroups\x12\x19.nakama.console.AccountId\x1a\x19.nakama.api.UserGroupList\"&\x82\xd3\xe4\x93\x02 \x12\x1e/v2/console/account/{id}/group\x12w\n" +
	"\x0eGetLeaderboard\x12\".nakama.console.LeaderboardRequest\x1a\x1b.nakama.console.Leaderboard\"$\x82\xd3\xe4\x93\x02\x1e\x12\x1c/v2/console/leaderboard/{id}\x12t\n" +
	"\rGetMatchState\x12!.nakama.console.MatchStateRequest\x1a\x1a.nakama.console.MatchState\"$\x82\xd3\xe4\x93\x02\x1e\x12\x1c/v2/console/match/{id}/state\x12^\n" +
	"\n" +
	"GetRuntime\x12\x16.google.protobuf.Empty\x1a\x1b.nakama.console.RuntimeInfo\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/v2/console/runtime\x12i\n" +
	"\n" +
	"GetSetting\x12\x1e.nakama.console.SettingRequest\x1a\x17.nakama.console.Setting\"\"\x82\xd3\xe4\x93\x02\x1c\x12\x1a/v2/console/setting/{name}\x12[\n" +
	"\tGetStatus\x12\x16.google.protobuf.Empty\x1a\x1a.nakama.console.StatusList\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/v2/console/status\x12\x82\x01\n" +
	"\n" +
	"GetStorage\x12\x1f.nakama.api.ReadStorageObjectId\x1a\x19.nakama.api.StorageObject\"8\x82\xd3\xe4\x93\x022\x120/v2/console/storage/{collection}/{key}/{user_id}\x12^\n" +
	"\aGetUser\x12\x18.nakama.console.Username\x1a\x14.nakama.console.User\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/v2/console/user/{username}\x12\x8c\x01\n" +
	"\x0fGetWalletLedger\x12&.nakama.console.GetWalletLedgerRequest\x1a .nakama.console.WalletLedgerList\"/\x82\xd3\xe4\x93\x02)\x12'/v2/console/account/{account_id}/wallet\x12~\n" +
	"\x0fGetNotification\x12&.nakama.console.GetNotificationRequest\x1a\x1c.nakama.console.Notification\"%\x82\xd3\xe4\x93\x02\x1f\x12\x1d/v2/console/notification/{id}\x12\x83\x01\n" +
	"\vGetPurchase\x12\".nakama.console.GetPurchaseRequest\x1a\x1d.nakama.api.ValidatedPurchase\"1\x82\xd3\xe4\x93\x02+\x12)/v2/console/iap/purchase/{transaction_id}\x12\x9c\x01\n" +
	"\x0fGetSubscription\x12&.nakama.console.GetSubscriptionRequest\x1a!.nakama.api.ValidatedSubscription\">\x82\xd3\xe4\x93\x028\x126/v2/console/iap/subscription/{original_transaction_id}\x12m\n" +
	"\rListAuditLogs\x12\x1f.nakama.console.AuditLogRequest\x1a\x1c.nakama.console.AuditLogList\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/v2/console/audit/log\x12t\n" +
	"\x12ListAuditLogsUsers\x12\x16.google.protobuf.Empty\x1a!.nakama.console.AuditLogUsersList\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/v2/console/audit/log/users\x12n\n" +
	"\x10ListApiEndpoints\x12\x16.google.protobuf.Empty\x1a\x1f.nakama.console.ApiEndpointList\"!\x82\xd3\xe4\x93\x02\x1b\x12\x19/v2/console/api/endpoints\x12\xa0\x01\n" +
	"\x16ListLeaderboardRecords\x12).nakama.api.ListLeaderboardRecordsRequest\x1a!.nakama.api.LeaderboardRecordList\"8\x82\xd3\xe4\x93\x022\x120/v2/console/leaderboard/{leaderboard_id}/records\x12|\n" +
	"\x10ListLeaderboards\x12&.nakama.console.LeaderboardListRequest\x1a\x1f.nakama.console.LeaderboardList\"\x1f\x82\xd3\xe4\x93\x02\x19\x12\x17/v2/console/leaderboard\x12m\n" +
	"\fListSettings\x12#.nakama.console.ListSettingsRequest\x1a\x1b.nakama.console.SettingList\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/v2/console/setting\x12k\n" +
	"\vListStorage\x12\".nakama.console.ListStorageRequest\x1a\x1b.nakama.console.StorageList\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/v2/console/storage\x12\x81\x01\n" +
	"\x16ListStorageCollections\x12\x16.google.protobuf.Empty\x1a&.nakama.console.StorageCollectionsList\"'\x82\xd3\xe4\x93\x02!\x12\x1f/v2/console/storage/collections\x12m\n" +
	"\fListAccounts\x12#.nakama.console.ListAccountsRequest\x1a\x1b.nakama.console.AccountList\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/v2/console/account\x12~\n" +
	"\x13ListChannelMessages\x12*.nakama.console.ListChannelMessagesRequest\x1a\x1e.nakama.api.ChannelMessageList\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/v2/console/channel\x12e\n" +
	"\n" +
	"ListGroups\x12!.nakama.console.ListGroupsRequest\x1a\x19.nakama.console.GroupList\"\x19\x82\xd3\xe4\x93\x02\x13\x12\x11/v2/console/group\x12\x81\x01\n" +
	"\x11ListNotifications\x12(.nakama.console.ListNotificationsRequest\x1a .nakama.console.NotificationList\" \x82\xd3\xe4\x93\x02\x1a\x12\x18/v2/console/notification\x12g\n" +
	"\vListMatches\x12\".nakama.console.ListMatchesRequest\x1a\x19.nakama.console.MatchList\"\x19\x82\xd3\xe4\x93\x02\x13\x12\x11/v2/console/match\x12m\n" +
	"\rListPurchases\x12$.nakama.console.ListPurchasesRequest\x1a\x18.nakama.api.PurchaseList\"\x1c\x82\xd3\xe4\x93\x02\x16\x12\x14/v2/console/purchase\x12}\n" +
	"\x11ListSubscriptions\x12(.nakama.console.ListSubscriptionsRequest\x1a\x1c.nakama.api.SubscriptionList\" \x82\xd3\xe4\x93\x02\x1a\x12\x18/v2/console/subscription\x12W\n" +
	"\tListUsers\x12\x16.google.protobuf.Empty\x1a\x18.nakama.console.UserList\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/v2/console/user\x12\x94\x01\n" +
	"\x12PromoteGroupMember\x12+.nakama.console.UpdateGroupUserStateRequest\x1a\x16.google.protobuf.Empty\"9\x82\xd3\xe4\x93\x023\"1/v2/console/group/{group_id}/account/{id}/promote\x12\x83\x01\n" +
	"\x0eRequireUserMfa\x12%.nakama.console.RequireUserMfaRequest\x1a\x16.google.protobuf.Empty\"2\x82\xd3\xe4\x93\x02,:\x01*\"'/v2/console/user/{username}/mfa/require\x12z\n" +
	"\fResetUserMfa\x12#.nakama.console.ResetUserMfaRequest\x1a\x16.google.protobuf.Empty\"-\x82\xd3\xe4\x93\x02'\"%/v2/console/user/{username}/mfa/reset\x12i\n" +
	"\fUnbanAccount\x12\x19.nakama.console.AccountId\x1a\x16.google.protobuf.Empty\"&\x82\xd3\xe4\x93\x02 \"\x1e/v2/console/account/{id}/unban\x12q\n" +
	"\fUnlinkCustom\x12\x19.nakama.console.AccountId\x1a\x16.google.protobuf.Empty\".\x82\xd3\xe4\x93\x02(\"&/v2/console/account/{id}/unlink/custom\x12~\n" +
	"\fUnlinkDevice\x12#.nakama.console.UnlinkDeviceRequest\x1a\x16.google.protobuf.Empty\"1\x82\xd3\xe4\x93\x02+:\x01*\"&/v2/console/account/{id}/unlink/device\x12o\n" +
	"\vUnlinkEmail\x12\x19.nakama.console.AccountId\x1a\x16.google.protobuf.Empty\"-\x82\xd3\xe4\x93\x02'\"%/v2/console/account/{id}/unlink/email\x12o\n" +
	"\vUnlinkApple\x12\x19.nakama.console.AccountId\x1a\x16.google.protobuf.Empty\"-\x82\xd3\xe4\x93\x02'\"%/v2/console/account/{id}/unlink/apple\x12u\n" +
	"\x0eUnlinkFacebook\x12\x19.nakama.console.AccountId\x1a\x16.google.protobuf.Empty\"0\x82\xd3\xe4\x93\x02*\"(/v2/console/account/{id}/unlink/facebook\x12\x8b\x01\n" +
	"\x19UnlinkFacebookInstantGame\x12\x19.nakama.console.AccountId\x1a\x16.google.protobuf.Empty\";\x82\xd3\xe4\x93\x025\"3/v2/console/account/{id}/unlink/facebookinstantgame\x12y\n" +
	"\x10UnlinkGameCenter\x12\x19.nakama.console.AccountId\x1a\x16.google.protobuf.Empty\"2\x82\xd3\xe4\x93\x02,\"*/v2/console/account/{id}/unlink/gamecenter\x12q\n" +
	"\fUnlinkGoogle\x12\x19.nakama.console.AccountId\x1a\x16.google.protobuf.Empty\".\x82\xd3\xe4\x93\x02(\"&/v2/console/account/{id}/unlink/google\x12o\n" +
	"\vUnlinkSteam\x12\x19.nakama.console.AccountId\x1a\x16.google.protobuf.Empty\"-\x82\xd3\xe4\x93\x02'\"%/v2/console/account/{id}/unlink/steam\x12r\n" +
	"\rUpdateAccount\x12$.nakama.console.UpdateAccountRequest\x1a\x16.google.protobuf.Empty\"#\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/v2/console/account/{id}\x12l\n" +
	"\vUpdateGroup\x12\".nakama.console.UpdateGroupRequest\x1a\x16.google.protobuf.Empty\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/v2/console/group/{id}\x12u\n" +
	"\rUpdateSetting\x12$.nakama.console.UpdateSettingRequest\x1a\x17.nakama.console.Setting\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/v2/console/setting/{name}\x12m\n" +
	"\n" +
	"UpdateUser\x12!.nakama.console.UpdateUserRequest\x1a\x14.nakama.console.User\"&\x82\xd3\xe4\x93\x02 :\x01*\x1a\x1b/v2/console/user/{username}\x12\x9a\x01\n" +
	"\x12WriteStorageObject\x12).nakama.console.WriteStorageObjectRequest\x1a\x1c.nakama.api.StorageObjectAck\";\x82\xd3\xe4\x93\x025:\x01*\x1a0/v2/console/storage/{collection}/{key}/{user_id}\x12\x87\x01\n" +
	"\x13SatoriListTemplates\x12$.nakama.console.Template.ListRequest\x1a%.nakama.console.Template.ListResponse\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/v2/console/satori/template\x12\x9c\x01\n" +
	"\x17SatoriSendDirectMessage\x12(.nakama.console.SendDirectMessageRequest\x1a).nakama.console.SendDirectMessageResponse\",\x82\xd3\xe4\x93\x02&:\x01*\"!/v2/console/satori/direct-message\x12x\n" +
	"\x10SendNotification\x12'.nakama.console.SendNotificationRequest\x1a\x16.google.protobuf.Empty\"#\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/v2/console/notification\x12\x8b\x01\n" +
	"\x16HiroListInventoryItems\x12(.nakama.console.HiroInventoryListRequest\x1a\x13.hiro.InventoryList\"2\x82\xd3\xe4\x93\x02,\x12*/v2/console/hiro/inventory/{user_id}/codex\x12\x89\x01\n" +
	"\x1aHiroListUserInventoryItems\x12(.nakama.console.HiroInventoryListRequest\x1a\x13.hiro.InventoryList\",\x82\xd3\xe4\x93\x02&\x12$/v2/console/hiro/inventory/{user_id}\x12\x95\x01\n" +
	"\x19HiroAddUserInventoryItems\x12-.nakama.console.HiroGrantUserInventoryRequest\x1a\x18.hiro.InventoryUpdateAck\"/\x82\xd3\xe4\x93\x02):\x01*\"$/v2/console/hiro/inventory/{user_id}\x12\x9e\x01\n" +
	"\x1cHiroDeleteUserInventoryItems\x123.nakama.console.HiroDeleteUserInventoryItemsRequest\x1a\x18.hiro.InventoryUpdateAck\"/\x82\xd3\xe4\x93\x02):\x01*\x1a$/v2/console/hiro/inventory/{user_id}\x12\x9e\x01\n" +
	"\x1cHiroUpdateUserInventoryItems\x123.nakama.console.HiroUpdateUserInventoryItemsRequest\x1a\x18.hiro.InventoryUpdateAck\"/\x82\xd3\xe4\x93\x02):\x01*2$/v2/console/hiro/inventory/{user_id}\x12\x86\x01\n" +
	"\x14HiroListProgressions\x12'.nakama.console.HiroProgressionsRequest\x1a\x15.hiro.ProgressionList\".\x82\xd3\xe4\x93\x02(\x12&/v2/console/hiro/progression/{user_id}\x12j\n" +
	"\x14RegisteredExtensions\x12\x16.google.protobuf.Empty\x1a\x1a.nakama.console.Extensions\"\x1e\x82\xd3\xe4\x93\x02\x18\x12\x16/v2/console/extensions\x12\x8c\x01\n" +
	"\x15HiroResetProgressions\x12,.nakama.console.HiroResetProgressionsRequest\x1a\x15.hiro.ProgressionList\".\x82\xd3\xe4\x93\x02(*&/v2/console/hiro/progression/{user_id}\x12\x91\x01\n" +
	"\x16HiroUnlockProgressions\x12-.nakama.console.HiroUnlockProgressionsRequest\x1a\x15.hiro.ProgressionList\"1\x82\xd3\xe4\x93\x02+:\x01*\x1a&/v2/console/hiro/progression/{user_id}\x12\x91\x01\n" +
	"\x16HiroUpdateProgressions\x12-.nakama.console.HiroUpdateProgressionsRequest\x1a\x15.hiro.ProgressionList\"1\x82\xd3\xe4\x93\x02+:\x01*2&/v2/console/hiro/progression/{user_id}\x12\x95\x01\n" +
	"\x18HiroPurchaseProgressions\x12/.nakama.console.HiroPurchaseProgressionsRequest\x1a\x15.hiro.ProgressionList\"1\x82\xd3\xe4\x93\x02+:\x01*\"&/v2/console/hiro/progression/{user_id}\x12\x82\x01\n" +
	"\x10HiroEconomyGrant\x12'.nakama.console.HiroEconomyGrantRequest\x1a\x16.hiro.EconomyUpdateAck\"-\x82\xd3\xe4\x93\x02':\x01*\"\"/v2/console/hiro/economy/{user_id}\x12o\n" +
	"\rHiroStatsList\x12$.nakama.console.HiroStatsListRequest\x1a\x0e.hiro.StatList\"(\x82\xd3\xe4\x93\x02\"\x12 /v2/console/hiro/stats/{user_id}\x12v\n" +
	"\x0fHiroStatsUpdate\x12&.nakama.console.HiroStatsUpdateRequest\x1a\x0e.hiro.StatList\"+\x82\xd3\xe4\x93\x02%:\x01*\" /v2/console/hiro/stats/{user_id}\x12y\n" +
	"\x0fHiroEnergyGrant\x12&.nakama.console.HiroEnergyGrantRequest\x1a\x10.hiro.EnergyList\",\x82\xd3\xe4\x93\x02&:\x01*\"!/v2/console/hiro/energy/{user_id}B\xed\x02\x92A\xc0\x02\x12}\n" +
	"\x15Nakama console API v2\"_\n" +
	"!The Nakama Authors & Contributors\x12$https://github.com/heroiclabs/nakama\x1a\x14hello@heroiclabs.com2\x032.0\x1a\x0e127.0.0.1:7351*\x01\x012\x10application/json:\x10application/jsonZ3\n" +
	"\x0f\n" +
	"\tBasicAuth\x12\x02\b\x01\n" +
	" \n" +
	"\tBearerJwt\x12\x13\b\x02\x1a\rAuthorization \x02b\x0f\n" +
	"\r\n" +
	"\tBearerJwt\x12\x00rB\n" +
	"#Nakama server console documentation\x12\x1bhttps://heroiclabs.com/docsZ'github.com/heroiclabs/nakama/v3/consoleb\x06proto3"

var (
	file_console_proto_rawDescOnce sync.Once
	file_console_proto_rawDescData []byte
)

func file_console_proto_rawDescGZIP() []byte {
	file_console_proto_rawDescOnce.Do(func() {
		file_console_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_console_proto_rawDesc), len(file_console_proto_rawDesc)))
	})
	return file_console_proto_rawDescData
}

var file_console_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_console_proto_msgTypes = make([]protoimpl.MessageInfo, 155)
var file_console_proto_goTypes = []any{
	(StatusHealth)(0),                            // 0: nakama.console.StatusHealth
	(MessageIntegrationType)(0),                  // 1: nakama.console.MessageIntegrationType
	(MessageChannelType)(0),                      // 2: nakama.console.MessageChannelType
	(AclResources)(0),                            // 3: nakama.console.AclResources
	(AuditLogAction)(0),                          // 4: nakama.console.AuditLogAction
	(ListChannelMessagesRequest_Type)(0),         // 5: nakama.console.ListChannelMessagesRequest.Type
	(AppleMessageConfiguration_EnvType)(0),       // 6: nakama.console.AppleMessageConfiguration.EnvType
	(*ApiEndpointDescriptor)(nil),                // 7: nakama.console.ApiEndpointDescriptor
	(*Account)(nil),                              // 8: nakama.console.Account
	(*AccountDeleteRequest)(nil),                 // 9: nakama.console.AccountDeleteRequest
	(*AccountExport)(nil),                        // 10: nakama.console.AccountExport
	(*AccountImport)(nil),                        // 11: nakama.console.AccountImport
	(*AccountId)(nil),                            // 12: nakama.console.AccountId
	(*AccountList)(nil),                          // 13: nakama.console.AccountList
	(*AuditLogRequest)(nil),                      // 14: nakama.console.AuditLogRequest
	(*AuditLogUsersList)(nil),                    // 15: nakama.console.AuditLogUsersList
	(*AuditLogList)(nil),                         // 16: nakama.console.AuditLogList
	(*GroupId)(nil),                              // 17: nakama.console.GroupId
	(*GroupList)(nil),                            // 18: nakama.console.GroupList
	(*GroupExport)(nil),                          // 19: nakama.console.GroupExport
	(*MatchList)(nil),                            // 20: nakama.console.MatchList
	(*AddUserRequest)(nil),                       // 21: nakama.console.AddUserRequest
	(*AddGroupUsersRequest)(nil),                 // 22: nakama.console.AddGroupUsersRequest
	(*AddAccountNoteRequest)(nil),                // 23: nakama.console.AddAccountNoteRequest
	(*AddAclTemplateRequest)(nil),                // 24: nakama.console.AddAclTemplateRequest
	(*UpdateAclTemplateRequest)(nil),             // 25: nakama.console.UpdateAclTemplateRequest
	(*AclTemplateList)(nil),                      // 26: nakama.console.AclTemplateList
	(*AclTemplate)(nil),                          // 27: nakama.console.AclTemplate
	(*AccountNote)(nil),                          // 28: nakama.console.AccountNote
	(*ListAccountNotesRequest)(nil),              // 29: nakama.console.ListAccountNotesRequest
	(*DeleteAclTemplateRequest)(nil),             // 30: nakama.console.DeleteAclTemplateRequest
	(*DeleteAccountNoteRequest)(nil),             // 31: nakama.console.DeleteAccountNoteRequest
	(*ListAccountNotesResponse)(nil),             // 32: nakama.console.ListAccountNotesResponse
	(*AddUserResponse)(nil),                      // 33: nakama.console.AddUserResponse
	(*ApiEndpointList)(nil),                      // 34: nakama.console.ApiEndpointList
	(*AuthenticateRequest)(nil),                  // 35: nakama.console.AuthenticateRequest
	(*AuthenticateMFASetupRequest)(nil),          // 36: nakama.console.AuthenticateMFASetupRequest
	(*AuthenticateMFASetupResponse)(nil),         // 37: nakama.console.AuthenticateMFASetupResponse
	(*AuthenticateLogoutRequest)(nil),            // 38: nakama.console.AuthenticateLogoutRequest
	(*CallApiEndpointRequest)(nil),               // 39: nakama.console.CallApiEndpointRequest
	(*CallApiEndpointResponse)(nil),              // 40: nakama.console.CallApiEndpointResponse
	(*Config)(nil),                               // 41: nakama.console.Config
	(*ConsoleSession)(nil),                       // 42: nakama.console.ConsoleSession
	(*DeleteChannelMessagesRequest)(nil),         // 43: nakama.console.DeleteChannelMessagesRequest
	(*DeleteFriendRequest)(nil),                  // 44: nakama.console.DeleteFriendRequest
	(*DeleteGroupRequest)(nil),                   // 45: nakama.console.DeleteGroupRequest
	(*DeleteGroupUserRequest)(nil),               // 46: nakama.console.DeleteGroupUserRequest
	(*UpdateGroupUserStateRequest)(nil),          // 47: nakama.console.UpdateGroupUserStateRequest
	(*ResetUserRequest)(nil),                     // 48: nakama.console.ResetUserRequest
	(*ResetUserMfaRequest)(nil),                  // 49: nakama.console.ResetUserMfaRequest
	(*ResetUserResponse)(nil),                    // 50: nakama.console.ResetUserResponse
	(*RequireUserMfaRequest)(nil),                // 51: nakama.console.RequireUserMfaRequest
	(*DeleteLeaderboardRecordRequest)(nil),       // 52: nakama.console.DeleteLeaderboardRecordRequest
	(*DeleteNotificationRequest)(nil),            // 53: nakama.console.DeleteNotificationRequest
	(*DeleteStorageObjectRequest)(nil),           // 54: nakama.console.DeleteStorageObjectRequest
	(*DeleteWalletLedgerRequest)(nil),            // 55: nakama.console.DeleteWalletLedgerRequest
	(*HiroInventoryListRequest)(nil),             // 56: nakama.console.HiroInventoryListRequest
	(*HiroGrantUserInventoryRequest)(nil),        // 57: nakama.console.HiroGrantUserInventoryRequest
	(*HiroDeleteUserInventoryItemsRequest)(nil),  // 58: nakama.console.HiroDeleteUserInventoryItemsRequest
	(*HiroUpdateUserInventoryItemsRequest)(nil),  // 59: nakama.console.HiroUpdateUserInventoryItemsRequest
	(*HiroProgressionsRequest)(nil),              // 60: nakama.console.HiroProgressionsRequest
	(*HiroResetProgressionsRequest)(nil),         // 61: nakama.console.HiroResetProgressionsRequest
	(*HiroUnlockProgressionsRequest)(nil),        // 62: nakama.console.HiroUnlockProgressionsRequest
	(*HiroUpdateProgressionsRequest)(nil),        // 63: nakama.console.HiroUpdateProgressionsRequest
	(*HiroPurchaseProgressionsRequest)(nil),      // 64: nakama.console.HiroPurchaseProgressionsRequest
	(*HiroEconomyGrantRequest)(nil),              // 65: nakama.console.HiroEconomyGrantRequest
	(*HiroStatsListRequest)(nil),                 // 66: nakama.console.HiroStatsListRequest
	(*HiroStatsUpdateRequest)(nil),               // 67: nakama.console.HiroStatsUpdateRequest
	(*HiroEnergyGrantRequest)(nil),               // 68: nakama.console.HiroEnergyGrantRequest
	(*Extensions)(nil),                           // 69: nakama.console.Extensions
	(*Leaderboard)(nil),                          // 70: nakama.console.Leaderboard
	(*LeaderboardListRequest)(nil),               // 71: nakama.console.LeaderboardListRequest
	(*LeaderboardList)(nil),                      // 72: nakama.console.LeaderboardList
	(*LeaderboardRequest)(nil),                   // 73: nakama.console.LeaderboardRequest
	(*ListAccountsRequest)(nil),                  // 74: nakama.console.ListAccountsRequest
	(*ListChannelMessagesRequest)(nil),           // 75: nakama.console.ListChannelMessagesRequest
	(*ListGroupsRequest)(nil),                    // 76: nakama.console.ListGroupsRequest
	(*ListMatchesRequest)(nil),                   // 77: nakama.console.ListMatchesRequest
	(*ListNotificationsRequest)(nil),             // 78: nakama.console.ListNotificationsRequest
	(*ListPurchasesRequest)(nil),                 // 79: nakama.console.ListPurchasesRequest
	(*ListSubscriptionsRequest)(nil),             // 80: nakama.console.ListSubscriptionsRequest
	(*ListStorageRequest)(nil),                   // 81: nakama.console.ListStorageRequest
	(*MatchState)(nil),                           // 82: nakama.console.MatchState
	(*MatchStateRequest)(nil),                    // 83: nakama.console.MatchStateRequest
	(*Notification)(nil),                         // 84: nakama.console.Notification
	(*NotificationList)(nil),                     // 85: nakama.console.NotificationList
	(*DeleteChannelMessagesResponse)(nil),        // 86: nakama.console.DeleteChannelMessagesResponse
	(*StorageList)(nil),                          // 87: nakama.console.StorageList
	(*StorageCollectionsList)(nil),               // 88: nakama.console.StorageCollectionsList
	(*UnlinkDeviceRequest)(nil),                  // 89: nakama.console.UnlinkDeviceRequest
	(*UpdateAccountRequest)(nil),                 // 90: nakama.console.UpdateAccountRequest
	(*UpdateGroupRequest)(nil),                   // 91: nakama.console.UpdateGroupRequest
	(*Username)(nil),                             // 92: nakama.console.Username
	(*User)(nil),                                 // 93: nakama.console.User
	(*UserList)(nil),                             // 94: nakama.console.UserList
	(*StatusList)(nil),                           // 95: nakama.console.StatusList
	(*RuntimeInfo)(nil),                          // 96: nakama.console.RuntimeInfo
	(*WalletLedger)(nil),                         // 97: nakama.console.WalletLedger
	(*WalletLedgerList)(nil),                     // 98: nakama.console.WalletLedgerList
	(*WriteStorageObjectRequest)(nil),            // 99: nakama.console.WriteStorageObjectRequest
	(*GetWalletLedgerRequest)(nil),               // 100: nakama.console.GetWalletLedgerRequest
	(*GetNotificationRequest)(nil),               // 101: nakama.console.GetNotificationRequest
	(*GetPurchaseRequest)(nil),                   // 102: nakama.console.GetPurchaseRequest
	(*GetSubscriptionRequest)(nil),               // 103: nakama.console.GetSubscriptionRequest
	(*StorageListObject)(nil),                    // 104: nakama.console.StorageListObject
	(*Setting)(nil),                              // 105: nakama.console.Setting
	(*SettingRequest)(nil),                       // 106: nakama.console.SettingRequest
	(*ListSettingsRequest)(nil),                  // 107: nakama.console.ListSettingsRequest
	(*UpdateSettingRequest)(nil),                 // 108: nakama.console.UpdateSettingRequest
	(*SettingList)(nil),                          // 109: nakama.console.SettingList
	(*UpdateUserRequest)(nil),                    // 110: nakama.console.UpdateUserRequest
	(*SendNotificationRequest)(nil),              // 111: nakama.console.SendNotificationRequest
	(*Template)(nil),                             // 112: nakama.console.Template
	(*TemplateVariant)(nil),                      // 113: nakama.console.TemplateVariant
	(*Category)(nil),                             // 114: nakama.console.Category
	(*SendDirectMessageRequest)(nil),             // 115: nakama.console.SendDirectMessageRequest
	(*SendDirectMessageResponse)(nil),            // 116: nakama.console.SendDirectMessageResponse
	(*MessageIntegration)(nil),                   // 117: nakama.console.MessageIntegration
	(*AppleMessageConfiguration)(nil),            // 118: nakama.console.AppleMessageConfiguration
	(*FirebaseMessagingConfiguration)(nil),       // 119: nakama.console.FirebaseMessagingConfiguration
	(*FacebookNotificationConfiguration)(nil),    // 120: nakama.console.FacebookNotificationConfiguration
	(*OneSignalNotificationConfiguration)(nil),   // 121: nakama.console.OneSignalNotificationConfiguration
	(*Permissions)(nil),                          // 122: nakama.console.Permissions
	(*AuditLogList_AuditLog)(nil),                // 123: nakama.console.AuditLogList.AuditLog
	(*MatchList_Match)(nil),                      // 124: nakama.console.MatchList.Match
	nil,                                          // 125: nakama.console.AddUserRequest.AclEntry
	nil,                                          // 126: nakama.console.AddAclTemplateRequest.AclEntry
	nil,                                          // 127: nakama.console.UpdateAclTemplateRequest.AclEntry
	nil,                                          // 128: nakama.console.AclTemplate.AclEntry
	nil,                                          // 129: nakama.console.CallApiEndpointRequest.SessionVarsEntry
	(*Config_Warning)(nil),                       // 130: nakama.console.Config.Warning
	nil,                                          // 131: nakama.console.HiroGrantUserInventoryRequest.ItemsEntry
	nil,                                          // 132: nakama.console.HiroUpdateUserInventoryItemsRequest.ItemUpdatesEntry
	nil,                                          // 133: nakama.console.HiroProgressionsRequest.ProgressionsEntry
	nil,                                          // 134: nakama.console.HiroUpdateProgressionsRequest.CountsEntry
	nil,                                          // 135: nakama.console.HiroEconomyGrantRequest.CurrenciesEntry
	nil,                                          // 136: nakama.console.HiroEnergyGrantRequest.AmountsEntry
	(*Extensions_HiroSystems)(nil),               // 137: nakama.console.Extensions.HiroSystems
	nil,                                          // 138: nakama.console.UpdateAccountRequest.DeviceIdsEntry
	nil,                                          // 139: nakama.console.User.AclEntry
	(*StatusList_Status)(nil),                    // 140: nakama.console.StatusList.Status
	(*RuntimeInfo_ModuleInfo)(nil),               // 141: nakama.console.RuntimeInfo.ModuleInfo
	nil,                                          // 142: nakama.console.UpdateUserRequest.AclEntry
	(*Template_View)(nil),                        // 143: nakama.console.Template.View
	(*Template_Export)(nil),                      // 144: nakama.console.Template.Export
	(*Template_VariantExport)(nil),               // 145: nakama.console.Template.VariantExport
	(*Template_ListRequest)(nil),                 // 146: nakama.console.Template.ListRequest
	(*Template_SingleTextValueFilterOption)(nil), // 147: nakama.console.Template.SingleTextValueFilterOption
	(*Template_ListResponse)(nil),                // 148: nakama.console.Template.ListResponse
	(*Template_CreateRequest)(nil),               // 149: nakama.console.Template.CreateRequest
	(*Template_UpdateRequest)(nil),               // 150: nakama.console.Template.UpdateRequest
	(*Template_PageOptions)(nil),                 // 151: nakama.console.Template.PageOptions
	(*Template_ListRequest_SearchOptions)(nil),   // 152: nakama.console.Template.ListRequest.SearchOptions
	(*Template_ListRequest_MultiTextValueFilterOption)(nil), // 153: nakama.console.Template.ListRequest.MultiTextValueFilterOption
	(*Template_ListRequest_PaginationOptions)(nil),          // 154: nakama.console.Template.ListRequest.PaginationOptions
	(*Category_Export)(nil),                                 // 155: nakama.console.Category.Export
	(*Category_View)(nil),                                   // 156: nakama.console.Category.View
	nil,                                                     // 157: nakama.console.SendDirectMessageRequest.ChannelsEntry
	(*SendDirectMessageRequest_MessageChannels)(nil),        // 158: nakama.console.SendDirectMessageRequest.MessageChannels
	(*SendDirectMessageResponse_DeliveryResult)(nil),        // 159: nakama.console.SendDirectMessageResponse.DeliveryResult
	(*SendDirectMessageResponse_DeliveryResult_IntegrationResult)(nil), // 160: nakama.console.SendDirectMessageResponse.DeliveryResult.IntegrationResult
	(*MessageIntegration_Export)(nil),                                  // 161: nakama.console.MessageIntegration.Export
	(*api.Account)(nil),                                                // 162: nakama.api.Account
	(*timestamppb.Timestamp)(nil),                                      // 163: google.protobuf.Timestamp
	(*wrapperspb.BoolValue)(nil),                                       // 164: google.protobuf.BoolValue
	(*api.StorageObject)(nil),                                          // 165: nakama.api.StorageObject
	(*api.Friend)(nil),                                                 // 166: nakama.api.Friend
	(*api.Group)(nil),                                                  // 167: nakama.api.Group
	(*api.ChannelMessage)(nil),                                         // 168: nakama.api.ChannelMessage
	(*api.LeaderboardRecord)(nil),                                      // 169: nakama.api.LeaderboardRecord
	(*api.Notification)(nil),                                           // 170: nakama.api.Notification
	(*api.User)(nil),                                                   // 171: nakama.api.User
	(*wrapperspb.Int32Value)(nil),                                      // 172: google.protobuf.Int32Value
	(*api.GroupUserList_GroupUser)(nil),                                // 173: nakama.api.GroupUserList.GroupUser
	(*wrapperspb.StringValue)(nil),                                     // 174: google.protobuf.StringValue
	(*hiro.StatUpdate)(nil),                                            // 175: hiro.StatUpdate
	(*rtapi.UserPresence)(nil),                                         // 176: nakama.realtime.UserPresence
	(*structpb.Struct)(nil),                                            // 177: google.protobuf.Struct
	(*api.Match)(nil),                                                  // 178: nakama.api.Match
	(*hiro.InventoryUpdateItemProperties)(nil),                         // 179: hiro.InventoryUpdateItemProperties
	(*hiro.Progression)(nil),                                           // 180: hiro.Progression
	(*emptypb.Empty)(nil),                                              // 181: google.protobuf.Empty
	(*api.ReadStorageObjectId)(nil),                                    // 182: nakama.api.ReadStorageObjectId
	(*api.ListLeaderboardRecordsRequest)(nil),                          // 183: nakama.api.ListLeaderboardRecordsRequest
	(*api.FriendList)(nil),                                             // 184: nakama.api.FriendList
	(*api.GroupUserList)(nil),                                          // 185: nakama.api.GroupUserList
	(*api.UserGroupList)(nil),                                          // 186: nakama.api.UserGroupList
	(*api.ValidatedPurchase)(nil),                                      // 187: nakama.api.ValidatedPurchase
	(*api.ValidatedSubscription)(nil),                                  // 188: nakama.api.ValidatedSubscription
	(*api.LeaderboardRecordList)(nil),                                  // 189: nakama.api.LeaderboardRecordList
	(*api.ChannelMessageList)(nil),                                     // 190: nakama.api.ChannelMessageList
	(*api.PurchaseList)(nil),                                           // 191: nakama.api.PurchaseList
	(*api.SubscriptionList)(nil),                                       // 192: nakama.api.SubscriptionList
	(*api.StorageObjectAck)(nil),                                       // 193: nakama.api.StorageObjectAck
	(*hiro.InventoryList)(nil),                                         // 194: hiro.InventoryList
	(*hiro.InventoryUpdateAck)(nil),                                    // 195: hiro.InventoryUpdateAck
	(*hiro.ProgressionList)(nil),                                       // 196: hiro.ProgressionList
	(*hiro.EconomyUpdateAck)(nil),                                      // 197: hiro.EconomyUpdateAck
	(*hiro.StatList)(nil),                                              // 198: hiro.StatList
	(*hiro.EnergyList)(nil),                                            // 199: hiro.EnergyList
}
var file_console_proto_depIdxs = []int32{
	162, // 0: nakama.console.Account.account:type_name -> nakama.api.Account
	163, // 1: nakama.console.Account.disable_time:type_name -> google.protobuf.Timestamp
	164, // 2: nakama.console.AccountDeleteRequest.record_deletion:type_name -> google.protobuf.BoolValue
	162, // 3: nakama.console.AccountExport.account:type_name -> nakama.api.Account
	165, // 4: nakama.console.AccountExport.objects:type_name -> nakama.api.StorageObject
	166, // 5: nakama.console.AccountExport.friends:type_name -> nakama.api.Friend
	167, // 6: nakama.console.AccountExport.groups:type_name -> nakama.api.Group
	168, // 7: nakama.console.AccountExport.messages:type_name -> nakama.api.ChannelMessage
	169, // 8: nakama.console.AccountExport.leaderboard_records:type_name -> nakama.api.LeaderboardRecord
	170, // 9: nakama.console.AccountExport.notifications:type_name -> nakama.api.Notification
	97,  // 10: nakama.console.AccountExport.wallet_ledgers:type_name -> nakama.console.WalletLedger
	10,  // 11: nakama.console.AccountImport.data:type_name -> nakama.console.AccountExport
	171, // 12: nakama.console.AccountList.users:type_name -> nakama.api.User
	172, // 13: nakama.console.AuditLogRequest.resource:type_name -> google.protobuf.Int32Value
	4,   // 14: nakama.console.AuditLogRequest.action:type_name -> nakama.console.AuditLogAction
	163, // 15: nakama.console.AuditLogRequest.after:type_name -> google.protobuf.Timestamp
	163, // 16: nakama.console.AuditLogRequest.before:type_name -> google.protobuf.Timestamp
	123, // 17: nakama.console.AuditLogList.entries:type_name -> nakama.console.AuditLogList.AuditLog
	167, // 18: nakama.console.GroupList.groups:type_name -> nakama.api.Group
	167, // 19: nakama.console.GroupExport.group:type_name -> nakama.api.Group
	173, // 20: nakama.console.GroupExport.members:type_name -> nakama.api.GroupUserList.GroupUser
	124, // 21: nakama.console.MatchList.matches:type_name -> nakama.console.MatchList.Match
	125, // 22: nakama.console.AddUserRequest.acl:type_name -> nakama.console.AddUserRequest.AclEntry
	126, // 23: nakama.console.AddAclTemplateRequest.acl:type_name -> nakama.console.AddAclTemplateRequest.AclEntry
	127, // 24: nakama.console.UpdateAclTemplateRequest.acl:type_name -> nakama.console.UpdateAclTemplateRequest.AclEntry
	27,  // 25: nakama.console.AclTemplateList.templates:type_name -> nakama.console.AclTemplate
	128, // 26: nakama.console.AclTemplate.acl:type_name -> nakama.console.AclTemplate.AclEntry
	163, // 27: nakama.console.AclTemplate.create_time:type_name -> google.protobuf.Timestamp
	163, // 28: nakama.console.AclTemplate.update_time:type_name -> google.protobuf.Timestamp
	163, // 29: nakama.console.AccountNote.create_time:type_name -> google.protobuf.Timestamp
	163, // 30: nakama.console.AccountNote.update_time:type_name -> google.protobuf.Timestamp
	28,  // 31: nakama.console.ListAccountNotesResponse.notes:type_name -> nakama.console.AccountNote
	93,  // 32: nakama.console.AddUserResponse.user:type_name -> nakama.console.User
	7,   // 33: nakama.console.ApiEndpointList.endpoints:type_name -> nakama.console.ApiEndpointDescriptor
	7,   // 34: nakama.console.ApiEndpointList.rpc_endpoints:type_name -> nakama.console.ApiEndpointDescriptor
	129, // 35: nakama.console.CallApiEndpointRequest.session_vars:type_name -> nakama.console.CallApiEndpointRequest.SessionVarsEntry
	130, // 36: nakama.console.Config.warnings:type_name -> nakama.console.Config.Warning
	174, // 37: nakama.console.ConsoleSession.mfa_code:type_name -> google.protobuf.StringValue
	163, // 38: nakama.console.DeleteChannelMessagesRequest.before:type_name -> google.protobuf.Timestamp
	131, // 39: nakama.console.HiroGrantUserInventoryRequest.items:type_name -> nakama.console.HiroGrantUserInventoryRequest.ItemsEntry
	132, // 40: nakama.console.HiroUpdateUserInventoryItemsRequest.item_updates:type_name -> nakama.console.HiroUpdateUserInventoryItemsRequest.ItemUpdatesEntry
	133, // 41: nakama.console.HiroProgressionsRequest.progressions:type_name -> nakama.console.HiroProgressionsRequest.ProgressionsEntry
	134, // 42: nakama.console.HiroUpdateProgressionsRequest.counts:type_name -> nakama.console.HiroUpdateProgressionsRequest.CountsEntry
	135, // 43: nakama.console.HiroEconomyGrantRequest.currencies:type_name -> nakama.console.HiroEconomyGrantRequest.CurrenciesEntry
	175, // 44: nakama.console.HiroStatsUpdateRequest.public:type_name -> hiro.StatUpdate
	175, // 45: nakama.console.HiroStatsUpdateRequest.private:type_name -> hiro.StatUpdate
	136, // 46: nakama.console.HiroEnergyGrantRequest.amounts:type_name -> nakama.console.HiroEnergyGrantRequest.AmountsEntry
	137, // 47: nakama.console.Extensions.hiro_systems:type_name -> nakama.console.Extensions.HiroSystems
	163, // 48: nakama.console.Leaderboard.create_time:type_name -> google.protobuf.Timestamp
	163, // 49: nakama.console.Leaderboard.start_time:type_name -> google.protobuf.Timestamp
	163, // 50: nakama.console.Leaderboard.end_time:type_name -> google.protobuf.Timestamp
	70,  // 51: nakama.console.LeaderboardList.leaderboards:type_name -> nakama.console.Leaderboard
	5,   // 52: nakama.console.ListChannelMessagesRequest.type:type_name -> nakama.console.ListChannelMessagesRequest.Type
	172, // 53: nakama.console.ListMatchesRequest.limit:type_name -> google.protobuf.Int32Value
	164, // 54: nakama.console.ListMatchesRequest.authoritative:type_name -> google.protobuf.BoolValue
	174, // 55: nakama.console.ListMatchesRequest.label:type_name -> google.protobuf.StringValue
	172, // 56: nakama.console.ListMatchesRequest.min_size:type_name -> google.protobuf.Int32Value
	172, // 57: nakama.console.ListMatchesRequest.max_size:type_name -> google.protobuf.Int32Value
	174, // 58: nakama.console.ListMatchesRequest.query:type_name -> google.protobuf.StringValue
	174, // 59: nakama.console.ListMatchesRequest.node:type_name -> google.protobuf.StringValue
	163, // 60: nakama.console.ListPurchasesRequest.after:type_name -> google.protobuf.Timestamp
	163, // 61: nakama.console.ListPurchasesRequest.before:type_name -> google.protobuf.Timestamp
	163, // 62: nakama.console.ListSubscriptionsRequest.after:type_name -> google.protobuf.Timestamp
	163, // 63: nakama.console.ListSubscriptionsRequest.before:type_name -> google.protobuf.Timestamp
	176, // 64: nakama.console.MatchState.presences:type_name -> nakama.realtime.UserPresence
	163, // 65: nakama.console.Notification.create_time:type_name -> google.protobuf.Timestamp
	84,  // 66: nakama.console.NotificationList.notifications:type_name -> nakama.console.Notification
	104, // 67: nakama.console.StorageList.objects:type_name -> nakama.console.StorageListObject
	174, // 68: nakama.console.UpdateAccountRequest.username:type_name -> google.protobuf.StringValue
	174, // 69: nakama.console.UpdateAccountRequest.display_name:type_name -> google.protobuf.StringValue
	174, // 70: nakama.console.UpdateAccountRequest.metadata:type_name -> google.protobuf.StringValue
	174, // 71: nakama.console.UpdateAccountRequest.avatar_url:type_name -> google.protobuf.StringValue
	174, // 72: nakama.console.UpdateAccountRequest.lang_tag:type_name -> google.protobuf.StringValue
	174, // 73: nakama.console.UpdateAccountRequest.location:type_name -> google.protobuf.StringValue
	174, // 74: nakama.console.UpdateAccountRequest.timezone:type_name -> google.protobuf.StringValue
	174, // 75: nakama.console.UpdateAccountRequest.custom_id:type_name -> google.protobuf.StringValue
	174, // 76: nakama.console.UpdateAccountRequest.email:type_name -> google.protobuf.StringValue
	174, // 77: nakama.console.UpdateAccountRequest.password:type_name -> google.protobuf.StringValue
	138, // 78: nakama.console.UpdateAccountRequest.device_ids:type_name -> nakama.console.UpdateAccountRequest.DeviceIdsEntry
	174, // 79: nakama.console.UpdateAccountRequest.wallet:type_name -> google.protobuf.StringValue
	174, // 80: nakama.console.UpdateGroupRequest.name:type_name -> google.protobuf.StringValue
	174, // 81: nakama.console.UpdateGroupRequest.description:type_name -> google.protobuf.StringValue
	174, // 82: nakama.console.UpdateGroupRequest.lang_tag:type_name -> google.protobuf.StringValue
	174, // 83: nakama.console.UpdateGroupRequest.metadata:type_name -> google.protobuf.StringValue
	174, // 84: nakama.console.UpdateGroupRequest.avatar_url:type_name -> google.protobuf.StringValue
	164, // 85: nakama.console.UpdateGroupRequest.open:type_name -> google.protobuf.BoolValue
	172, // 86: nakama.console.UpdateGroupRequest.max_count:type_name -> google.protobuf.Int32Value
	139, // 87: nakama.console.User.acl:type_name -> nakama.console.User.AclEntry
	163, // 88: nakama.console.User.create_time:type_name -> google.protobuf.Timestamp
	163, // 89: nakama.console.User.update_time:type_name -> google.protobuf.Timestamp
	93,  // 90: nakama.console.UserList.users:type_name -> nakama.console.User
	140, // 91: nakama.console.StatusList.nodes:type_name -> nakama.console.StatusList.Status
	163, // 92: nakama.console.StatusList.timestamp:type_name -> google.protobuf.Timestamp
	141, // 93: nakama.console.RuntimeInfo.go_modules:type_name -> nakama.console.RuntimeInfo.ModuleInfo
	141, // 94: nakama.console.RuntimeInfo.lua_modules:type_name -> nakama.console.RuntimeInfo.ModuleInfo
	141, // 95: nakama.console.RuntimeInfo.js_modules:type_name -> nakama.console.RuntimeInfo.ModuleInfo
	163, // 96: nakama.console.WalletLedger.create_time:type_name -> google.protobuf.Timestamp
	163, // 97: nakama.console.WalletLedger.update_time:type_name -> google.protobuf.Timestamp
	97,  // 98: nakama.console.WalletLedgerList.items:type_name -> nakama.console.WalletLedger
	172, // 99: nakama.console.WriteStorageObjectRequest.permission_read:type_name -> google.protobuf.Int32Value
	172, // 100: nakama.console.WriteStorageObjectRequest.permission_write:type_name -> google.protobuf.Int32Value
	163, // 101: nakama.console.GetWalletLedgerRequest.after:type_name -> google.protobuf.Timestamp
	163, // 102: nakama.console.GetWalletLedgerRequest.before:type_name -> google.protobuf.Timestamp
	163, // 103: nakama.console.StorageListObject.create_time:type_name -> google.protobuf.Timestamp
	163, // 104: nakama.console.StorageListObject.update_time:type_name -> google.protobuf.Timestamp
	105, // 105: nakama.console.SettingList.settings:type_name -> nakama.console.Setting
	3,   // 106: nakama.console.SettingList.acl_resources:type_name -> nakama.console.AclResources
	142, // 107: nakama.console.UpdateUserRequest.acl:type_name -> nakama.console.UpdateUserRequest.AclEntry
	177, // 108: nakama.console.SendNotificationRequest.content:type_name -> google.protobuf.Struct
	113, // 109: nakama.console.Template.variants:type_name -> nakama.console.TemplateVariant
	156, // 110: nakama.console.Template.categories:type_name -> nakama.console.Category.View
	1,   // 111: nakama.console.SendDirectMessageRequest.integrations:type_name -> nakama.console.MessageIntegrationType
	157, // 112: nakama.console.SendDirectMessageRequest.channels:type_name -> nakama.console.SendDirectMessageRequest.ChannelsEntry
	159, // 113: nakama.console.SendDirectMessageResponse.delivery_results:type_name -> nakama.console.SendDirectMessageResponse.DeliveryResult
	1,   // 114: nakama.console.MessageIntegration.type:type_name -> nakama.console.MessageIntegrationType
	118, // 115: nakama.console.MessageIntegration.apns:type_name -> nakama.console.AppleMessageConfiguration
	119, // 116: nakama.console.MessageIntegration.fcm:type_name -> nakama.console.FirebaseMessagingConfiguration
	120, // 117: nakama.console.MessageIntegration.facebook_notification:type_name -> nakama.console.FacebookNotificationConfiguration
	121, // 118: nakama.console.MessageIntegration.onesignal_notification:type_name -> nakama.console.OneSignalNotificationConfiguration
	6,   // 119: nakama.console.AppleMessageConfiguration.env:type_name -> nakama.console.AppleMessageConfiguration.EnvType
	163, // 120: nakama.console.AuditLogList.AuditLog.timestamp:type_name -> google.protobuf.Timestamp
	3,   // 121: nakama.console.AuditLogList.AuditLog.resource:type_name -> nakama.console.AclResources
	4,   // 122: nakama.console.AuditLogList.AuditLog.action:type_name -> nakama.console.AuditLogAction
	178, // 123: nakama.console.MatchList.Match.api_match:type_name -> nakama.api.Match
	122, // 124: nakama.console.AddUserRequest.AclEntry.value:type_name -> nakama.console.Permissions
	122, // 125: nakama.console.AddAclTemplateRequest.AclEntry.value:type_name -> nakama.console.Permissions
	122, // 126: nakama.console.UpdateAclTemplateRequest.AclEntry.value:type_name -> nakama.console.Permissions
	122, // 127: nakama.console.AclTemplate.AclEntry.value:type_name -> nakama.console.Permissions
	179, // 128: nakama.console.HiroUpdateUserInventoryItemsRequest.ItemUpdatesEntry.value:type_name -> hiro.InventoryUpdateItemProperties
	180, // 129: nakama.console.HiroProgressionsRequest.ProgressionsEntry.value:type_name -> hiro.Progression
	122, // 130: nakama.console.User.AclEntry.value:type_name -> nakama.console.Permissions
	0,   // 131: nakama.console.StatusList.Status.health:type_name -> nakama.console.StatusHealth
	163, // 132: nakama.console.RuntimeInfo.ModuleInfo.mod_time:type_name -> google.protobuf.Timestamp
	122, // 133: nakama.console.UpdateUserRequest.AclEntry.value:type_name -> nakama.console.Permissions
	156, // 134: nakama.console.Template.View.categories:type_name -> nakama.console.Category.View
	145, // 135: nakama.console.Template.Export.variants:type_name -> nakama.console.Template.VariantExport
	152, // 136: nakama.console.Template.ListRequest.search:type_name -> nakama.console.Template.ListRequest.SearchOptions
	154, // 137: nakama.console.Template.ListRequest.pagination:type_name -> nakama.console.Template.ListRequest.PaginationOptions
	143, // 138: nakama.console.Template.ListResponse.templates:type_name -> nakama.console.Template.View
	151, // 139: nakama.console.Template.ListResponse.page_options:type_name -> nakama.console.Template.PageOptions
	147, // 140: nakama.console.Template.ListRequest.SearchOptions.name:type_name -> nakama.console.Template.SingleTextValueFilterOption
	153, // 141: nakama.console.Template.ListRequest.SearchOptions.label_name:type_name -> nakama.console.Template.ListRequest.MultiTextValueFilterOption
	158, // 142: nakama.console.SendDirectMessageRequest.ChannelsEntry.value:type_name -> nakama.console.SendDirectMessageRequest.MessageChannels
	2,   // 143: nakama.console.SendDirectMessageRequest.MessageChannels.channels:type_name -> nakama.console.MessageChannelType
	160, // 144: nakama.console.SendDirectMessageResponse.DeliveryResult.integration_results:type_name -> nakama.console.SendDirectMessageResponse.DeliveryResult.IntegrationResult
	1,   // 145: nakama.console.SendDirectMessageResponse.DeliveryResult.IntegrationResult.integration_type:type_name -> nakama.console.MessageIntegrationType
	2,   // 146: nakama.console.SendDirectMessageResponse.DeliveryResult.IntegrationResult.channel_type:type_name -> nakama.console.MessageChannelType
	1,   // 147: nakama.console.MessageIntegration.Export.type:type_name -> nakama.console.MessageIntegrationType
	35,  // 148: nakama.console.Console.Authenticate:input_type -> nakama.console.AuthenticateRequest
	38,  // 149: nakama.console.Console.AuthenticateLogout:input_type -> nakama.console.AuthenticateLogoutRequest
	36,  // 150: nakama.console.Console.AuthenticateMFASetup:input_type -> nakama.console.AuthenticateMFASetupRequest
	23,  // 151: nakama.console.Console.AddAccountNote:input_type -> nakama.console.AddAccountNoteRequest
	29,  // 152: nakama.console.Console.ListAccountNotes:input_type -> nakama.console.ListAccountNotesRequest
	24,  // 153: nakama.console.Console.AddAclTemplate:input_type -> nakama.console.AddAclTemplateRequest
	25,  // 154: nakama.console.Console.UpdateAclTemplate:input_type -> nakama.console.UpdateAclTemplateRequest
	181, // 155: nakama.console.Console.ListAclTemplates:input_type -> google.protobuf.Empty
	30,  // 156: nakama.console.Console.DeleteAclTemplate:input_type -> nakama.console.DeleteAclTemplateRequest
	31,  // 157: nakama.console.Console.DeleteAccountNote:input_type -> nakama.console.DeleteAccountNoteRequest
	21,  // 158: nakama.console.Console.AddUser:input_type -> nakama.console.AddUserRequest
	92,  // 159: nakama.console.Console.ResetUserPassword:input_type -> nakama.console.Username
	22,  // 160: nakama.console.Console.AddGroupUsers:input_type -> nakama.console.AddGroupUsersRequest
	12,  // 161: nakama.console.Console.BanAccount:input_type -> nakama.console.AccountId
	39,  // 162: nakama.console.Console.CallApiEndpoint:input_type -> nakama.console.CallApiEndpointRequest
	39,  // 163: nakama.console.Console.CallRpcEndpoint:input_type -> nakama.console.CallApiEndpointRequest
	181, // 164: nakama.console.Console.DeleteAllData:input_type -> google.protobuf.Empty
	9,   // 165: nakama.console.Console.DeleteAccount:input_type -> nakama.console.AccountDeleteRequest
	43,  // 166: nakama.console.Console.DeleteChannelMessages:input_type -> nakama.console.DeleteChannelMessagesRequest
	44,  // 167: nakama.console.Console.DeleteFriend:input_type -> nakama.console.DeleteFriendRequest
	45,  // 168: nakama.console.Console.DeleteGroup:input_type -> nakama.console.DeleteGroupRequest
	46,  // 169: nakama.console.Console.DeleteGroupUser:input_type -> nakama.console.DeleteGroupUserRequest
	181, // 170: nakama.console.Console.DeleteStorage:input_type -> google.protobuf.Empty
	54,  // 171: nakama.console.Console.DeleteStorageObject:input_type -> nakama.console.DeleteStorageObjectRequest
	181, // 172: nakama.console.Console.DeleteAccounts:input_type -> google.protobuf.Empty
	73,  // 173: nakama.console.Console.DeleteLeaderboard:input_type -> nakama.console.LeaderboardRequest
	52,  // 174: nakama.console.Console.DeleteLeaderboardRecord:input_type -> nakama.console.DeleteLeaderboardRecordRequest
	53,  // 175: nakama.console.Console.DeleteNotification:input_type -> nakama.console.DeleteNotificationRequest
	92,  // 176: nakama.console.Console.DeleteUser:input_type -> nakama.console.Username
	55,  // 177: nakama.console.Console.DeleteWalletLedger:input_type -> nakama.console.DeleteWalletLedgerRequest
	47,  // 178: nakama.console.Console.DemoteGroupMember:input_type -> nakama.console.UpdateGroupUserStateRequest
	12,  // 179: nakama.console.Console.ExportAccount:input_type -> nakama.console.AccountId
	11,  // 180: nakama.console.Console.ImportAccount:input_type -> nakama.console.AccountImport
	11,  // 181: nakama.console.Console.ImportAccountFull:input_type -> nakama.console.AccountImport
	17,  // 182: nakama.console.Console.ExportGroup:input_type -> nakama.console.GroupId
	12,  // 183: nakama.console.Console.GetAccount:input_type -> nakama.console.AccountId
	181, // 184: nakama.console.Console.GetConfig:input_type -> google.protobuf.Empty
	12,  // 185: nakama.console.Console.GetFriends:input_type -> nakama.console.AccountId
	17,  // 186: nakama.console.Console.GetGroup:input_type -> nakama.console.GroupId
	17,  // 187: nakama.console.Console.GetMembers:input_type -> nakama.console.GroupId
	12,  // 188: nakama.console.Console.GetGroups:input_type -> nakama.console.AccountId
	73,  // 189: nakama.console.Console.GetLeaderboard:input_type -> nakama.console.LeaderboardRequest
	83,  // 190: nakama.console.Console.GetMatchState:input_type -> nakama.console.MatchStateRequest
	181, // 191: nakama.console.Console.GetRuntime:input_type -> google.protobuf.Empty
	106, // 192: nakama.console.Console.GetSetting:input_type -> nakama.console.SettingRequest
	181, // 193: nakama.console.Console.GetStatus:input_type -> google.protobuf.Empty
	182, // 194: nakama.console.Console.GetStorage:input_type -> nakama.api.ReadStorageObjectId
	92,  // 195: nakama.console.Console.GetUser:input_type -> nakama.console.Username
	100, // 196: nakama.console.Console.GetWalletLedger:input_type -> nakama.console.GetWalletLedgerRequest
	101, // 197: nakama.console.Console.GetNotification:input_type -> nakama.console.GetNotificationRequest
	102, // 198: nakama.console.Console.GetPurchase:input_type -> nakama.console.GetPurchaseRequest
	103, // 199: nakama.console.Console.GetSubscription:input_type -> nakama.console.GetSubscriptionRequest
	14,  // 200: nakama.console.Console.ListAuditLogs:input_type -> nakama.console.AuditLogRequest
	181, // 201: nakama.console.Console.ListAuditLogsUsers:input_type -> google.protobuf.Empty
	181, // 202: nakama.console.Console.ListApiEndpoints:input_type -> google.protobuf.Empty
	183, // 203: nakama.console.Console.ListLeaderboardRecords:input_type -> nakama.api.ListLeaderboardRecordsRequest
	71,  // 204: nakama.console.Console.ListLeaderboards:input_type -> nakama.console.LeaderboardListRequest
	107, // 205: nakama.console.Console.ListSettings:input_type -> nakama.console.ListSettingsRequest
	81,  // 206: nakama.console.Console.ListStorage:input_type -> nakama.console.ListStorageRequest
	181, // 207: nakama.console.Console.ListStorageCollections:input_type -> google.protobuf.Empty
	74,  // 208: nakama.console.Console.ListAccounts:input_type -> nakama.console.ListAccountsRequest
	75,  // 209: nakama.console.Console.ListChannelMessages:input_type -> nakama.console.ListChannelMessagesRequest
	76,  // 210: nakama.console.Console.ListGroups:input_type -> nakama.console.ListGroupsRequest
	78,  // 211: nakama.console.Console.ListNotifications:input_type -> nakama.console.ListNotificationsRequest
	77,  // 212: nakama.console.Console.ListMatches:input_type -> nakama.console.ListMatchesRequest
	79,  // 213: nakama.console.Console.ListPurchases:input_type -> nakama.console.ListPurchasesRequest
	80,  // 214: nakama.console.Console.ListSubscriptions:input_type -> nakama.console.ListSubscriptionsRequest
	181, // 215: nakama.console.Console.ListUsers:input_type -> google.protobuf.Empty
	47,  // 216: nakama.console.Console.PromoteGroupMember:input_type -> nakama.console.UpdateGroupUserStateRequest
	51,  // 217: nakama.console.Console.RequireUserMfa:input_type -> nakama.console.RequireUserMfaRequest
	49,  // 218: nakama.console.Console.ResetUserMfa:input_type -> nakama.console.ResetUserMfaRequest
	12,  // 219: nakama.console.Console.UnbanAccount:input_type -> nakama.console.AccountId
	12,  // 220: nakama.console.Console.UnlinkCustom:input_type -> nakama.console.AccountId
	89,  // 221: nakama.console.Console.UnlinkDevice:input_type -> nakama.console.UnlinkDeviceRequest
	12,  // 222: nakama.console.Console.UnlinkEmail:input_type -> nakama.console.AccountId
	12,  // 223: nakama.console.Console.UnlinkApple:input_type -> nakama.console.AccountId
	12,  // 224: nakama.console.Console.UnlinkFacebook:input_type -> nakama.console.AccountId
	12,  // 225: nakama.console.Console.UnlinkFacebookInstantGame:input_type -> nakama.console.AccountId
	12,  // 226: nakama.console.Console.UnlinkGameCenter:input_type -> nakama.console.AccountId
	12,  // 227: nakama.console.Console.UnlinkGoogle:input_type -> nakama.console.AccountId
	12,  // 228: nakama.console.Console.UnlinkSteam:input_type -> nakama.console.AccountId
	90,  // 229: nakama.console.Console.UpdateAccount:input_type -> nakama.console.UpdateAccountRequest
	91,  // 230: nakama.console.Console.UpdateGroup:input_type -> nakama.console.UpdateGroupRequest
	108, // 231: nakama.console.Console.UpdateSetting:input_type -> nakama.console.UpdateSettingRequest
	110, // 232: nakama.console.Console.UpdateUser:input_type -> nakama.console.UpdateUserRequest
	99,  // 233: nakama.console.Console.WriteStorageObject:input_type -> nakama.console.WriteStorageObjectRequest
	146, // 234: nakama.console.Console.SatoriListTemplates:input_type -> nakama.console.Template.ListRequest
	115, // 235: nakama.console.Console.SatoriSendDirectMessage:input_type -> nakama.console.SendDirectMessageRequest
	111, // 236: nakama.console.Console.SendNotification:input_type -> nakama.console.SendNotificationRequest
	56,  // 237: nakama.console.Console.HiroListInventoryItems:input_type -> nakama.console.HiroInventoryListRequest
	56,  // 238: nakama.console.Console.HiroListUserInventoryItems:input_type -> nakama.console.HiroInventoryListRequest
	57,  // 239: nakama.console.Console.HiroAddUserInventoryItems:input_type -> nakama.console.HiroGrantUserInventoryRequest
	58,  // 240: nakama.console.Console.HiroDeleteUserInventoryItems:input_type -> nakama.console.HiroDeleteUserInventoryItemsRequest
	59,  // 241: nakama.console.Console.HiroUpdateUserInventoryItems:input_type -> nakama.console.HiroUpdateUserInventoryItemsRequest
	60,  // 242: nakama.console.Console.HiroListProgressions:input_type -> nakama.console.HiroProgressionsRequest
	181, // 243: nakama.console.Console.RegisteredExtensions:input_type -> google.protobuf.Empty
	61,  // 244: nakama.console.Console.HiroResetProgressions:input_type -> nakama.console.HiroResetProgressionsRequest
	62,  // 245: nakama.console.Console.HiroUnlockProgressions:input_type -> nakama.console.HiroUnlockProgressionsRequest
	63,  // 246: nakama.console.Console.HiroUpdateProgressions:input_type -> nakama.console.HiroUpdateProgressionsRequest
	64,  // 247: nakama.console.Console.HiroPurchaseProgressions:input_type -> nakama.console.HiroPurchaseProgressionsRequest
	65,  // 248: nakama.console.Console.HiroEconomyGrant:input_type -> nakama.console.HiroEconomyGrantRequest
	66,  // 249: nakama.console.Console.HiroStatsList:input_type -> nakama.console.HiroStatsListRequest
	67,  // 250: nakama.console.Console.HiroStatsUpdate:input_type -> nakama.console.HiroStatsUpdateRequest
	68,  // 251: nakama.console.Console.HiroEnergyGrant:input_type -> nakama.console.HiroEnergyGrantRequest
	42,  // 252: nakama.console.Console.Authenticate:output_type -> nakama.console.ConsoleSession
	181, // 253: nakama.console.Console.AuthenticateLogout:output_type -> google.protobuf.Empty
	37,  // 254: nakama.console.Console.AuthenticateMFASetup:output_type -> nakama.console.AuthenticateMFASetupResponse
	28,  // 255: nakama.console.Console.AddAccountNote:output_type -> nakama.console.AccountNote
	32,  // 256: nakama.console.Console.ListAccountNotes:output_type -> nakama.console.ListAccountNotesResponse
	27,  // 257: nakama.console.Console.AddAclTemplate:output_type -> nakama.console.AclTemplate
	27,  // 258: nakama.console.Console.UpdateAclTemplate:output_type -> nakama.console.AclTemplate
	26,  // 259: nakama.console.Console.ListAclTemplates:output_type -> nakama.console.AclTemplateList
	181, // 260: nakama.console.Console.DeleteAclTemplate:output_type -> google.protobuf.Empty
	181, // 261: nakama.console.Console.DeleteAccountNote:output_type -> google.protobuf.Empty
	33,  // 262: nakama.console.Console.AddUser:output_type -> nakama.console.AddUserResponse
	50,  // 263: nakama.console.Console.ResetUserPassword:output_type -> nakama.console.ResetUserResponse
	181, // 264: nakama.console.Console.AddGroupUsers:output_type -> google.protobuf.Empty
	181, // 265: nakama.console.Console.BanAccount:output_type -> google.protobuf.Empty
	40,  // 266: nakama.console.Console.CallApiEndpoint:output_type -> nakama.console.CallApiEndpointResponse
	40,  // 267: nakama.console.Console.CallRpcEndpoint:output_type -> nakama.console.CallApiEndpointResponse
	181, // 268: nakama.console.Console.DeleteAllData:output_type -> google.protobuf.Empty
	181, // 269: nakama.console.Console.DeleteAccount:output_type -> google.protobuf.Empty
	86,  // 270: nakama.console.Console.DeleteChannelMessages:output_type -> nakama.console.DeleteChannelMessagesResponse
	181, // 271: nakama.console.Console.DeleteFriend:output_type -> google.protobuf.Empty
	181, // 272: nakama.console.Console.DeleteGroup:output_type -> google.protobuf.Empty
	181, // 273: nakama.console.Console.DeleteGroupUser:output_type -> google.protobuf.Empty
	181, // 274: nakama.console.Console.DeleteStorage:output_type -> google.protobuf.Empty
	181, // 275: nakama.console.Console.DeleteStorageObject:output_type -> google.protobuf.Empty
	181, // 276: nakama.console.Console.DeleteAccounts:output_type -> google.protobuf.Empty
	181, // 277: nakama.console.Console.DeleteLeaderboard:output_type -> google.protobuf.Empty
	181, // 278: nakama.console.Console.DeleteLeaderboardRecord:output_type -> google.protobuf.Empty
	181, // 279: nakama.console.Console.DeleteNotification:output_type -> google.protobuf.Empty
	181, // 280: nakama.console.Console.DeleteUser:output_type -> google.protobuf.Empty
	181, // 281: nakama.console.Console.DeleteWalletLedger:output_type -> google.protobuf.Empty
	181, // 282: nakama.console.Console.DemoteGroupMember:output_type -> google.protobuf.Empty
	10,  // 283: nakama.console.Console.ExportAccount:output_type -> nakama.console.AccountExport
	181, // 284: nakama.console.Console.ImportAccount:output_type -> google.protobuf.Empty
	8,   // 285: nakama.console.Console.ImportAccountFull:output_type -> nakama.console.Account
	19,  // 286: nakama.console.Console.ExportGroup:output_type -> nakama.console.GroupExport
	8,   // 287: nakama.console.Console.GetAccount:output_type -> nakama.console.Account
	41,  // 288: nakama.console.Console.GetConfig:output_type -> nakama.console.Config
	184, // 289: nakama.console.Console.GetFriends:output_type -> nakama.api.FriendList
	167, // 290: nakama.console.Console.GetGroup:output_type -> nakama.api.Group
	185, // 291: nakama.console.Console.GetMembers:output_type -> nakama.api.GroupUserList
	186, // 292: nakama.console.Console.GetGroups:output_type -> nakama.api.UserGroupList
	70,  // 293: nakama.console.Console.GetLeaderboard:output_type -> nakama.console.Leaderboard
	82,  // 294: nakama.console.Console.GetMatchState:output_type -> nakama.console.MatchState
	96,  // 295: nakama.console.Console.GetRuntime:output_type -> nakama.console.RuntimeInfo
	105, // 296: nakama.console.Console.GetSetting:output_type -> nakama.console.Setting
	95,  // 297: nakama.console.Console.GetStatus:output_type -> nakama.console.StatusList
	165, // 298: nakama.console.Console.GetStorage:output_type -> nakama.api.StorageObject
	93,  // 299: nakama.console.Console.GetUser:output_type -> nakama.console.User
	98,  // 300: nakama.console.Console.GetWalletLedger:output_type -> nakama.console.WalletLedgerList
	84,  // 301: nakama.console.Console.GetNotification:output_type -> nakama.console.Notification
	187, // 302: nakama.console.Console.GetPurchase:output_type -> nakama.api.ValidatedPurchase
	188, // 303: nakama.console.Console.GetSubscription:output_type -> nakama.api.ValidatedSubscription
	16,  // 304: nakama.console.Console.ListAuditLogs:output_type -> nakama.console.AuditLogList
	15,  // 305: nakama.console.Console.ListAuditLogsUsers:output_type -> nakama.console.AuditLogUsersList
	34,  // 306: nakama.console.Console.ListApiEndpoints:output_type -> nakama.console.ApiEndpointList
	189, // 307: nakama.console.Console.ListLeaderboardRecords:output_type -> nakama.api.LeaderboardRecordList
	72,  // 308: nakama.console.Console.ListLeaderboards:output_type -> nakama.console.LeaderboardList
	109, // 309: nakama.console.Console.ListSettings:output_type -> nakama.console.SettingList
	87,  // 310: nakama.console.Console.ListStorage:output_type -> nakama.console.StorageList
	88,  // 311: nakama.console.Console.ListStorageCollections:output_type -> nakama.console.StorageCollectionsList
	13,  // 312: nakama.console.Console.ListAccounts:output_type -> nakama.console.AccountList
	190, // 313: nakama.console.Console.ListChannelMessages:output_type -> nakama.api.ChannelMessageList
	18,  // 314: nakama.console.Console.ListGroups:output_type -> nakama.console.GroupList
	85,  // 315: nakama.console.Console.ListNotifications:output_type -> nakama.console.NotificationList
	20,  // 316: nakama.console.Console.ListMatches:output_type -> nakama.console.MatchList
	191, // 317: nakama.console.Console.ListPurchases:output_type -> nakama.api.PurchaseList
	192, // 318: nakama.console.Console.ListSubscriptions:output_type -> nakama.api.SubscriptionList
	94,  // 319: nakama.console.Console.ListUsers:output_type -> nakama.console.UserList
	181, // 320: nakama.console.Console.PromoteGroupMember:output_type -> google.protobuf.Empty
	181, // 321: nakama.console.Console.RequireUserMfa:output_type -> google.protobuf.Empty
	181, // 322: nakama.console.Console.ResetUserMfa:output_type -> google.protobuf.Empty
	181, // 323: nakama.console.Console.UnbanAccount:output_type -> google.protobuf.Empty
	181, // 324: nakama.console.Console.UnlinkCustom:output_type -> google.protobuf.Empty
	181, // 325: nakama.console.Console.UnlinkDevice:output_type -> google.protobuf.Empty
	181, // 326: nakama.console.Console.UnlinkEmail:output_type -> google.protobuf.Empty
	181, // 327: nakama.console.Console.UnlinkApple:output_type -> google.protobuf.Empty
	181, // 328: nakama.console.Console.UnlinkFacebook:output_type -> google.protobuf.Empty
	181, // 329: nakama.console.Console.UnlinkFacebookInstantGame:output_type -> google.protobuf.Empty
	181, // 330: nakama.console.Console.UnlinkGameCenter:output_type -> google.protobuf.Empty
	181, // 331: nakama.console.Console.UnlinkGoogle:output_type -> google.protobuf.Empty
	181, // 332: nakama.console.Console.UnlinkSteam:output_type -> google.protobuf.Empty
	181, // 333: nakama.console.Console.UpdateAccount:output_type -> google.protobuf.Empty
	181, // 334: nakama.console.Console.UpdateGroup:output_type -> google.protobuf.Empty
	105, // 335: nakama.console.Console.UpdateSetting:output_type -> nakama.console.Setting
	93,  // 336: nakama.console.Console.UpdateUser:output_type -> nakama.console.User
	193, // 337: nakama.console.Console.WriteStorageObject:output_type -> nakama.api.StorageObjectAck
	148, // 338: nakama.console.Console.SatoriListTemplates:output_type -> nakama.console.Template.ListResponse
	116, // 339: nakama.console.Console.SatoriSendDirectMessage:output_type -> nakama.console.SendDirectMessageResponse
	181, // 340: nakama.console.Console.SendNotification:output_type -> google.protobuf.Empty
	194, // 341: nakama.console.Console.HiroListInventoryItems:output_type -> hiro.InventoryList
	194, // 342: nakama.console.Console.HiroListUserInventoryItems:output_type -> hiro.InventoryList
	195, // 343: nakama.console.Console.HiroAddUserInventoryItems:output_type -> hiro.InventoryUpdateAck
	195, // 344: nakama.console.Console.HiroDeleteUserInventoryItems:output_type -> hiro.InventoryUpdateAck
	195, // 345: nakama.console.Console.HiroUpdateUserInventoryItems:output_type -> hiro.InventoryUpdateAck
	196, // 346: nakama.console.Console.HiroListProgressions:output_type -> hiro.ProgressionList
	69,  // 347: nakama.console.Console.RegisteredExtensions:output_type -> nakama.console.Extensions
	196, // 348: nakama.console.Console.HiroResetProgressions:output_type -> hiro.ProgressionList
	196, // 349: nakama.console.Console.HiroUnlockProgressions:output_type -> hiro.ProgressionList
	196, // 350: nakama.console.Console.HiroUpdateProgressions:output_type -> hiro.ProgressionList
	196, // 351: nakama.console.Console.HiroPurchaseProgressions:output_type -> hiro.ProgressionList
	197, // 352: nakama.console.Console.HiroEconomyGrant:output_type -> hiro.EconomyUpdateAck
	198, // 353: nakama.console.Console.HiroStatsList:output_type -> hiro.StatList
	198, // 354: nakama.console.Console.HiroStatsUpdate:output_type -> hiro.StatList
	199, // 355: nakama.console.Console.HiroEnergyGrant:output_type -> hiro.EnergyList
	252, // [252:356] is the sub-list for method output_type
	148, // [148:252] is the sub-list for method input_type
	148, // [148:148] is the sub-list for extension type_name
	148, // [148:148] is the sub-list for extension extendee
	0,   // [0:148] is the sub-list for field type_name
}

func init() { file_console_proto_init() }
func file_console_proto_init() {
	if File_console_proto != nil {
		return
	}
	file_console_proto_msgTypes[110].OneofWrappers = []any{
		(*MessageIntegration_Apns)(nil),
		(*MessageIntegration_Fcm)(nil),
		(*MessageIntegration_FacebookNotification)(nil),
		(*MessageIntegration_OnesignalNotification)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_console_proto_rawDesc), len(file_console_proto_rawDesc)),
			NumEnums:      7,
			NumMessages:   155,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_console_proto_goTypes,
		DependencyIndexes: file_console_proto_depIdxs,
		EnumInfos:         file_console_proto_enumTypes,
		MessageInfos:      file_console_proto_msgTypes,
	}.Build()
	File_console_proto = out.File
	file_console_proto_goTypes = nil
	file_console_proto_depIdxs = nil
}
