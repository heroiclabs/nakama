// Copyright 2018 The Nakama Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//*
// The RPC protocol for the developer console.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.24.3
// source: console.proto

package console

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	api "github.com/heroiclabs/nakama-common/api"
	rtapi "github.com/heroiclabs/nakama-common/rtapi"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserRole int32

const (
	UserRole_USER_ROLE_UNKNOWN    UserRole = 0
	UserRole_USER_ROLE_ADMIN      UserRole = 1 // All access
	UserRole_USER_ROLE_DEVELOPER  UserRole = 2 // Best for developers, also enables APIs and API explorer
	UserRole_USER_ROLE_MAINTAINER UserRole = 3 // Best for users who regularly update player information.
	UserRole_USER_ROLE_READONLY   UserRole = 4 // Read-only role for those only need to view data
)

// Enum value maps for UserRole.
var (
	UserRole_name = map[int32]string{
		0: "USER_ROLE_UNKNOWN",
		1: "USER_ROLE_ADMIN",
		2: "USER_ROLE_DEVELOPER",
		3: "USER_ROLE_MAINTAINER",
		4: "USER_ROLE_READONLY",
	}
	UserRole_value = map[string]int32{
		"USER_ROLE_UNKNOWN":    0,
		"USER_ROLE_ADMIN":      1,
		"USER_ROLE_DEVELOPER":  2,
		"USER_ROLE_MAINTAINER": 3,
		"USER_ROLE_READONLY":   4,
	}
)

func (x UserRole) Enum() *UserRole {
	p := new(UserRole)
	*p = x
	return p
}

func (x UserRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserRole) Descriptor() protoreflect.EnumDescriptor {
	return file_console_proto_enumTypes[0].Descriptor()
}

func (UserRole) Type() protoreflect.EnumType {
	return &file_console_proto_enumTypes[0]
}

func (x UserRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserRole.Descriptor instead.
func (UserRole) EnumDescriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{0}
}

type StatusHealth int32

const (
	StatusHealth_STATUS_HEALTH_OK            StatusHealth = 0
	StatusHealth_STATUS_HEALTH_ERROR         StatusHealth = 1
	StatusHealth_STATUS_HEALTH_CONNECTING    StatusHealth = 2
	StatusHealth_STATUS_HEALTH_DISCONNECTING StatusHealth = 3
)

// Enum value maps for StatusHealth.
var (
	StatusHealth_name = map[int32]string{
		0: "STATUS_HEALTH_OK",
		1: "STATUS_HEALTH_ERROR",
		2: "STATUS_HEALTH_CONNECTING",
		3: "STATUS_HEALTH_DISCONNECTING",
	}
	StatusHealth_value = map[string]int32{
		"STATUS_HEALTH_OK":            0,
		"STATUS_HEALTH_ERROR":         1,
		"STATUS_HEALTH_CONNECTING":    2,
		"STATUS_HEALTH_DISCONNECTING": 3,
	}
)

func (x StatusHealth) Enum() *StatusHealth {
	p := new(StatusHealth)
	*p = x
	return p
}

func (x StatusHealth) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusHealth) Descriptor() protoreflect.EnumDescriptor {
	return file_console_proto_enumTypes[1].Descriptor()
}

func (StatusHealth) Type() protoreflect.EnumType {
	return &file_console_proto_enumTypes[1]
}

func (x StatusHealth) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusHealth.Descriptor instead.
func (StatusHealth) EnumDescriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{1}
}

type ListChannelMessagesRequest_Type int32

const (
	ListChannelMessagesRequest_UNKNOWN ListChannelMessagesRequest_Type = 0
	ListChannelMessagesRequest_ROOM    ListChannelMessagesRequest_Type = 2
	ListChannelMessagesRequest_GROUP   ListChannelMessagesRequest_Type = 3
	ListChannelMessagesRequest_DIRECT  ListChannelMessagesRequest_Type = 4
)

// Enum value maps for ListChannelMessagesRequest_Type.
var (
	ListChannelMessagesRequest_Type_name = map[int32]string{
		0: "UNKNOWN",
		2: "ROOM",
		3: "GROUP",
		4: "DIRECT",
	}
	ListChannelMessagesRequest_Type_value = map[string]int32{
		"UNKNOWN": 0,
		"ROOM":    2,
		"GROUP":   3,
		"DIRECT":  4,
	}
)

func (x ListChannelMessagesRequest_Type) Enum() *ListChannelMessagesRequest_Type {
	p := new(ListChannelMessagesRequest_Type)
	*p = x
	return p
}

func (x ListChannelMessagesRequest_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListChannelMessagesRequest_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_console_proto_enumTypes[2].Descriptor()
}

func (ListChannelMessagesRequest_Type) Type() protoreflect.EnumType {
	return &file_console_proto_enumTypes[2]
}

func (x ListChannelMessagesRequest_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListChannelMessagesRequest_Type.Descriptor instead.
func (ListChannelMessagesRequest_Type) EnumDescriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{37, 0}
}

// API Explorer List of Endpoints response message
type ApiEndpointDescriptor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	BodyTemplate  string                 `protobuf:"bytes,2,opt,name=body_template,json=bodyTemplate,proto3" json:"body_template,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiEndpointDescriptor) Reset() {
	*x = ApiEndpointDescriptor{}
	mi := &file_console_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiEndpointDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiEndpointDescriptor) ProtoMessage() {}

func (x *ApiEndpointDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiEndpointDescriptor.ProtoReflect.Descriptor instead.
func (*ApiEndpointDescriptor) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{0}
}

func (x *ApiEndpointDescriptor) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ApiEndpointDescriptor) GetBodyTemplate() string {
	if x != nil {
		return x.BodyTemplate
	}
	return ""
}

// Account information.
type Account struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user's account details.
	Account *api.Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// The UNIX time when the account was disabled.
	DisableTime   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=disable_time,json=disableTime,proto3" json:"disable_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Account) Reset() {
	*x = Account{}
	mi := &file_console_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{1}
}

func (x *Account) GetAccount() *api.Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *Account) GetDisableTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DisableTime
	}
	return nil
}

// Delete a user account.
type AccountDeleteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the user account.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Record the user deletion - used for GDPR compliance.
	RecordDeletion *wrapperspb.BoolValue `protobuf:"bytes,2,opt,name=record_deletion,json=recordDeletion,proto3" json:"record_deletion,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AccountDeleteRequest) Reset() {
	*x = AccountDeleteRequest{}
	mi := &file_console_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDeleteRequest) ProtoMessage() {}

func (x *AccountDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDeleteRequest.ProtoReflect.Descriptor instead.
func (*AccountDeleteRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{2}
}

func (x *AccountDeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AccountDeleteRequest) GetRecordDeletion() *wrapperspb.BoolValue {
	if x != nil {
		return x.RecordDeletion
	}
	return nil
}

// An export of all information stored for a user account.
type AccountExport struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user's account details.
	Account *api.Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// The user's storage.
	Objects []*api.StorageObject `protobuf:"bytes,2,rep,name=objects,proto3" json:"objects,omitempty"`
	// The user's friends.
	Friends []*api.Friend `protobuf:"bytes,3,rep,name=friends,proto3" json:"friends,omitempty"`
	// The user's groups.
	Groups []*api.Group `protobuf:"bytes,4,rep,name=groups,proto3" json:"groups,omitempty"`
	// The user's chat messages.
	Messages []*api.ChannelMessage `protobuf:"bytes,5,rep,name=messages,proto3" json:"messages,omitempty"`
	// The user's leaderboard records.
	LeaderboardRecords []*api.LeaderboardRecord `protobuf:"bytes,6,rep,name=leaderboard_records,json=leaderboardRecords,proto3" json:"leaderboard_records,omitempty"`
	// The user's notifications.
	Notifications []*api.Notification `protobuf:"bytes,7,rep,name=notifications,proto3" json:"notifications,omitempty"`
	// The user's wallet ledger items.
	WalletLedgers []*WalletLedger `protobuf:"bytes,8,rep,name=wallet_ledgers,json=walletLedgers,proto3" json:"wallet_ledgers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountExport) Reset() {
	*x = AccountExport{}
	mi := &file_console_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountExport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountExport) ProtoMessage() {}

func (x *AccountExport) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountExport.ProtoReflect.Descriptor instead.
func (*AccountExport) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{3}
}

func (x *AccountExport) GetAccount() *api.Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *AccountExport) GetObjects() []*api.StorageObject {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *AccountExport) GetFriends() []*api.Friend {
	if x != nil {
		return x.Friends
	}
	return nil
}

func (x *AccountExport) GetGroups() []*api.Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *AccountExport) GetMessages() []*api.ChannelMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *AccountExport) GetLeaderboardRecords() []*api.LeaderboardRecord {
	if x != nil {
		return x.LeaderboardRecords
	}
	return nil
}

func (x *AccountExport) GetNotifications() []*api.Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *AccountExport) GetWalletLedgers() []*WalletLedger {
	if x != nil {
		return x.WalletLedgers
	}
	return nil
}

// The identifier for a user account.
type AccountId struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the user account.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountId) Reset() {
	*x = AccountId{}
	mi := &file_console_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountId) ProtoMessage() {}

func (x *AccountId) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountId.ProtoReflect.Descriptor instead.
func (*AccountId) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{4}
}

func (x *AccountId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// A list of users.
type AccountList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of users.
	Users []*api.User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	// Approximate total number of users.
	TotalCount int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Next cursor.
	NextCursor    string `protobuf:"bytes,3,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountList) Reset() {
	*x = AccountList{}
	mi := &file_console_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountList) ProtoMessage() {}

func (x *AccountList) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountList.ProtoReflect.Descriptor instead.
func (*AccountList) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{5}
}

func (x *AccountList) GetUsers() []*api.User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *AccountList) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *AccountList) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

// The identifier for a group.
type GroupId struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the group.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupId) Reset() {
	*x = GroupId{}
	mi := &file_console_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupId) ProtoMessage() {}

func (x *GroupId) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupId.ProtoReflect.Descriptor instead.
func (*GroupId) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{6}
}

func (x *GroupId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// A list of groups.
type GroupList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of groups.
	Groups []*api.Group `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	// Approximate total number of groups.
	TotalCount int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Next cursor.
	NextCursor    string `protobuf:"bytes,3,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupList) Reset() {
	*x = GroupList{}
	mi := &file_console_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupList) ProtoMessage() {}

func (x *GroupList) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupList.ProtoReflect.Descriptor instead.
func (*GroupList) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{7}
}

func (x *GroupList) GetGroups() []*api.Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *GroupList) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GroupList) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

// An export of all information stored for a group.
type GroupExport struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The group details.
	Group *api.Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	// The group's list of members.
	Members       []*api.GroupUserList_GroupUser `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupExport) Reset() {
	*x = GroupExport{}
	mi := &file_console_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupExport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupExport) ProtoMessage() {}

func (x *GroupExport) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupExport.ProtoReflect.Descriptor instead.
func (*GroupExport) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{8}
}

func (x *GroupExport) GetGroup() *api.Group {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GroupExport) GetMembers() []*api.GroupUserList_GroupUser {
	if x != nil {
		return x.Members
	}
	return nil
}

// A list of realtime matches, with their node names.
type MatchList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Matches       []*MatchList_Match     `protobuf:"bytes,1,rep,name=matches,proto3" json:"matches,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchList) Reset() {
	*x = MatchList{}
	mi := &file_console_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchList) ProtoMessage() {}

func (x *MatchList) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchList.ProtoReflect.Descriptor instead.
func (*MatchList) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{9}
}

func (x *MatchList) GetMatches() []*MatchList_Match {
	if x != nil {
		return x.Matches
	}
	return nil
}

// Add a new console user
type AddUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The username of the user.
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// The password of the user.
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// Email address of the user.
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	// Role of this user;
	Role UserRole `protobuf:"varint,4,opt,name=role,proto3,enum=nakama.console.UserRole" json:"role,omitempty"`
	// Require MFA
	MfaRequired bool `protobuf:"varint,5,opt,name=mfa_required,json=mfaRequired,proto3" json:"mfa_required,omitempty"`
	// Subscribe to newsletters
	NewsletterSubscription bool `protobuf:"varint,6,opt,name=newsletter_subscription,json=newsletterSubscription,proto3" json:"newsletter_subscription,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AddUserRequest) Reset() {
	*x = AddUserRequest{}
	mi := &file_console_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserRequest) ProtoMessage() {}

func (x *AddUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserRequest.ProtoReflect.Descriptor instead.
func (*AddUserRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{10}
}

func (x *AddUserRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AddUserRequest) GetRole() UserRole {
	if x != nil {
		return x.Role
	}
	return UserRole_USER_ROLE_UNKNOWN
}

func (x *AddUserRequest) GetMfaRequired() bool {
	if x != nil {
		return x.MfaRequired
	}
	return false
}

func (x *AddUserRequest) GetNewsletterSubscription() bool {
	if x != nil {
		return x.NewsletterSubscription
	}
	return false
}

// Add/join users to a group.
type AddGroupUsersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Users to add/join.
	Ids string `protobuf:"bytes,1,opt,name=ids,proto3" json:"ids,omitempty"`
	// ID of the group to add them to.
	GroupId string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// Whether it is a join request.
	JoinRequest   bool `protobuf:"varint,3,opt,name=join_request,json=joinRequest,proto3" json:"join_request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddGroupUsersRequest) Reset() {
	*x = AddGroupUsersRequest{}
	mi := &file_console_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddGroupUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroupUsersRequest) ProtoMessage() {}

func (x *AddGroupUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroupUsersRequest.ProtoReflect.Descriptor instead.
func (*AddGroupUsersRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{11}
}

func (x *AddGroupUsersRequest) GetIds() string {
	if x != nil {
		return x.Ids
	}
	return ""
}

func (x *AddGroupUsersRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *AddGroupUsersRequest) GetJoinRequest() bool {
	if x != nil {
		return x.JoinRequest
	}
	return false
}

// API Explorer List of Endpoints
type ApiEndpointList struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Endpoints     []*ApiEndpointDescriptor `protobuf:"bytes,1,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	RpcEndpoints  []*ApiEndpointDescriptor `protobuf:"bytes,2,rep,name=rpc_endpoints,json=rpcEndpoints,proto3" json:"rpc_endpoints,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiEndpointList) Reset() {
	*x = ApiEndpointList{}
	mi := &file_console_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiEndpointList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiEndpointList) ProtoMessage() {}

func (x *ApiEndpointList) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiEndpointList.ProtoReflect.Descriptor instead.
func (*ApiEndpointList) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{12}
}

func (x *ApiEndpointList) GetEndpoints() []*ApiEndpointDescriptor {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *ApiEndpointList) GetRpcEndpoints() []*ApiEndpointDescriptor {
	if x != nil {
		return x.RpcEndpoints
	}
	return nil
}

// Authenticate a console user with username and password.
type AuthenticateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The username of the user.
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// The password of the user.
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// Multi-factor authentication code.
	Mfa           string `protobuf:"bytes,3,opt,name=mfa,proto3" json:"mfa,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticateRequest) Reset() {
	*x = AuthenticateRequest{}
	mi := &file_console_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateRequest) ProtoMessage() {}

func (x *AuthenticateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateRequest.ProtoReflect.Descriptor instead.
func (*AuthenticateRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{13}
}

func (x *AuthenticateRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AuthenticateRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AuthenticateRequest) GetMfa() string {
	if x != nil {
		return x.Mfa
	}
	return ""
}

// Request to change MFA.
type AuthenticateMFASetupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// MFA token.
	Mfa string `protobuf:"bytes,1,opt,name=mfa,proto3" json:"mfa,omitempty"`
	// MFA code.
	Code          string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticateMFASetupRequest) Reset() {
	*x = AuthenticateMFASetupRequest{}
	mi := &file_console_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticateMFASetupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateMFASetupRequest) ProtoMessage() {}

func (x *AuthenticateMFASetupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateMFASetupRequest.ProtoReflect.Descriptor instead.
func (*AuthenticateMFASetupRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{14}
}

func (x *AuthenticateMFASetupRequest) GetMfa() string {
	if x != nil {
		return x.Mfa
	}
	return ""
}

func (x *AuthenticateMFASetupRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// Response to change MFA.
type AuthenticateMFASetupResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An one-time code to configure the MFA mechanism
	RecoveryCodes []string `protobuf:"bytes,1,rep,name=recovery_codes,json=recoveryCodes,proto3" json:"recovery_codes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticateMFASetupResponse) Reset() {
	*x = AuthenticateMFASetupResponse{}
	mi := &file_console_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticateMFASetupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateMFASetupResponse) ProtoMessage() {}

func (x *AuthenticateMFASetupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateMFASetupResponse.ProtoReflect.Descriptor instead.
func (*AuthenticateMFASetupResponse) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{15}
}

func (x *AuthenticateMFASetupResponse) GetRecoveryCodes() []string {
	if x != nil {
		return x.RecoveryCodes
	}
	return nil
}

// Log out a session and invalidate a session token.
type AuthenticateLogoutRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Session token to log out.
	Token         string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticateLogoutRequest) Reset() {
	*x = AuthenticateLogoutRequest{}
	mi := &file_console_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticateLogoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateLogoutRequest) ProtoMessage() {}

func (x *AuthenticateLogoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateLogoutRequest.ProtoReflect.Descriptor instead.
func (*AuthenticateLogoutRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{16}
}

func (x *AuthenticateLogoutRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// API Explorer request definition for CallApiEndpoint
type CallApiEndpointRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Body          string                 `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SessionVars   map[string]string      `protobuf:"bytes,4,rep,name=session_vars,json=sessionVars,proto3" json:"session_vars,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallApiEndpointRequest) Reset() {
	*x = CallApiEndpointRequest{}
	mi := &file_console_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallApiEndpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallApiEndpointRequest) ProtoMessage() {}

func (x *CallApiEndpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallApiEndpointRequest.ProtoReflect.Descriptor instead.
func (*CallApiEndpointRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{17}
}

func (x *CallApiEndpointRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *CallApiEndpointRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *CallApiEndpointRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CallApiEndpointRequest) GetSessionVars() map[string]string {
	if x != nil {
		return x.SessionVars
	}
	return nil
}

// API Explorer response definition for CallApiEndpoint
type CallApiEndpointResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Body          string                 `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CallApiEndpointResponse) Reset() {
	*x = CallApiEndpointResponse{}
	mi := &file_console_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CallApiEndpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallApiEndpointResponse) ProtoMessage() {}

func (x *CallApiEndpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallApiEndpointResponse.ProtoReflect.Descriptor instead.
func (*CallApiEndpointResponse) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{18}
}

func (x *CallApiEndpointResponse) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *CallApiEndpointResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// The current server configuration and any associated warnings.
type Config struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// JSON-encoded active server configuration.
	Config string `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	// Any warnings about the current config.
	Warnings []*Config_Warning `protobuf:"bytes,2,rep,name=warnings,proto3" json:"warnings,omitempty"`
	// Server version
	ServerVersion string `protobuf:"bytes,3,opt,name=server_version,json=serverVersion,proto3" json:"server_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Config) Reset() {
	*x = Config{}
	mi := &file_console_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{19}
}

func (x *Config) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *Config) GetWarnings() []*Config_Warning {
	if x != nil {
		return x.Warnings
	}
	return nil
}

func (x *Config) GetServerVersion() string {
	if x != nil {
		return x.ServerVersion
	}
	return ""
}

// A console user session.
type ConsoleSession struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A session token (JWT) for the console user.
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// MFA code required to setup the MFA mechanism.
	MfaCode       *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=mfa_code,json=mfaCode,proto3" json:"mfa_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConsoleSession) Reset() {
	*x = ConsoleSession{}
	mi := &file_console_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConsoleSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsoleSession) ProtoMessage() {}

func (x *ConsoleSession) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsoleSession.ProtoReflect.Descriptor instead.
func (*ConsoleSession) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{20}
}

func (x *ConsoleSession) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ConsoleSession) GetMfaCode() *wrapperspb.StringValue {
	if x != nil {
		return x.MfaCode
	}
	return nil
}

// Delete channel messages by timestamp or/and ids.
type DeleteChannelMessagesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Timestamp before which messages will be deleted.
	Before *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=before,proto3" json:"before,omitempty"`
	// IDs of the messages to delete.
	Ids           []string `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteChannelMessagesRequest) Reset() {
	*x = DeleteChannelMessagesRequest{}
	mi := &file_console_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteChannelMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChannelMessagesRequest) ProtoMessage() {}

func (x *DeleteChannelMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChannelMessagesRequest.ProtoReflect.Descriptor instead.
func (*DeleteChannelMessagesRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteChannelMessagesRequest) GetBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *DeleteChannelMessagesRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

// Delete friend relationship between two users.
type DeleteFriendRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user do delete for.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// User ID of the friend to remove.
	FriendId      string `protobuf:"bytes,2,opt,name=friend_id,json=friendId,proto3" json:"friend_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFriendRequest) Reset() {
	*x = DeleteFriendRequest{}
	mi := &file_console_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFriendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFriendRequest) ProtoMessage() {}

func (x *DeleteFriendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFriendRequest.ProtoReflect.Descriptor instead.
func (*DeleteFriendRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteFriendRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteFriendRequest) GetFriendId() string {
	if x != nil {
		return x.FriendId
	}
	return ""
}

// Delete a group.
type DeleteGroupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the group to delete.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteGroupRequest) Reset() {
	*x = DeleteGroupRequest{}
	mi := &file_console_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupRequest) ProtoMessage() {}

func (x *DeleteGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteGroupRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteGroupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Remove a user from a group.
type DeleteGroupUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User to remove.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ID of the group to remove them from.
	GroupId       string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteGroupUserRequest) Reset() {
	*x = DeleteGroupUserRequest{}
	mi := &file_console_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteGroupUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGroupUserRequest) ProtoMessage() {}

func (x *DeleteGroupUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGroupUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteGroupUserRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteGroupUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteGroupUserRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

// Promote/demote a user in a group.
type UpdateGroupUserStateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User to change state.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ID of the group.
	GroupId       string `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateGroupUserStateRequest) Reset() {
	*x = UpdateGroupUserStateRequest{}
	mi := &file_console_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGroupUserStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupUserStateRequest) ProtoMessage() {}

func (x *UpdateGroupUserStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupUserStateRequest.ProtoReflect.Descriptor instead.
func (*UpdateGroupUserStateRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateGroupUserStateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateGroupUserStateRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

// Reset a user's mfa setup.
type ResetUserMfaRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User username.
	Username      string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResetUserMfaRequest) Reset() {
	*x = ResetUserMfaRequest{}
	mi := &file_console_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResetUserMfaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetUserMfaRequest) ProtoMessage() {}

func (x *ResetUserMfaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetUserMfaRequest.ProtoReflect.Descriptor instead.
func (*ResetUserMfaRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{26}
}

func (x *ResetUserMfaRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// Make a user's mfa required or not.
type RequireUserMfaRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User username.
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// Required.
	Required      bool `protobuf:"varint,2,opt,name=required,proto3" json:"required,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequireUserMfaRequest) Reset() {
	*x = RequireUserMfaRequest{}
	mi := &file_console_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequireUserMfaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequireUserMfaRequest) ProtoMessage() {}

func (x *RequireUserMfaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequireUserMfaRequest.ProtoReflect.Descriptor instead.
func (*RequireUserMfaRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{27}
}

func (x *RequireUserMfaRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RequireUserMfaRequest) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

// Remove a leaderboard record
type DeleteLeaderboardRecordRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Leaderboard ID.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Record owner.
	OwnerId       string `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteLeaderboardRecordRequest) Reset() {
	*x = DeleteLeaderboardRecordRequest{}
	mi := &file_console_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteLeaderboardRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLeaderboardRecordRequest) ProtoMessage() {}

func (x *DeleteLeaderboardRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLeaderboardRecordRequest.ProtoReflect.Descriptor instead.
func (*DeleteLeaderboardRecordRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteLeaderboardRecordRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteLeaderboardRecordRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

// Delete notification
type DeleteNotificationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Notification ID.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNotificationRequest) Reset() {
	*x = DeleteNotificationRequest{}
	mi := &file_console_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotificationRequest) ProtoMessage() {}

func (x *DeleteNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotificationRequest.ProtoReflect.Descriptor instead.
func (*DeleteNotificationRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteNotificationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Delete an individual storage object.
type DeleteStorageObjectRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Collection.
	Collection string `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	// Key.
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// Owner user ID.
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Version for OCC.
	Version       string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteStorageObjectRequest) Reset() {
	*x = DeleteStorageObjectRequest{}
	mi := &file_console_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteStorageObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStorageObjectRequest) ProtoMessage() {}

func (x *DeleteStorageObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStorageObjectRequest.ProtoReflect.Descriptor instead.
func (*DeleteStorageObjectRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{30}
}

func (x *DeleteStorageObjectRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *DeleteStorageObjectRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DeleteStorageObjectRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteStorageObjectRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

// Delete a single wallet ledger item.
type DeleteWalletLedgerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User ID to remove wallet ledger item from.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ID of the wallet ledger item to remove.
	WalletId      string `protobuf:"bytes,2,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteWalletLedgerRequest) Reset() {
	*x = DeleteWalletLedgerRequest{}
	mi := &file_console_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteWalletLedgerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWalletLedgerRequest) ProtoMessage() {}

func (x *DeleteWalletLedgerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWalletLedgerRequest.ProtoReflect.Descriptor instead.
func (*DeleteWalletLedgerRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{31}
}

func (x *DeleteWalletLedgerRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteWalletLedgerRequest) GetWalletId() string {
	if x != nil {
		return x.WalletId
	}
	return ""
}

// A leaderboard.
type Leaderboard struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the leaderboard.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The title for the leaderboard.
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// The description of the leaderboard. May be blank.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// The category of the leaderboard. e.g. "vip" could be category 1.
	Category uint32 `protobuf:"varint,4,opt,name=category,proto3" json:"category,omitempty"`
	// ASC or DESC sort mode of scores in the leaderboard.
	SortOrder uint32 `protobuf:"varint,5,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order,omitempty"`
	// The current number of players in the leaderboard.
	Size uint32 `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	// The maximum number of players for the leaderboard.
	MaxSize uint32 `protobuf:"varint,7,opt,name=max_size,json=maxSize,proto3" json:"max_size,omitempty"`
	// The maximum score updates allowed per player for the current leaderboard.
	MaxNumScore uint32 `protobuf:"varint,8,opt,name=max_num_score,json=maxNumScore,proto3" json:"max_num_score,omitempty"`
	// The operator of the leaderboard
	Operator uint32 `protobuf:"varint,9,opt,name=operator,proto3" json:"operator,omitempty"`
	// The UNIX time when the leaderboard stops being active until next reset. A computed value.
	EndActive uint32 `protobuf:"varint,10,opt,name=end_active,json=endActive,proto3" json:"end_active,omitempty"`
	// Reset cron expression.
	ResetSchedule string `protobuf:"bytes,11,opt,name=reset_schedule,json=resetSchedule,proto3" json:"reset_schedule,omitempty"`
	// Additional information stored as a JSON object.
	Metadata string `protobuf:"bytes,12,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// The UNIX time when the leaderboard was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The UNIX time when the leaderboard will start.
	StartTime *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// The UNIX time when the leaderboard will be stopped.
	EndTime *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	// Duration of the tournament in seconds.
	Duration uint32 `protobuf:"varint,16,opt,name=duration,proto3" json:"duration,omitempty"`
	// The UNIX time when the leaderboard start being active. A computed value.
	StartActive uint32 `protobuf:"varint,17,opt,name=start_active,json=startActive,proto3" json:"start_active,omitempty"`
	// Join required.
	JoinRequired bool `protobuf:"varint,18,opt,name=join_required,json=joinRequired,proto3" json:"join_required,omitempty"`
	// Authoritative.
	Authoritative bool `protobuf:"varint,19,opt,name=authoritative,proto3" json:"authoritative,omitempty"`
	// Tournament.
	Tournament bool `protobuf:"varint,20,opt,name=tournament,proto3" json:"tournament,omitempty"`
	// The UNIX time when the tournament was last reset. A computed value.
	PrevReset uint32 `protobuf:"varint,21,opt,name=prev_reset,json=prevReset,proto3" json:"prev_reset,omitempty"`
	// The UNIX time when the tournament is next playable. A computed value.
	NextReset     uint32 `protobuf:"varint,22,opt,name=next_reset,json=nextReset,proto3" json:"next_reset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Leaderboard) Reset() {
	*x = Leaderboard{}
	mi := &file_console_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Leaderboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Leaderboard) ProtoMessage() {}

func (x *Leaderboard) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Leaderboard.ProtoReflect.Descriptor instead.
func (*Leaderboard) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{32}
}

func (x *Leaderboard) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Leaderboard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Leaderboard) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Leaderboard) GetCategory() uint32 {
	if x != nil {
		return x.Category
	}
	return 0
}

func (x *Leaderboard) GetSortOrder() uint32 {
	if x != nil {
		return x.SortOrder
	}
	return 0
}

func (x *Leaderboard) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Leaderboard) GetMaxSize() uint32 {
	if x != nil {
		return x.MaxSize
	}
	return 0
}

func (x *Leaderboard) GetMaxNumScore() uint32 {
	if x != nil {
		return x.MaxNumScore
	}
	return 0
}

func (x *Leaderboard) GetOperator() uint32 {
	if x != nil {
		return x.Operator
	}
	return 0
}

func (x *Leaderboard) GetEndActive() uint32 {
	if x != nil {
		return x.EndActive
	}
	return 0
}

func (x *Leaderboard) GetResetSchedule() string {
	if x != nil {
		return x.ResetSchedule
	}
	return ""
}

func (x *Leaderboard) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *Leaderboard) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Leaderboard) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *Leaderboard) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *Leaderboard) GetDuration() uint32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Leaderboard) GetStartActive() uint32 {
	if x != nil {
		return x.StartActive
	}
	return 0
}

func (x *Leaderboard) GetJoinRequired() bool {
	if x != nil {
		return x.JoinRequired
	}
	return false
}

func (x *Leaderboard) GetAuthoritative() bool {
	if x != nil {
		return x.Authoritative
	}
	return false
}

func (x *Leaderboard) GetTournament() bool {
	if x != nil {
		return x.Tournament
	}
	return false
}

func (x *Leaderboard) GetPrevReset() uint32 {
	if x != nil {
		return x.PrevReset
	}
	return 0
}

func (x *Leaderboard) GetNextReset() uint32 {
	if x != nil {
		return x.NextReset
	}
	return 0
}

// List leaderboards.
type LeaderboardListRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// An optional cursor to paginate from.
	Cursor        string `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaderboardListRequest) Reset() {
	*x = LeaderboardListRequest{}
	mi := &file_console_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaderboardListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardListRequest) ProtoMessage() {}

func (x *LeaderboardListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardListRequest.ProtoReflect.Descriptor instead.
func (*LeaderboardListRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{33}
}

func (x *LeaderboardListRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

// A list of leaderboards.
type LeaderboardList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of leaderboards returned.
	Leaderboards []*Leaderboard `protobuf:"bytes,1,rep,name=leaderboards,proto3" json:"leaderboards,omitempty"`
	// Total count of leaderboards and tournaments.
	Total int32 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	// A cursor, if any.
	Cursor        string `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaderboardList) Reset() {
	*x = LeaderboardList{}
	mi := &file_console_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaderboardList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardList) ProtoMessage() {}

func (x *LeaderboardList) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardList.ProtoReflect.Descriptor instead.
func (*LeaderboardList) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{34}
}

func (x *LeaderboardList) GetLeaderboards() []*Leaderboard {
	if x != nil {
		return x.Leaderboards
	}
	return nil
}

func (x *LeaderboardList) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *LeaderboardList) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

// Get Leaderboard.
type LeaderboardRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Leaderboard ID
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaderboardRequest) Reset() {
	*x = LeaderboardRequest{}
	mi := &file_console_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaderboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardRequest) ProtoMessage() {}

func (x *LeaderboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardRequest.ProtoReflect.Descriptor instead.
func (*LeaderboardRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{35}
}

func (x *LeaderboardRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// List (and optionally filter) users.
type ListAccountsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User ID or username filter.
	Filter string `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	// Search only recorded deletes.
	Tombstones bool `protobuf:"varint,2,opt,name=tombstones,proto3" json:"tombstones,omitempty"`
	// Cursor to start from
	Cursor        string `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAccountsRequest) Reset() {
	*x = ListAccountsRequest{}
	mi := &file_console_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAccountsRequest) ProtoMessage() {}

func (x *ListAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAccountsRequest.ProtoReflect.Descriptor instead.
func (*ListAccountsRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{36}
}

func (x *ListAccountsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListAccountsRequest) GetTombstones() bool {
	if x != nil {
		return x.Tombstones
	}
	return false
}

func (x *ListAccountsRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

// List selected channel messages.
type ListChannelMessagesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Type of the chat channel
	Type ListChannelMessagesRequest_Type `protobuf:"varint,1,opt,name=type,proto3,enum=nakama.console.ListChannelMessagesRequest_Type" json:"type,omitempty"`
	// Label of the channel, if a standard chat room
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	// Group ID of the channel, if a group chat
	GroupId string `protobuf:"bytes,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// User IDs, if a direct chat
	UserIdOne string `protobuf:"bytes,4,opt,name=user_id_one,json=userIdOne,proto3" json:"user_id_one,omitempty"`
	UserIdTwo string `protobuf:"bytes,5,opt,name=user_id_two,json=userIdTwo,proto3" json:"user_id_two,omitempty"`
	// Cursor to start from
	Cursor        string `protobuf:"bytes,6,opt,name=cursor,proto3" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChannelMessagesRequest) Reset() {
	*x = ListChannelMessagesRequest{}
	mi := &file_console_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChannelMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChannelMessagesRequest) ProtoMessage() {}

func (x *ListChannelMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChannelMessagesRequest.ProtoReflect.Descriptor instead.
func (*ListChannelMessagesRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{37}
}

func (x *ListChannelMessagesRequest) GetType() ListChannelMessagesRequest_Type {
	if x != nil {
		return x.Type
	}
	return ListChannelMessagesRequest_UNKNOWN
}

func (x *ListChannelMessagesRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ListChannelMessagesRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *ListChannelMessagesRequest) GetUserIdOne() string {
	if x != nil {
		return x.UserIdOne
	}
	return ""
}

func (x *ListChannelMessagesRequest) GetUserIdTwo() string {
	if x != nil {
		return x.UserIdTwo
	}
	return ""
}

func (x *ListChannelMessagesRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

// List (and optionally filter) groups.
type ListGroupsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User ID or username filter.
	Filter string `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	// Cursor to start from
	Cursor        string `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListGroupsRequest) Reset() {
	*x = ListGroupsRequest{}
	mi := &file_console_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupsRequest) ProtoMessage() {}

func (x *ListGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupsRequest.ProtoReflect.Descriptor instead.
func (*ListGroupsRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{38}
}

func (x *ListGroupsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

func (x *ListGroupsRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

// List realtime matches.
type ListMatchesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Limit the number of returned matches.
	Limit *wrapperspb.Int32Value `protobuf:"bytes,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Authoritative or relayed matches, or null for both.
	Authoritative *wrapperspb.BoolValue `protobuf:"bytes,2,opt,name=authoritative,proto3" json:"authoritative,omitempty"`
	// Label filter.
	Label *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	// Minimum user count.
	MinSize *wrapperspb.Int32Value `protobuf:"bytes,4,opt,name=min_size,json=minSize,proto3" json:"min_size,omitempty"`
	// Maximum user count.
	MaxSize *wrapperspb.Int32Value `protobuf:"bytes,5,opt,name=max_size,json=maxSize,proto3" json:"max_size,omitempty"`
	// Match ID.
	MatchId string `protobuf:"bytes,6,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	// Arbitrary label query.
	Query *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=query,proto3" json:"query,omitempty"`
	// Node name filter, optional.
	Node          *wrapperspb.StringValue `protobuf:"bytes,8,opt,name=node,proto3" json:"node,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMatchesRequest) Reset() {
	*x = ListMatchesRequest{}
	mi := &file_console_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMatchesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMatchesRequest) ProtoMessage() {}

func (x *ListMatchesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMatchesRequest.ProtoReflect.Descriptor instead.
func (*ListMatchesRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{39}
}

func (x *ListMatchesRequest) GetLimit() *wrapperspb.Int32Value {
	if x != nil {
		return x.Limit
	}
	return nil
}

func (x *ListMatchesRequest) GetAuthoritative() *wrapperspb.BoolValue {
	if x != nil {
		return x.Authoritative
	}
	return nil
}

func (x *ListMatchesRequest) GetLabel() *wrapperspb.StringValue {
	if x != nil {
		return x.Label
	}
	return nil
}

func (x *ListMatchesRequest) GetMinSize() *wrapperspb.Int32Value {
	if x != nil {
		return x.MinSize
	}
	return nil
}

func (x *ListMatchesRequest) GetMaxSize() *wrapperspb.Int32Value {
	if x != nil {
		return x.MaxSize
	}
	return nil
}

func (x *ListMatchesRequest) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *ListMatchesRequest) GetQuery() *wrapperspb.StringValue {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *ListMatchesRequest) GetNode() *wrapperspb.StringValue {
	if x != nil {
		return x.Node
	}
	return nil
}

// List notifications.
type ListNotificationsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User ID to filter purchases for
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The number of notifications to get.
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// A cursor to page through notifications.
	Cursor        string `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNotificationsRequest) Reset() {
	*x = ListNotificationsRequest{}
	mi := &file_console_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationsRequest) ProtoMessage() {}

func (x *ListNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationsRequest.ProtoReflect.Descriptor instead.
func (*ListNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{40}
}

func (x *ListNotificationsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListNotificationsRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListNotificationsRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

// List validated purchases.
type ListPurchasesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User ID to filter purchases for
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Max number of results per page
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// Cursor to retrieve a page of records from
	Cursor        string `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPurchasesRequest) Reset() {
	*x = ListPurchasesRequest{}
	mi := &file_console_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPurchasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPurchasesRequest) ProtoMessage() {}

func (x *ListPurchasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPurchasesRequest.ProtoReflect.Descriptor instead.
func (*ListPurchasesRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{41}
}

func (x *ListPurchasesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListPurchasesRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListPurchasesRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

// List subscriptions.
type ListSubscriptionsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// UserID to filter subscriptions for
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Max number of results per page
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// Cursor to retrieve a page of records from
	Cursor        string `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSubscriptionsRequest) Reset() {
	*x = ListSubscriptionsRequest{}
	mi := &file_console_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSubscriptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubscriptionsRequest) ProtoMessage() {}

func (x *ListSubscriptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubscriptionsRequest.ProtoReflect.Descriptor instead.
func (*ListSubscriptionsRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{42}
}

func (x *ListSubscriptionsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListSubscriptionsRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListSubscriptionsRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

// List (and optionally filter) storage objects.
type ListStorageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User ID to filter objects for.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Key to filter objects for
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// Collection name to filter objects for
	Collection string `protobuf:"bytes,3,opt,name=collection,proto3" json:"collection,omitempty"`
	// Cursor to retrieve a page of records from
	Cursor        string `protobuf:"bytes,4,opt,name=cursor,proto3" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListStorageRequest) Reset() {
	*x = ListStorageRequest{}
	mi := &file_console_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStorageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStorageRequest) ProtoMessage() {}

func (x *ListStorageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStorageRequest.ProtoReflect.Descriptor instead.
func (*ListStorageRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{43}
}

func (x *ListStorageRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListStorageRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ListStorageRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *ListStorageRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

// Match state
type MatchState struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Presence list.
	Presences []*rtapi.UserPresence `protobuf:"bytes,1,rep,name=presences,proto3" json:"presences,omitempty"`
	// Current tick number.
	Tick int64 `protobuf:"varint,2,opt,name=tick,proto3" json:"tick,omitempty"`
	// State.
	State         string `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchState) Reset() {
	*x = MatchState{}
	mi := &file_console_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchState) ProtoMessage() {}

func (x *MatchState) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchState.ProtoReflect.Descriptor instead.
func (*MatchState) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{44}
}

func (x *MatchState) GetPresences() []*rtapi.UserPresence {
	if x != nil {
		return x.Presences
	}
	return nil
}

func (x *MatchState) GetTick() int64 {
	if x != nil {
		return x.Tick
	}
	return 0
}

func (x *MatchState) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

// Get current state of a running match
type MatchStateRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Match ID
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchStateRequest) Reset() {
	*x = MatchStateRequest{}
	mi := &file_console_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchStateRequest) ProtoMessage() {}

func (x *MatchStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchStateRequest.ProtoReflect.Descriptor instead.
func (*MatchStateRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{45}
}

func (x *MatchStateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Notification struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID of the Notification.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Subject of the notification.
	Subject string `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	// Content of the notification in JSON.
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	// Category code for this notification.
	Code int32 `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`
	// ID of the sender, if a user. Otherwise 'null'.
	SenderId string `protobuf:"bytes,5,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	// The UNIX time (for gRPC clients) or ISO string (for REST clients) when the notification was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// True if this notification was persisted to the database.
	Persistent bool `protobuf:"varint,7,opt,name=persistent,proto3" json:"persistent,omitempty"`
	// User id.
	UserId        string `protobuf:"bytes,8,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Notification) Reset() {
	*x = Notification{}
	mi := &file_console_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{46}
}

func (x *Notification) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Notification) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Notification) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Notification) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Notification) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *Notification) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Notification) GetPersistent() bool {
	if x != nil {
		return x.Persistent
	}
	return false
}

func (x *Notification) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type NotificationList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of notifications.
	Notifications []*Notification `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	// Next page cursor if any.
	NextCursor string `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	// Previous page cursor if any.
	PrevCursor    string `protobuf:"bytes,3,opt,name=prev_cursor,json=prevCursor,proto3" json:"prev_cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationList) Reset() {
	*x = NotificationList{}
	mi := &file_console_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationList) ProtoMessage() {}

func (x *NotificationList) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationList.ProtoReflect.Descriptor instead.
func (*NotificationList) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{47}
}

func (x *NotificationList) GetNotifications() []*Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *NotificationList) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

func (x *NotificationList) GetPrevCursor() string {
	if x != nil {
		return x.PrevCursor
	}
	return ""
}

type DeleteChannelMessagesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Total number of messages deleted.
	Total         int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteChannelMessagesResponse) Reset() {
	*x = DeleteChannelMessagesResponse{}
	mi := &file_console_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteChannelMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChannelMessagesResponse) ProtoMessage() {}

func (x *DeleteChannelMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChannelMessagesResponse.ProtoReflect.Descriptor instead.
func (*DeleteChannelMessagesResponse) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{48}
}

func (x *DeleteChannelMessagesResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// List of storage objects.
type StorageList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of storage objects matching list/filter operation.
	Objects []*StorageListObject `protobuf:"bytes,1,rep,name=objects,proto3" json:"objects,omitempty"`
	// Approximate total number of storage objects.
	TotalCount int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// Next page cursor if any
	NextCursor    string `protobuf:"bytes,3,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageList) Reset() {
	*x = StorageList{}
	mi := &file_console_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageList) ProtoMessage() {}

func (x *StorageList) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageList.ProtoReflect.Descriptor instead.
func (*StorageList) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{49}
}

func (x *StorageList) GetObjects() []*StorageListObject {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *StorageList) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *StorageList) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

type StorageCollectionsList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Available collection names in the whole of the storage
	Collections   []string `protobuf:"bytes,3,rep,name=collections,proto3" json:"collections,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageCollectionsList) Reset() {
	*x = StorageCollectionsList{}
	mi := &file_console_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageCollectionsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageCollectionsList) ProtoMessage() {}

func (x *StorageCollectionsList) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageCollectionsList.ProtoReflect.Descriptor instead.
func (*StorageCollectionsList) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{50}
}

func (x *StorageCollectionsList) GetCollections() []string {
	if x != nil {
		return x.Collections
	}
	return nil
}

// Unlink a particular device ID from a user's account.
type UnlinkDeviceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User ID to unlink from.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Device ID to unlink.
	DeviceId      string `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlinkDeviceRequest) Reset() {
	*x = UnlinkDeviceRequest{}
	mi := &file_console_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlinkDeviceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlinkDeviceRequest) ProtoMessage() {}

func (x *UnlinkDeviceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlinkDeviceRequest.ProtoReflect.Descriptor instead.
func (*UnlinkDeviceRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{51}
}

func (x *UnlinkDeviceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UnlinkDeviceRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

// Update user account information.
type UpdateAccountRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User ID to update.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Username.
	Username *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	// Display name.
	DisplayName *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Metadata.
	Metadata *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Avatar URL.
	AvatarUrl *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	// Langtag.
	LangTag *wrapperspb.StringValue `protobuf:"bytes,6,opt,name=lang_tag,json=langTag,proto3" json:"lang_tag,omitempty"`
	// Location.
	Location *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=location,proto3" json:"location,omitempty"`
	// Timezone.
	Timezone *wrapperspb.StringValue `protobuf:"bytes,8,opt,name=timezone,proto3" json:"timezone,omitempty"`
	// Custom ID.
	CustomId *wrapperspb.StringValue `protobuf:"bytes,9,opt,name=custom_id,json=customId,proto3" json:"custom_id,omitempty"`
	// Email.
	Email *wrapperspb.StringValue `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`
	// Password.
	Password *wrapperspb.StringValue `protobuf:"bytes,11,opt,name=password,proto3" json:"password,omitempty"`
	// Device ID modifications.
	DeviceIds map[string]string `protobuf:"bytes,12,rep,name=device_ids,json=deviceIds,proto3" json:"device_ids,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Wallet.
	Wallet        *wrapperspb.StringValue `protobuf:"bytes,13,opt,name=wallet,proto3" json:"wallet,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateAccountRequest) Reset() {
	*x = UpdateAccountRequest{}
	mi := &file_console_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountRequest) ProtoMessage() {}

func (x *UpdateAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountRequest.ProtoReflect.Descriptor instead.
func (*UpdateAccountRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{52}
}

func (x *UpdateAccountRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateAccountRequest) GetUsername() *wrapperspb.StringValue {
	if x != nil {
		return x.Username
	}
	return nil
}

func (x *UpdateAccountRequest) GetDisplayName() *wrapperspb.StringValue {
	if x != nil {
		return x.DisplayName
	}
	return nil
}

func (x *UpdateAccountRequest) GetMetadata() *wrapperspb.StringValue {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UpdateAccountRequest) GetAvatarUrl() *wrapperspb.StringValue {
	if x != nil {
		return x.AvatarUrl
	}
	return nil
}

func (x *UpdateAccountRequest) GetLangTag() *wrapperspb.StringValue {
	if x != nil {
		return x.LangTag
	}
	return nil
}

func (x *UpdateAccountRequest) GetLocation() *wrapperspb.StringValue {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *UpdateAccountRequest) GetTimezone() *wrapperspb.StringValue {
	if x != nil {
		return x.Timezone
	}
	return nil
}

func (x *UpdateAccountRequest) GetCustomId() *wrapperspb.StringValue {
	if x != nil {
		return x.CustomId
	}
	return nil
}

func (x *UpdateAccountRequest) GetEmail() *wrapperspb.StringValue {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *UpdateAccountRequest) GetPassword() *wrapperspb.StringValue {
	if x != nil {
		return x.Password
	}
	return nil
}

func (x *UpdateAccountRequest) GetDeviceIds() map[string]string {
	if x != nil {
		return x.DeviceIds
	}
	return nil
}

func (x *UpdateAccountRequest) GetWallet() *wrapperspb.StringValue {
	if x != nil {
		return x.Wallet
	}
	return nil
}

// Update group information.
type UpdateGroupRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Group ID to update.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name.
	Name *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Description.
	Description *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Langtag.
	LangTag *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=lang_tag,json=langTag,proto3" json:"lang_tag,omitempty"`
	// Metadata.
	Metadata *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Avatar URL.
	AvatarUrl *wrapperspb.StringValue `protobuf:"bytes,6,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	// Anyone can join open groups, otherwise only admins can accept members.
	Open *wrapperspb.BoolValue `protobuf:"bytes,7,opt,name=open,proto3" json:"open,omitempty"`
	// The maximum number of members allowed.
	MaxCount      *wrapperspb.Int32Value `protobuf:"bytes,8,opt,name=max_count,json=maxCount,proto3" json:"max_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateGroupRequest) Reset() {
	*x = UpdateGroupRequest{}
	mi := &file_console_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGroupRequest) ProtoMessage() {}

func (x *UpdateGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGroupRequest.ProtoReflect.Descriptor instead.
func (*UpdateGroupRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{53}
}

func (x *UpdateGroupRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateGroupRequest) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *UpdateGroupRequest) GetDescription() *wrapperspb.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *UpdateGroupRequest) GetLangTag() *wrapperspb.StringValue {
	if x != nil {
		return x.LangTag
	}
	return nil
}

func (x *UpdateGroupRequest) GetMetadata() *wrapperspb.StringValue {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UpdateGroupRequest) GetAvatarUrl() *wrapperspb.StringValue {
	if x != nil {
		return x.AvatarUrl
	}
	return nil
}

func (x *UpdateGroupRequest) GetOpen() *wrapperspb.BoolValue {
	if x != nil {
		return x.Open
	}
	return nil
}

func (x *UpdateGroupRequest) GetMaxCount() *wrapperspb.Int32Value {
	if x != nil {
		return x.MaxCount
	}
	return nil
}

// The identifier for a user account.
type Username struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique username of the user account.
	Username      string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Username) Reset() {
	*x = Username{}
	mi := &file_console_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Username) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Username) ProtoMessage() {}

func (x *Username) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Username.ProtoReflect.Descriptor instead.
func (*Username) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{54}
}

func (x *Username) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// A list of console users.
type UserList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of users.
	Users         []*UserList_User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserList) Reset() {
	*x = UserList{}
	mi := &file_console_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserList) ProtoMessage() {}

func (x *UserList) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserList.ProtoReflect.Descriptor instead.
func (*UserList) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{55}
}

func (x *UserList) GetUsers() []*UserList_User {
	if x != nil {
		return x.Users
	}
	return nil
}

// List of nodes and their stats.
type StatusList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of nodes and their stats.
	Nodes []*StatusList_Status `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	// Timestamp
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusList) Reset() {
	*x = StatusList{}
	mi := &file_console_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusList) ProtoMessage() {}

func (x *StatusList) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusList.ProtoReflect.Descriptor instead.
func (*StatusList) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{56}
}

func (x *StatusList) GetNodes() []*StatusList_Status {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *StatusList) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Runtime information
type RuntimeInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Lua registered RPC functions
	LuaRpcFunctions []string `protobuf:"bytes,1,rep,name=lua_rpc_functions,json=luaRpcFunctions,proto3" json:"lua_rpc_functions,omitempty"`
	// Go registered RPC functions
	GoRpcFunctions []string `protobuf:"bytes,2,rep,name=go_rpc_functions,json=goRpcFunctions,proto3" json:"go_rpc_functions,omitempty"`
	// JavaScript registered RPC functions
	JsRpcFunctions []string `protobuf:"bytes,3,rep,name=js_rpc_functions,json=jsRpcFunctions,proto3" json:"js_rpc_functions,omitempty"`
	// Go loaded modules
	GoModules []*RuntimeInfo_ModuleInfo `protobuf:"bytes,4,rep,name=go_modules,json=goModules,proto3" json:"go_modules,omitempty"`
	// Lua loaded modules
	LuaModules []*RuntimeInfo_ModuleInfo `protobuf:"bytes,5,rep,name=lua_modules,json=luaModules,proto3" json:"lua_modules,omitempty"`
	// JavaScript loaded modules
	JsModules     []*RuntimeInfo_ModuleInfo `protobuf:"bytes,6,rep,name=js_modules,json=jsModules,proto3" json:"js_modules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuntimeInfo) Reset() {
	*x = RuntimeInfo{}
	mi := &file_console_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeInfo) ProtoMessage() {}

func (x *RuntimeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeInfo.ProtoReflect.Descriptor instead.
func (*RuntimeInfo) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{57}
}

func (x *RuntimeInfo) GetLuaRpcFunctions() []string {
	if x != nil {
		return x.LuaRpcFunctions
	}
	return nil
}

func (x *RuntimeInfo) GetGoRpcFunctions() []string {
	if x != nil {
		return x.GoRpcFunctions
	}
	return nil
}

func (x *RuntimeInfo) GetJsRpcFunctions() []string {
	if x != nil {
		return x.JsRpcFunctions
	}
	return nil
}

func (x *RuntimeInfo) GetGoModules() []*RuntimeInfo_ModuleInfo {
	if x != nil {
		return x.GoModules
	}
	return nil
}

func (x *RuntimeInfo) GetLuaModules() []*RuntimeInfo_ModuleInfo {
	if x != nil {
		return x.LuaModules
	}
	return nil
}

func (x *RuntimeInfo) GetJsModules() []*RuntimeInfo_ModuleInfo {
	if x != nil {
		return x.JsModules
	}
	return nil
}

// An individual update to a user's wallet.
type WalletLedger struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The identifier of this wallet change.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The user ID this wallet ledger item belongs to.
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The changeset.
	Changeset string `protobuf:"bytes,3,opt,name=changeset,proto3" json:"changeset,omitempty"`
	// Any associated metadata.
	Metadata string `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// The UNIX time when the wallet ledger item was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The UNIX time when the wallet ledger item was updated.
	UpdateTime    *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WalletLedger) Reset() {
	*x = WalletLedger{}
	mi := &file_console_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WalletLedger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletLedger) ProtoMessage() {}

func (x *WalletLedger) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletLedger.ProtoReflect.Descriptor instead.
func (*WalletLedger) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{58}
}

func (x *WalletLedger) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *WalletLedger) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *WalletLedger) GetChangeset() string {
	if x != nil {
		return x.Changeset
	}
	return ""
}

func (x *WalletLedger) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *WalletLedger) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *WalletLedger) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

// List of wallet ledger items for a particular user.
type WalletLedgerList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of wallet ledger items.
	Items []*WalletLedger `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// The cursor to send when retrieving the next older page, if any.
	NextCursor string `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	// The cursor to send when retrieving the previous page newer, if any.
	PrevCursor    string `protobuf:"bytes,3,opt,name=prev_cursor,json=prevCursor,proto3" json:"prev_cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WalletLedgerList) Reset() {
	*x = WalletLedgerList{}
	mi := &file_console_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WalletLedgerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletLedgerList) ProtoMessage() {}

func (x *WalletLedgerList) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletLedgerList.ProtoReflect.Descriptor instead.
func (*WalletLedgerList) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{59}
}

func (x *WalletLedgerList) GetItems() []*WalletLedger {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *WalletLedgerList) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

func (x *WalletLedgerList) GetPrevCursor() string {
	if x != nil {
		return x.PrevCursor
	}
	return ""
}

// Write a new storage object or update an existing one.
type WriteStorageObjectRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Collection.
	Collection string `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	// Key.
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// Owner user ID.
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// Value.
	Value string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	// Version for OCC.
	Version string `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	// Read permission value.
	PermissionRead *wrapperspb.Int32Value `protobuf:"bytes,6,opt,name=permission_read,json=permissionRead,proto3" json:"permission_read,omitempty"`
	// Write permission value.
	PermissionWrite *wrapperspb.Int32Value `protobuf:"bytes,7,opt,name=permission_write,json=permissionWrite,proto3" json:"permission_write,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *WriteStorageObjectRequest) Reset() {
	*x = WriteStorageObjectRequest{}
	mi := &file_console_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteStorageObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteStorageObjectRequest) ProtoMessage() {}

func (x *WriteStorageObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteStorageObjectRequest.ProtoReflect.Descriptor instead.
func (*WriteStorageObjectRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{60}
}

func (x *WriteStorageObjectRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *WriteStorageObjectRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *WriteStorageObjectRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *WriteStorageObjectRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *WriteStorageObjectRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *WriteStorageObjectRequest) GetPermissionRead() *wrapperspb.Int32Value {
	if x != nil {
		return x.PermissionRead
	}
	return nil
}

func (x *WriteStorageObjectRequest) GetPermissionWrite() *wrapperspb.Int32Value {
	if x != nil {
		return x.PermissionWrite
	}
	return nil
}

type GetWalletLedgerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the user account.
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// Max number of results per page
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// Cursor to retrieve a page of records from
	Cursor        string `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWalletLedgerRequest) Reset() {
	*x = GetWalletLedgerRequest{}
	mi := &file_console_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWalletLedgerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWalletLedgerRequest) ProtoMessage() {}

func (x *GetWalletLedgerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWalletLedgerRequest.ProtoReflect.Descriptor instead.
func (*GetWalletLedgerRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{61}
}

func (x *GetWalletLedgerRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *GetWalletLedgerRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetWalletLedgerRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

type GetNotificationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Notification id.
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotificationRequest) Reset() {
	*x = GetNotificationRequest{}
	mi := &file_console_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationRequest) ProtoMessage() {}

func (x *GetNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationRequest.ProtoReflect.Descriptor instead.
func (*GetNotificationRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{62}
}

func (x *GetNotificationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetPurchaseRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Purchase original transaction id.
	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPurchaseRequest) Reset() {
	*x = GetPurchaseRequest{}
	mi := &file_console_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPurchaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPurchaseRequest) ProtoMessage() {}

func (x *GetPurchaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPurchaseRequest.ProtoReflect.Descriptor instead.
func (*GetPurchaseRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{63}
}

func (x *GetPurchaseRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type GetSubscriptionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Subscription original transaction id.
	OriginalTransactionId string `protobuf:"bytes,1,opt,name=original_transaction_id,json=originalTransactionId,proto3" json:"original_transaction_id,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GetSubscriptionRequest) Reset() {
	*x = GetSubscriptionRequest{}
	mi := &file_console_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscriptionRequest) ProtoMessage() {}

func (x *GetSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*GetSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{64}
}

func (x *GetSubscriptionRequest) GetOriginalTransactionId() string {
	if x != nil {
		return x.OriginalTransactionId
	}
	return ""
}

// An object within the storage engine.
type StorageListObject struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The collection which stores the object.
	Collection string `protobuf:"bytes,1,opt,name=collection,proto3" json:"collection,omitempty"`
	// The key of the object within the collection.
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// The user owner of the object.
	UserId string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The version hash of the object.
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	// The read access permissions for the object.
	PermissionRead int32 `protobuf:"varint,5,opt,name=permission_read,json=permissionRead,proto3" json:"permission_read,omitempty"`
	// The write access permissions for the object.
	PermissionWrite int32 `protobuf:"varint,6,opt,name=permission_write,json=permissionWrite,proto3" json:"permission_write,omitempty"`
	// The UNIX time (for gRPC clients) or ISO string (for REST clients) when the object was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The UNIX time (for gRPC clients) or ISO string (for REST clients) when the object was last updated.
	UpdateTime    *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StorageListObject) Reset() {
	*x = StorageListObject{}
	mi := &file_console_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StorageListObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageListObject) ProtoMessage() {}

func (x *StorageListObject) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageListObject.ProtoReflect.Descriptor instead.
func (*StorageListObject) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{65}
}

func (x *StorageListObject) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *StorageListObject) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *StorageListObject) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *StorageListObject) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *StorageListObject) GetPermissionRead() int32 {
	if x != nil {
		return x.PermissionRead
	}
	return 0
}

func (x *StorageListObject) GetPermissionWrite() int32 {
	if x != nil {
		return x.PermissionWrite
	}
	return 0
}

func (x *StorageListObject) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *StorageListObject) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

// A single setting.
type Setting struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name identifier.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Setting value.
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// Update time.
	UpdateTimeSec int64 `protobuf:"varint,3,opt,name=update_time_sec,json=updateTimeSec,proto3" json:"update_time_sec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Setting) Reset() {
	*x = Setting{}
	mi := &file_console_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Setting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Setting) ProtoMessage() {}

func (x *Setting) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Setting.ProtoReflect.Descriptor instead.
func (*Setting) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{66}
}

func (x *Setting) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Setting) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Setting) GetUpdateTimeSec() int64 {
	if x != nil {
		return x.UpdateTimeSec
	}
	return 0
}

// Request to get a setting by name.
type SettingRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the setting
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SettingRequest) Reset() {
	*x = SettingRequest{}
	mi := &file_console_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingRequest) ProtoMessage() {}

func (x *SettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingRequest.ProtoReflect.Descriptor instead.
func (*SettingRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{67}
}

func (x *SettingRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Request to list settings.
type ListSettingsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The list of setting names, if empty all settings are returned.
	Names         []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSettingsRequest) Reset() {
	*x = ListSettingsRequest{}
	mi := &file_console_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSettingsRequest) ProtoMessage() {}

func (x *ListSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSettingsRequest.ProtoReflect.Descriptor instead.
func (*ListSettingsRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{68}
}

func (x *ListSettingsRequest) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

// Request to update an existing setting.
type UpdateSettingRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name identifier.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Setting value.
	Value         string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSettingRequest) Reset() {
	*x = UpdateSettingRequest{}
	mi := &file_console_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSettingRequest) ProtoMessage() {}

func (x *UpdateSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSettingRequest.ProtoReflect.Descriptor instead.
func (*UpdateSettingRequest) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{69}
}

func (x *UpdateSettingRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateSettingRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// A list of settings.
type SettingList struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of settings.
	Settings      []*Setting `protobuf:"bytes,1,rep,name=settings,proto3" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SettingList) Reset() {
	*x = SettingList{}
	mi := &file_console_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SettingList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettingList) ProtoMessage() {}

func (x *SettingList) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettingList.ProtoReflect.Descriptor instead.
func (*SettingList) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{70}
}

func (x *SettingList) GetSettings() []*Setting {
	if x != nil {
		return x.Settings
	}
	return nil
}

type MatchList_Match struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The API match
	ApiMatch *api.Match `protobuf:"bytes,1,opt,name=api_match,json=apiMatch,proto3" json:"api_match,omitempty"`
	// The node name
	Node          string `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchList_Match) Reset() {
	*x = MatchList_Match{}
	mi := &file_console_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchList_Match) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchList_Match) ProtoMessage() {}

func (x *MatchList_Match) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchList_Match.ProtoReflect.Descriptor instead.
func (*MatchList_Match) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{9, 0}
}

func (x *MatchList_Match) GetApiMatch() *api.Match {
	if x != nil {
		return x.ApiMatch
	}
	return nil
}

func (x *MatchList_Match) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

// A warning for a configuration field.
type Config_Warning struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The config field this warning is for in a JSON pointer format.
	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	// Warning message text.
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Config_Warning) Reset() {
	*x = Config_Warning{}
	mi := &file_console_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config_Warning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config_Warning) ProtoMessage() {}

func (x *Config_Warning) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config_Warning.ProtoReflect.Descriptor instead.
func (*Config_Warning) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{19, 0}
}

func (x *Config_Warning) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *Config_Warning) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// A console user
type UserList_User struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Username of the user
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// Email of the user
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	// Role of the user;
	Role UserRole `protobuf:"varint,3,opt,name=role,proto3,enum=nakama.console.UserRole" json:"role,omitempty"`
	// Whether the user is required to setup MFA.
	MfaRequired bool `protobuf:"varint,4,opt,name=mfa_required,json=mfaRequired,proto3" json:"mfa_required,omitempty"`
	// Whether the user has MFA enabled.
	MfaEnabled    bool `protobuf:"varint,5,opt,name=mfa_enabled,json=mfaEnabled,proto3" json:"mfa_enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserList_User) Reset() {
	*x = UserList_User{}
	mi := &file_console_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserList_User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserList_User) ProtoMessage() {}

func (x *UserList_User) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserList_User.ProtoReflect.Descriptor instead.
func (*UserList_User) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{55, 0}
}

func (x *UserList_User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserList_User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserList_User) GetRole() UserRole {
	if x != nil {
		return x.Role
	}
	return UserRole_USER_ROLE_UNKNOWN
}

func (x *UserList_User) GetMfaRequired() bool {
	if x != nil {
		return x.MfaRequired
	}
	return false
}

func (x *UserList_User) GetMfaEnabled() bool {
	if x != nil {
		return x.MfaEnabled
	}
	return false
}

// The status of a Nakama node.
type StatusList_Status struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Node name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Health score.
	Health StatusHealth `protobuf:"varint,2,opt,name=health,proto3,enum=nakama.console.StatusHealth" json:"health,omitempty"`
	// Currently connected sessions.
	SessionCount int32 `protobuf:"varint,3,opt,name=session_count,json=sessionCount,proto3" json:"session_count,omitempty"`
	// Currently registered live presences.
	PresenceCount int32 `protobuf:"varint,4,opt,name=presence_count,json=presenceCount,proto3" json:"presence_count,omitempty"`
	// Current number of active authoritative matches.
	MatchCount int32 `protobuf:"varint,5,opt,name=match_count,json=matchCount,proto3" json:"match_count,omitempty"`
	// Current number of running goroutines.
	GoroutineCount int32 `protobuf:"varint,6,opt,name=goroutine_count,json=goroutineCount,proto3" json:"goroutine_count,omitempty"`
	// Average response latency in milliseconds.
	AvgLatencyMs float64 `protobuf:"fixed64,7,opt,name=avg_latency_ms,json=avgLatencyMs,proto3" json:"avg_latency_ms,omitempty"`
	// Average number of requests per second.
	AvgRateSec float64 `protobuf:"fixed64,8,opt,name=avg_rate_sec,json=avgRateSec,proto3" json:"avg_rate_sec,omitempty"`
	// Average input bandwidth usage.
	AvgInputKbs float64 `protobuf:"fixed64,9,opt,name=avg_input_kbs,json=avgInputKbs,proto3" json:"avg_input_kbs,omitempty"`
	// Average output bandwidth usage.
	AvgOutputKbs  float64 `protobuf:"fixed64,10,opt,name=avg_output_kbs,json=avgOutputKbs,proto3" json:"avg_output_kbs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusList_Status) Reset() {
	*x = StatusList_Status{}
	mi := &file_console_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusList_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusList_Status) ProtoMessage() {}

func (x *StatusList_Status) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusList_Status.ProtoReflect.Descriptor instead.
func (*StatusList_Status) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{56, 0}
}

func (x *StatusList_Status) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StatusList_Status) GetHealth() StatusHealth {
	if x != nil {
		return x.Health
	}
	return StatusHealth_STATUS_HEALTH_OK
}

func (x *StatusList_Status) GetSessionCount() int32 {
	if x != nil {
		return x.SessionCount
	}
	return 0
}

func (x *StatusList_Status) GetPresenceCount() int32 {
	if x != nil {
		return x.PresenceCount
	}
	return 0
}

func (x *StatusList_Status) GetMatchCount() int32 {
	if x != nil {
		return x.MatchCount
	}
	return 0
}

func (x *StatusList_Status) GetGoroutineCount() int32 {
	if x != nil {
		return x.GoroutineCount
	}
	return 0
}

func (x *StatusList_Status) GetAvgLatencyMs() float64 {
	if x != nil {
		return x.AvgLatencyMs
	}
	return 0
}

func (x *StatusList_Status) GetAvgRateSec() float64 {
	if x != nil {
		return x.AvgRateSec
	}
	return 0
}

func (x *StatusList_Status) GetAvgInputKbs() float64 {
	if x != nil {
		return x.AvgInputKbs
	}
	return 0
}

func (x *StatusList_Status) GetAvgOutputKbs() float64 {
	if x != nil {
		return x.AvgOutputKbs
	}
	return 0
}

// Module information
type RuntimeInfo_ModuleInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Module path
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// Module last modified date
	ModTime       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=mod_time,json=modTime,proto3" json:"mod_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RuntimeInfo_ModuleInfo) Reset() {
	*x = RuntimeInfo_ModuleInfo{}
	mi := &file_console_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RuntimeInfo_ModuleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RuntimeInfo_ModuleInfo) ProtoMessage() {}

func (x *RuntimeInfo_ModuleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RuntimeInfo_ModuleInfo.ProtoReflect.Descriptor instead.
func (*RuntimeInfo_ModuleInfo) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{57, 0}
}

func (x *RuntimeInfo_ModuleInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RuntimeInfo_ModuleInfo) GetModTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ModTime
	}
	return nil
}

var File_console_proto protoreflect.FileDescriptor

const file_console_proto_rawDesc = "" +
	"\n" +
	"\rconsole.proto\x12\x0enakama.console\x1a\rapi/api.proto\x1a8github.com/heroiclabs/nakama-common/rtapi/realtime.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"T\n" +
	"\x15ApiEndpointDescriptor\x12\x16\n" +
	"\x06method\x18\x01 \x01(\tR\x06method\x12#\n" +
	"\rbody_template\x18\x02 \x01(\tR\fbodyTemplate\"w\n" +
	"\aAccount\x12-\n" +
	"\aaccount\x18\x01 \x01(\v2\x13.nakama.api.AccountR\aaccount\x12=\n" +
	"\fdisable_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\vdisableTime\"k\n" +
	"\x14AccountDeleteRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12C\n" +
	"\x0frecord_deletion\x18\x02 \x01(\v2\x1a.google.protobuf.BoolValueR\x0erecordDeletion\"\xd9\x03\n" +
	"\rAccountExport\x12-\n" +
	"\aaccount\x18\x01 \x01(\v2\x13.nakama.api.AccountR\aaccount\x123\n" +
	"\aobjects\x18\x02 \x03(\v2\x19.nakama.api.StorageObjectR\aobjects\x12,\n" +
	"\afriends\x18\x03 \x03(\v2\x12.nakama.api.FriendR\afriends\x12)\n" +
	"\x06groups\x18\x04 \x03(\v2\x11.nakama.api.GroupR\x06groups\x126\n" +
	"\bmessages\x18\x05 \x03(\v2\x1a.nakama.api.ChannelMessageR\bmessages\x12N\n" +
	"\x13leaderboard_records\x18\x06 \x03(\v2\x1d.nakama.api.LeaderboardRecordR\x12leaderboardRecords\x12>\n" +
	"\rnotifications\x18\a \x03(\v2\x18.nakama.api.NotificationR\rnotifications\x12C\n" +
	"\x0ewallet_ledgers\x18\b \x03(\v2\x1c.nakama.console.WalletLedgerR\rwalletLedgers\"\x1b\n" +
	"\tAccountId\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"w\n" +
	"\vAccountList\x12&\n" +
	"\x05users\x18\x01 \x03(\v2\x10.nakama.api.UserR\x05users\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x1f\n" +
	"\vnext_cursor\x18\x03 \x01(\tR\n" +
	"nextCursor\"\x19\n" +
	"\aGroupId\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"x\n" +
	"\tGroupList\x12)\n" +
	"\x06groups\x18\x01 \x03(\v2\x11.nakama.api.GroupR\x06groups\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x1f\n" +
	"\vnext_cursor\x18\x03 \x01(\tR\n" +
	"nextCursor\"u\n" +
	"\vGroupExport\x12'\n" +
	"\x05group\x18\x01 \x01(\v2\x11.nakama.api.GroupR\x05group\x12=\n" +
	"\amembers\x18\x02 \x03(\v2#.nakama.api.GroupUserList.GroupUserR\amembers\"\x93\x01\n" +
	"\tMatchList\x129\n" +
	"\amatches\x18\x01 \x03(\v2\x1f.nakama.console.MatchList.MatchR\amatches\x1aK\n" +
	"\x05Match\x12.\n" +
	"\tapi_match\x18\x01 \x01(\v2\x11.nakama.api.MatchR\bapiMatch\x12\x12\n" +
	"\x04node\x18\x02 \x01(\tR\x04node\"\xe8\x01\n" +
	"\x0eAddUserRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x12\x14\n" +
	"\x05email\x18\x03 \x01(\tR\x05email\x12,\n" +
	"\x04role\x18\x04 \x01(\x0e2\x18.nakama.console.UserRoleR\x04role\x12!\n" +
	"\fmfa_required\x18\x05 \x01(\bR\vmfaRequired\x127\n" +
	"\x17newsletter_subscription\x18\x06 \x01(\bR\x16newsletterSubscription\"f\n" +
	"\x14AddGroupUsersRequest\x12\x10\n" +
	"\x03ids\x18\x01 \x01(\tR\x03ids\x12\x19\n" +
	"\bgroup_id\x18\x02 \x01(\tR\agroupId\x12!\n" +
	"\fjoin_request\x18\x03 \x01(\bR\vjoinRequest\"\xa2\x01\n" +
	"\x0fApiEndpointList\x12C\n" +
	"\tendpoints\x18\x01 \x03(\v2%.nakama.console.ApiEndpointDescriptorR\tendpoints\x12J\n" +
	"\rrpc_endpoints\x18\x02 \x03(\v2%.nakama.console.ApiEndpointDescriptorR\frpcEndpoints\"_\n" +
	"\x13AuthenticateRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x12\x10\n" +
	"\x03mfa\x18\x03 \x01(\tR\x03mfa\"C\n" +
	"\x1bAuthenticateMFASetupRequest\x12\x10\n" +
	"\x03mfa\x18\x01 \x01(\tR\x03mfa\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\"E\n" +
	"\x1cAuthenticateMFASetupResponse\x12%\n" +
	"\x0erecovery_codes\x18\x01 \x03(\tR\rrecoveryCodes\"1\n" +
	"\x19AuthenticateLogoutRequest\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\"\xf9\x01\n" +
	"\x16CallApiEndpointRequest\x12\x16\n" +
	"\x06method\x18\x01 \x01(\tR\x06method\x12\x12\n" +
	"\x04body\x18\x02 \x01(\tR\x04body\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12Z\n" +
	"\fsession_vars\x18\x04 \x03(\v27.nakama.console.CallApiEndpointRequest.SessionVarsEntryR\vsessionVars\x1a>\n" +
	"\x10SessionVarsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"R\n" +
	"\x17CallApiEndpointResponse\x12\x12\n" +
	"\x04body\x18\x01 \x01(\tR\x04body\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"\xbe\x01\n" +
	"\x06Config\x12\x16\n" +
	"\x06config\x18\x01 \x01(\tR\x06config\x12:\n" +
	"\bwarnings\x18\x02 \x03(\v2\x1e.nakama.console.Config.WarningR\bwarnings\x12%\n" +
	"\x0eserver_version\x18\x03 \x01(\tR\rserverVersion\x1a9\n" +
	"\aWarning\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"_\n" +
	"\x0eConsoleSession\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\x127\n" +
	"\bmfa_code\x18\x02 \x01(\v2\x1c.google.protobuf.StringValueR\amfaCode\"d\n" +
	"\x1cDeleteChannelMessagesRequest\x122\n" +
	"\x06before\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x06before\x12\x10\n" +
	"\x03ids\x18\x02 \x03(\tR\x03ids\"B\n" +
	"\x13DeleteFriendRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tfriend_id\x18\x02 \x01(\tR\bfriendId\"$\n" +
	"\x12DeleteGroupRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"C\n" +
	"\x16DeleteGroupUserRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bgroup_id\x18\x02 \x01(\tR\agroupId\"H\n" +
	"\x1bUpdateGroupUserStateRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bgroup_id\x18\x02 \x01(\tR\agroupId\"1\n" +
	"\x13ResetUserMfaRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\"O\n" +
	"\x15RequireUserMfaRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\brequired\x18\x02 \x01(\bR\brequired\"K\n" +
	"\x1eDeleteLeaderboardRecordRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bowner_id\x18\x02 \x01(\tR\aownerId\"+\n" +
	"\x19DeleteNotificationRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x81\x01\n" +
	"\x1aDeleteStorageObjectRequest\x12\x1e\n" +
	"\n" +
	"collection\x18\x01 \x01(\tR\n" +
	"collection\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x18\n" +
	"\aversion\x18\x04 \x01(\tR\aversion\"H\n" +
	"\x19DeleteWalletLedgerRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\twallet_id\x18\x02 \x01(\tR\bwalletId\"\xf8\x05\n" +
	"\vLeaderboard\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1a\n" +
	"\bcategory\x18\x04 \x01(\rR\bcategory\x12\x1d\n" +
	"\n" +
	"sort_order\x18\x05 \x01(\rR\tsortOrder\x12\x12\n" +
	"\x04size\x18\x06 \x01(\rR\x04size\x12\x19\n" +
	"\bmax_size\x18\a \x01(\rR\amaxSize\x12\"\n" +
	"\rmax_num_score\x18\b \x01(\rR\vmaxNumScore\x12\x1a\n" +
	"\boperator\x18\t \x01(\rR\boperator\x12\x1d\n" +
	"\n" +
	"end_active\x18\n" +
	" \x01(\rR\tendActive\x12%\n" +
	"\x0ereset_schedule\x18\v \x01(\tR\rresetSchedule\x12\x1a\n" +
	"\bmetadata\x18\f \x01(\tR\bmetadata\x12;\n" +
	"\vcreate_time\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\x129\n" +
	"\n" +
	"start_time\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x1a\n" +
	"\bduration\x18\x10 \x01(\rR\bduration\x12!\n" +
	"\fstart_active\x18\x11 \x01(\rR\vstartActive\x12#\n" +
	"\rjoin_required\x18\x12 \x01(\bR\fjoinRequired\x12$\n" +
	"\rauthoritative\x18\x13 \x01(\bR\rauthoritative\x12\x1e\n" +
	"\n" +
	"tournament\x18\x14 \x01(\bR\n" +
	"tournament\x12\x1d\n" +
	"\n" +
	"prev_reset\x18\x15 \x01(\rR\tprevReset\x12\x1d\n" +
	"\n" +
	"next_reset\x18\x16 \x01(\rR\tnextReset\"0\n" +
	"\x16LeaderboardListRequest\x12\x16\n" +
	"\x06cursor\x18\x01 \x01(\tR\x06cursor\"\x80\x01\n" +
	"\x0fLeaderboardList\x12?\n" +
	"\fleaderboards\x18\x01 \x03(\v2\x1b.nakama.console.LeaderboardR\fleaderboards\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12\x16\n" +
	"\x06cursor\x18\x03 \x01(\tR\x06cursor\"$\n" +
	"\x12LeaderboardRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"e\n" +
	"\x13ListAccountsRequest\x12\x16\n" +
	"\x06filter\x18\x01 \x01(\tR\x06filter\x12\x1e\n" +
	"\n" +
	"tombstones\x18\x02 \x01(\bR\n" +
	"tombstones\x12\x16\n" +
	"\x06cursor\x18\x03 \x01(\tR\x06cursor\"\xa0\x02\n" +
	"\x1aListChannelMessagesRequest\x12C\n" +
	"\x04type\x18\x01 \x01(\x0e2/.nakama.console.ListChannelMessagesRequest.TypeR\x04type\x12\x14\n" +
	"\x05label\x18\x02 \x01(\tR\x05label\x12\x19\n" +
	"\bgroup_id\x18\x03 \x01(\tR\agroupId\x12\x1e\n" +
	"\vuser_id_one\x18\x04 \x01(\tR\tuserIdOne\x12\x1e\n" +
	"\vuser_id_two\x18\x05 \x01(\tR\tuserIdTwo\x12\x16\n" +
	"\x06cursor\x18\x06 \x01(\tR\x06cursor\"4\n" +
	"\x04Type\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\b\n" +
	"\x04ROOM\x10\x02\x12\t\n" +
	"\x05GROUP\x10\x03\x12\n" +
	"\n" +
	"\x06DIRECT\x10\x04\"C\n" +
	"\x11ListGroupsRequest\x12\x16\n" +
	"\x06filter\x18\x01 \x01(\tR\x06filter\x12\x16\n" +
	"\x06cursor\x18\x02 \x01(\tR\x06cursor\"\xae\x03\n" +
	"\x12ListMatchesRequest\x121\n" +
	"\x05limit\x18\x01 \x01(\v2\x1b.google.protobuf.Int32ValueR\x05limit\x12@\n" +
	"\rauthoritative\x18\x02 \x01(\v2\x1a.google.protobuf.BoolValueR\rauthoritative\x122\n" +
	"\x05label\x18\x03 \x01(\v2\x1c.google.protobuf.StringValueR\x05label\x126\n" +
	"\bmin_size\x18\x04 \x01(\v2\x1b.google.protobuf.Int32ValueR\aminSize\x126\n" +
	"\bmax_size\x18\x05 \x01(\v2\x1b.google.protobuf.Int32ValueR\amaxSize\x12\x19\n" +
	"\bmatch_id\x18\x06 \x01(\tR\amatchId\x122\n" +
	"\x05query\x18\a \x01(\v2\x1c.google.protobuf.StringValueR\x05query\x120\n" +
	"\x04node\x18\b \x01(\v2\x1c.google.protobuf.StringValueR\x04node\"a\n" +
	"\x18ListNotificationsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\rR\x05limit\x12\x16\n" +
	"\x06cursor\x18\x03 \x01(\tR\x06cursor\"]\n" +
	"\x14ListPurchasesRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\rR\x05limit\x12\x16\n" +
	"\x06cursor\x18\x03 \x01(\tR\x06cursor\"a\n" +
	"\x18ListSubscriptionsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\rR\x05limit\x12\x16\n" +
	"\x06cursor\x18\x03 \x01(\tR\x06cursor\"w\n" +
	"\x12ListStorageRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\x12\x1e\n" +
	"\n" +
	"collection\x18\x03 \x01(\tR\n" +
	"collection\x12\x16\n" +
	"\x06cursor\x18\x04 \x01(\tR\x06cursor\"s\n" +
	"\n" +
	"MatchState\x12;\n" +
	"\tpresences\x18\x01 \x03(\v2\x1d.nakama.realtime.UserPresenceR\tpresences\x12\x12\n" +
	"\x04tick\x18\x02 \x01(\x03R\x04tick\x12\x14\n" +
	"\x05state\x18\x03 \x01(\tR\x05state\"#\n" +
	"\x11MatchStateRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xf9\x01\n" +
	"\fNotification\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\asubject\x18\x02 \x01(\tR\asubject\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12\x12\n" +
	"\x04code\x18\x04 \x01(\x05R\x04code\x12\x1b\n" +
	"\tsender_id\x18\x05 \x01(\tR\bsenderId\x12;\n" +
	"\vcreate_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\x12\x1e\n" +
	"\n" +
	"persistent\x18\a \x01(\bR\n" +
	"persistent\x12\x17\n" +
	"\auser_id\x18\b \x01(\tR\x06userId\"\x98\x01\n" +
	"\x10NotificationList\x12B\n" +
	"\rnotifications\x18\x01 \x03(\v2\x1c.nakama.console.NotificationR\rnotifications\x12\x1f\n" +
	"\vnext_cursor\x18\x02 \x01(\tR\n" +
	"nextCursor\x12\x1f\n" +
	"\vprev_cursor\x18\x03 \x01(\tR\n" +
	"prevCursor\"5\n" +
	"\x1dDeleteChannelMessagesResponse\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x03R\x05total\"\x8c\x01\n" +
	"\vStorageList\x12;\n" +
	"\aobjects\x18\x01 \x03(\v2!.nakama.console.StorageListObjectR\aobjects\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x1f\n" +
	"\vnext_cursor\x18\x03 \x01(\tR\n" +
	"nextCursor\":\n" +
	"\x16StorageCollectionsList\x12 \n" +
	"\vcollections\x18\x03 \x03(\tR\vcollections\"B\n" +
	"\x13UnlinkDeviceRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tdevice_id\x18\x02 \x01(\tR\bdeviceId\"\xb6\x06\n" +
	"\x14UpdateAccountRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x128\n" +
	"\busername\x18\x02 \x01(\v2\x1c.google.protobuf.StringValueR\busername\x12?\n" +
	"\fdisplay_name\x18\x03 \x01(\v2\x1c.google.protobuf.StringValueR\vdisplayName\x128\n" +
	"\bmetadata\x18\x04 \x01(\v2\x1c.google.protobuf.StringValueR\bmetadata\x12;\n" +
	"\n" +
	"avatar_url\x18\x05 \x01(\v2\x1c.google.protobuf.StringValueR\tavatarUrl\x127\n" +
	"\blang_tag\x18\x06 \x01(\v2\x1c.google.protobuf.StringValueR\alangTag\x128\n" +
	"\blocation\x18\a \x01(\v2\x1c.google.protobuf.StringValueR\blocation\x128\n" +
	"\btimezone\x18\b \x01(\v2\x1c.google.protobuf.StringValueR\btimezone\x129\n" +
	"\tcustom_id\x18\t \x01(\v2\x1c.google.protobuf.StringValueR\bcustomId\x122\n" +
	"\x05email\x18\n" +
	" \x01(\v2\x1c.google.protobuf.StringValueR\x05email\x128\n" +
	"\bpassword\x18\v \x01(\v2\x1c.google.protobuf.StringValueR\bpassword\x12R\n" +
	"\n" +
	"device_ids\x18\f \x03(\v23.nakama.console.UpdateAccountRequest.DeviceIdsEntryR\tdeviceIds\x124\n" +
	"\x06wallet\x18\r \x01(\v2\x1c.google.protobuf.StringValueR\x06wallet\x1a<\n" +
	"\x0eDeviceIdsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb0\x03\n" +
	"\x12UpdateGroupRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x120\n" +
	"\x04name\x18\x02 \x01(\v2\x1c.google.protobuf.StringValueR\x04name\x12>\n" +
	"\vdescription\x18\x03 \x01(\v2\x1c.google.protobuf.StringValueR\vdescription\x127\n" +
	"\blang_tag\x18\x04 \x01(\v2\x1c.google.protobuf.StringValueR\alangTag\x128\n" +
	"\bmetadata\x18\x05 \x01(\v2\x1c.google.protobuf.StringValueR\bmetadata\x12;\n" +
	"\n" +
	"avatar_url\x18\x06 \x01(\v2\x1c.google.protobuf.StringValueR\tavatarUrl\x12.\n" +
	"\x04open\x18\a \x01(\v2\x1a.google.protobuf.BoolValueR\x04open\x128\n" +
	"\tmax_count\x18\b \x01(\v2\x1b.google.protobuf.Int32ValueR\bmaxCount\"&\n" +
	"\bUsername\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\"\xec\x01\n" +
	"\bUserList\x123\n" +
	"\x05users\x18\x01 \x03(\v2\x1d.nakama.console.UserList.UserR\x05users\x1a\xaa\x01\n" +
	"\x04User\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x14\n" +
	"\x05email\x18\x02 \x01(\tR\x05email\x12,\n" +
	"\x04role\x18\x03 \x01(\x0e2\x18.nakama.console.UserRoleR\x04role\x12!\n" +
	"\fmfa_required\x18\x04 \x01(\bR\vmfaRequired\x12\x1f\n" +
	"\vmfa_enabled\x18\x05 \x01(\bR\n" +
	"mfaEnabled\"\xfc\x03\n" +
	"\n" +
	"StatusList\x127\n" +
	"\x05nodes\x18\x01 \x03(\v2!.nakama.console.StatusList.StatusR\x05nodes\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1a\xfa\x02\n" +
	"\x06Status\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x124\n" +
	"\x06health\x18\x02 \x01(\x0e2\x1c.nakama.console.StatusHealthR\x06health\x12#\n" +
	"\rsession_count\x18\x03 \x01(\x05R\fsessionCount\x12%\n" +
	"\x0epresence_count\x18\x04 \x01(\x05R\rpresenceCount\x12\x1f\n" +
	"\vmatch_count\x18\x05 \x01(\x05R\n" +
	"matchCount\x12'\n" +
	"\x0fgoroutine_count\x18\x06 \x01(\x05R\x0egoroutineCount\x12$\n" +
	"\x0eavg_latency_ms\x18\a \x01(\x01R\favgLatencyMs\x12 \n" +
	"\favg_rate_sec\x18\b \x01(\x01R\n" +
	"avgRateSec\x12\"\n" +
	"\ravg_input_kbs\x18\t \x01(\x01R\vavgInputKbs\x12$\n" +
	"\x0eavg_output_kbs\x18\n" +
	" \x01(\x01R\favgOutputKbs\"\xbd\x03\n" +
	"\vRuntimeInfo\x12*\n" +
	"\x11lua_rpc_functions\x18\x01 \x03(\tR\x0fluaRpcFunctions\x12(\n" +
	"\x10go_rpc_functions\x18\x02 \x03(\tR\x0egoRpcFunctions\x12(\n" +
	"\x10js_rpc_functions\x18\x03 \x03(\tR\x0ejsRpcFunctions\x12E\n" +
	"\n" +
	"go_modules\x18\x04 \x03(\v2&.nakama.console.RuntimeInfo.ModuleInfoR\tgoModules\x12G\n" +
	"\vlua_modules\x18\x05 \x03(\v2&.nakama.console.RuntimeInfo.ModuleInfoR\n" +
	"luaModules\x12E\n" +
	"\n" +
	"js_modules\x18\x06 \x03(\v2&.nakama.console.RuntimeInfo.ModuleInfoR\tjsModules\x1aW\n" +
	"\n" +
	"ModuleInfo\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x125\n" +
	"\bmod_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\amodTime\"\xeb\x01\n" +
	"\fWalletLedger\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1c\n" +
	"\tchangeset\x18\x03 \x01(\tR\tchangeset\x12\x1a\n" +
	"\bmetadata\x18\x04 \x01(\tR\bmetadata\x12;\n" +
	"\vcreate_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\x12;\n" +
	"\vupdate_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"updateTime\"\x88\x01\n" +
	"\x10WalletLedgerList\x122\n" +
	"\x05items\x18\x01 \x03(\v2\x1c.nakama.console.WalletLedgerR\x05items\x12\x1f\n" +
	"\vnext_cursor\x18\x02 \x01(\tR\n" +
	"nextCursor\x12\x1f\n" +
	"\vprev_cursor\x18\x03 \x01(\tR\n" +
	"prevCursor\"\xa4\x02\n" +
	"\x19WriteStorageObjectRequest\x12\x1e\n" +
	"\n" +
	"collection\x18\x01 \x01(\tR\n" +
	"collection\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x14\n" +
	"\x05value\x18\x04 \x01(\tR\x05value\x12\x18\n" +
	"\aversion\x18\x05 \x01(\tR\aversion\x12D\n" +
	"\x0fpermission_read\x18\x06 \x01(\v2\x1b.google.protobuf.Int32ValueR\x0epermissionRead\x12F\n" +
	"\x10permission_write\x18\a \x01(\v2\x1b.google.protobuf.Int32ValueR\x0fpermissionWrite\"e\n" +
	"\x16GetWalletLedgerRequest\x12\x1d\n" +
	"\n" +
	"account_id\x18\x01 \x01(\tR\taccountId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\rR\x05limit\x12\x16\n" +
	"\x06cursor\x18\x03 \x01(\tR\x06cursor\"(\n" +
	"\x16GetNotificationRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\";\n" +
	"\x12GetPurchaseRequest\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\"P\n" +
	"\x16GetSubscriptionRequest\x126\n" +
	"\x17original_transaction_id\x18\x01 \x01(\tR\x15originalTransactionId\"\xc6\x02\n" +
	"\x11StorageListObject\x12\x1e\n" +
	"\n" +
	"collection\x18\x01 \x01(\tR\n" +
	"collection\x12\x10\n" +
	"\x03key\x18\x02 \x01(\tR\x03key\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x18\n" +
	"\aversion\x18\x04 \x01(\tR\aversion\x12'\n" +
	"\x0fpermission_read\x18\x05 \x01(\x05R\x0epermissionRead\x12)\n" +
	"\x10permission_write\x18\x06 \x01(\x05R\x0fpermissionWrite\x12;\n" +
	"\vcreate_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"createTime\x12;\n" +
	"\vupdate_time\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"updateTime\"[\n" +
	"\aSetting\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x12&\n" +
	"\x0fupdate_time_sec\x18\x03 \x01(\x03R\rupdateTimeSec\"$\n" +
	"\x0eSettingRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"+\n" +
	"\x13ListSettingsRequest\x12\x14\n" +
	"\x05names\x18\x01 \x03(\tR\x05names\"@\n" +
	"\x14UpdateSettingRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"B\n" +
	"\vSettingList\x123\n" +
	"\bsettings\x18\x01 \x03(\v2\x17.nakama.console.SettingR\bsettings*\x81\x01\n" +
	"\bUserRole\x12\x15\n" +
	"\x11USER_ROLE_UNKNOWN\x10\x00\x12\x13\n" +
	"\x0fUSER_ROLE_ADMIN\x10\x01\x12\x17\n" +
	"\x13USER_ROLE_DEVELOPER\x10\x02\x12\x18\n" +
	"\x14USER_ROLE_MAINTAINER\x10\x03\x12\x16\n" +
	"\x12USER_ROLE_READONLY\x10\x04*|\n" +
	"\fStatusHealth\x12\x14\n" +
	"\x10STATUS_HEALTH_OK\x10\x00\x12\x17\n" +
	"\x13STATUS_HEALTH_ERROR\x10\x01\x12\x1c\n" +
	"\x18STATUS_HEALTH_CONNECTING\x10\x02\x12\x1f\n" +
	"\x1bSTATUS_HEALTH_DISCONNECTING\x10\x032\xc7D\n" +
	"\aConsole\x12\x83\x01\n" +
	"\fAuthenticate\x12#.nakama.console.AuthenticateRequest\x1a\x1e.nakama.console.ConsoleSession\".\x92A\bb\x06\n" +
	"\x04\n" +
	"\x00\x12\x00\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/v2/console/authenticate\x12\x83\x01\n" +
	"\x12AuthenticateLogout\x12).nakama.console.AuthenticateLogoutRequest\x1a\x16.google.protobuf.Empty\"*\x82\xd3\xe4\x93\x02$:\x01*\"\x1f/v2/console/authenticate/logout\x12\x9a\x01\n" +
	"\x14AuthenticateMFASetup\x12+.nakama.console.AuthenticateMFASetupRequest\x1a,.nakama.console.AuthenticateMFASetupResponse\"'\x82\xd3\xe4\x93\x02!:\x01*\"\x1c/v2/console/authenticate/mfa\x12^\n" +
	"\aAddUser\x12\x1e.nakama.console.AddUserRequest\x1a\x16.google.protobuf.Empty\"\x1b\x82\xd3\xe4\x93\x02\x15:\x01*\"\x10/v2/console/user\x12z\n" +
	"\rAddGroupUsers\x12$.nakama.console.AddGroupUsersRequest\x1a\x16.google.protobuf.Empty\"+\x82\xd3\xe4\x93\x02%:\x01*\" /v2/console/group/{group_id}/add\x12e\n" +
	"\n" +
	"BanAccount\x12\x19.nakama.console.AccountId\x1a\x16.google.protobuf.Empty\"$\x82\xd3\xe4\x93\x02\x1e\"\x1c/v2/console/account/{id}/ban\x12\x91\x01\n" +
	"\x0fCallApiEndpoint\x12&.nakama.console.CallApiEndpointRequest\x1a'.nakama.console.CallApiEndpointResponse\"-\x82\xd3\xe4\x93\x02':\x01*\"\"/v2/console/api/endpoints/{method}\x12\x95\x01\n" +
	"\x0fCallRpcEndpoint\x12&.nakama.console.CallApiEndpointRequest\x1a'.nakama.console.CallApiEndpointResponse\"1\x82\xd3\xe4\x93\x02+:\x01*\"&/v2/console/api/endpoints/rpc/{method}\x12X\n" +
	"\rDeleteAllData\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.Empty\"\x17\x82\xd3\xe4\x93\x02\x11*\x0f/v2/console/all\x12o\n" +
	"\rDeleteAccount\x12$.nakama.console.AccountDeleteRequest\x1a\x16.google.protobuf.Empty\" \x82\xd3\xe4\x93\x02\x1a*\x18/v2/console/account/{id}\x12\x91\x01\n" +
	"\x15DeleteChannelMessages\x12,.nakama.console.DeleteChannelMessagesRequest\x1a-.nakama.console.DeleteChannelMessagesResponse\"\x1b\x82\xd3\xe4\x93\x02\x15*\x13/v2/console/message\x12\x80\x01\n" +
	"\fDeleteFriend\x12#.nakama.console.DeleteFriendRequest\x1a\x16.google.protobuf.Empty\"3\x82\xd3\xe4\x93\x02-*+/v2/console/account/{id}/friend/{friend_id}\x12i\n" +
	"\vDeleteGroup\x12\".nakama.console.DeleteGroupRequest\x1a\x16.google.protobuf.Empty\"\x1e\x82\xd3\xe4\x93\x02\x18*\x16/v2/console/group/{id}\x12\x84\x01\n" +
	"\x0fDeleteGroupUser\x12&.nakama.console.DeleteGroupUserRequest\x1a\x16.google.protobuf.Empty\"1\x82\xd3\xe4\x93\x02+*)/v2/console/account/{id}/group/{group_id}\x12\\\n" +
	"\rDeleteStorage\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.Empty\"\x1b\x82\xd3\xe4\x93\x02\x15*\x13/v2/console/storage\x12\xd1\x01\n" +
	"\x13DeleteStorageObject\x12*.nakama.console.DeleteStorageObjectRequest\x1a\x16.google.protobuf.Empty\"v\x82\xd3\xe4\x93\x02pZ<*:/v2/console/storage/{collection}/{key}/{user_id}/{version}*0/v2/console/storage/{collection}/{key}/{user_id}\x12]\n" +
	"\x0eDeleteAccounts\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.Empty\"\x1b\x82\xd3\xe4\x93\x02\x15*\x13/v2/console/account\x12u\n" +
	"\x11DeleteLeaderboard\x12\".nakama.console.LeaderboardRequest\x1a\x16.google.protobuf.Empty\"$\x82\xd3\xe4\x93\x02\x1e*\x1c/v2/console/leaderboard/{id}\x12\x98\x01\n" +
	"\x17DeleteLeaderboardRecord\x12..nakama.console.DeleteLeaderboardRecordRequest\x1a\x16.google.protobuf.Empty\"5\x82\xd3\xe4\x93\x02/*-/v2/console/leaderboard/{id}/owner/{owner_id}\x12~\n" +
	"\x12DeleteNotification\x12).nakama.console.DeleteNotificationRequest\x1a\x16.google.protobuf.Empty\"%\x82\xd3\xe4\x93\x02\x1f*\x1d/v2/console/notification/{id}\x12X\n" +
	"\n" +
	"DeleteUser\x12\x18.nakama.console.Username\x1a\x16.google.protobuf.Empty\"\x18\x82\xd3\xe4\x93\x02\x12*\x10/v2/console/user\x12\x8c\x01\n" +
	"\x12DeleteWalletLedger\x12).nakama.console.DeleteWalletLedgerRequest\x1a\x16.google.protobuf.Empty\"3\x82\xd3\xe4\x93\x02-*+/v2/console/account/{id}/wallet/{wallet_id}\x12\x92\x01\n" +
	"\x11DemoteGroupMember\x12+.nakama.console.UpdateGroupUserStateRequest\x1a\x16.google.protobuf.Empty\"8\x82\xd3\xe4\x93\x022\"0/v2/console/group/{group_id}/account/{id}/demote\x12r\n" +
	"\rExportAccount\x12\x19.nakama.console.AccountId\x1a\x1d.nakama.console.AccountExport\"'\x82\xd3\xe4\x93\x02!\x12\x1f/v2/console/account/{id}/export\x12j\n" +
	"\vExportGroup\x12\x17.nakama.console.GroupId\x1a\x1b.nakama.console.GroupExport\"%\x82\xd3\xe4\x93\x02\x1f\x12\x1d/v2/console/group/{id}/export\x12b\n" +
	"\n" +
	"GetAccount\x12\x19.nakama.console.AccountId\x1a\x17.nakama.console.Account\" \x82\xd3\xe4\x93\x02\x1a\x12\x18/v2/console/account/{id}\x12W\n" +
	"\tGetConfig\x12\x16.google.protobuf.Empty\x1a\x16.nakama.console.Config\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/v2/console/config\x12h\n" +
	"\n" +
	"GetFriends\x12\x19.nakama.console.AccountId\x1a\x16.nakama.api.FriendList\"'\x82\xd3\xe4\x93\x02!\x12\x1f/v2/console/account/{id}/friend\x12V\n" +
	"\bGetGroup\x12\x17.nakama.console.GroupId\x1a\x11.nakama.api.Group\"\x1e\x82\xd3\xe4\x93\x02\x18\x12\x16/v2/console/group/{id}\x12g\n" +
	"\n" +
	"GetMembers\x12\x17.nakama.console.GroupId\x1a\x19.nakama.api.GroupUserList\"%\x82\xd3\xe4\x93\x02\x1f\x12\x1d/v2/console/group/{id}/member\x12i\n" +
	"\tGetGroups\x12\x19.nakama.console.AccountId\x1a\x19.nakama.api.UserGroupList\"&\x82\xd3\xe4\x93\x02 \x12\x1e/v2/console/account/{id}/group\x12w\n" +
	"\x0eGetLeaderboard\x12\".nakama.console.LeaderboardRequest\x1a\x1b.nakama.console.Leaderboard\"$\x82\xd3\xe4\x93\x02\x1e\x12\x1c/v2/console/leaderboard/{id}\x12t\n" +
	"\rGetMatchState\x12!.nakama.console.MatchStateRequest\x1a\x1a.nakama.console.MatchState\"$\x82\xd3\xe4\x93\x02\x1e\x12\x1c/v2/console/match/{id}/state\x12^\n" +
	"\n" +
	"GetRuntime\x12\x16.google.protobuf.Empty\x1a\x1b.nakama.console.RuntimeInfo\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/v2/console/runtime\x12i\n" +
	"\n" +
	"GetSetting\x12\x1e.nakama.console.SettingRequest\x1a\x17.nakama.console.Setting\"\"\x82\xd3\xe4\x93\x02\x1c\x12\x1a/v2/console/setting/{name}\x12[\n" +
	"\tGetStatus\x12\x16.google.protobuf.Empty\x1a\x1a.nakama.console.StatusList\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/v2/console/status\x12\x82\x01\n" +
	"\n" +
	"GetStorage\x12\x1f.nakama.api.ReadStorageObjectId\x1a\x19.nakama.api.StorageObject\"8\x82\xd3\xe4\x93\x022\x120/v2/console/storage/{collection}/{key}/{user_id}\x12\x8c\x01\n" +
	"\x0fGetWalletLedger\x12&.nakama.console.GetWalletLedgerRequest\x1a .nakama.console.WalletLedgerList\"/\x82\xd3\xe4\x93\x02)\x12'/v2/console/account/{account_id}/wallet\x12~\n" +
	"\x0fGetNotification\x12&.nakama.console.GetNotificationRequest\x1a\x1c.nakama.console.Notification\"%\x82\xd3\xe4\x93\x02\x1f\x12\x1d/v2/console/notification/{id}\x12\x83\x01\n" +
	"\vGetPurchase\x12\".nakama.console.GetPurchaseRequest\x1a\x1d.nakama.api.ValidatedPurchase\"1\x82\xd3\xe4\x93\x02+\x12)/v2/console/iap/purchase/{transaction_id}\x12\x9c\x01\n" +
	"\x0fGetSubscription\x12&.nakama.console.GetSubscriptionRequest\x1a!.nakama.api.ValidatedSubscription\">\x82\xd3\xe4\x93\x028\x126/v2/console/iap/subscription/{original_transaction_id}\x12n\n" +
	"\x10ListApiEndpoints\x12\x16.google.protobuf.Empty\x1a\x1f.nakama.console.ApiEndpointList\"!\x82\xd3\xe4\x93\x02\x1b\x12\x19/v2/console/api/endpoints\x12\xa0\x01\n" +
	"\x16ListLeaderboardRecords\x12).nakama.api.ListLeaderboardRecordsRequest\x1a!.nakama.api.LeaderboardRecordList\"8\x82\xd3\xe4\x93\x022\x120/v2/console/leaderboard/{leaderboard_id}/records\x12|\n" +
	"\x10ListLeaderboards\x12&.nakama.console.LeaderboardListRequest\x1a\x1f.nakama.console.LeaderboardList\"\x1f\x82\xd3\xe4\x93\x02\x19\x12\x17/v2/console/leaderboard\x12m\n" +
	"\fListSettings\x12#.nakama.console.ListSettingsRequest\x1a\x1b.nakama.console.SettingList\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/v2/console/setting\x12k\n" +
	"\vListStorage\x12\".nakama.console.ListStorageRequest\x1a\x1b.nakama.console.StorageList\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/v2/console/storage\x12\x81\x01\n" +
	"\x16ListStorageCollections\x12\x16.google.protobuf.Empty\x1a&.nakama.console.StorageCollectionsList\"'\x82\xd3\xe4\x93\x02!\x12\x1f/v2/console/storage/collections\x12m\n" +
	"\fListAccounts\x12#.nakama.console.ListAccountsRequest\x1a\x1b.nakama.console.AccountList\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/v2/console/account\x12~\n" +
	"\x13ListChannelMessages\x12*.nakama.console.ListChannelMessagesRequest\x1a\x1e.nakama.api.ChannelMessageList\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/v2/console/channel\x12e\n" +
	"\n" +
	"ListGroups\x12!.nakama.console.ListGroupsRequest\x1a\x19.nakama.console.GroupList\"\x19\x82\xd3\xe4\x93\x02\x13\x12\x11/v2/console/group\x12\x81\x01\n" +
	"\x11ListNotifications\x12(.nakama.console.ListNotificationsRequest\x1a .nakama.console.NotificationList\" \x82\xd3\xe4\x93\x02\x1a\x12\x18/v2/console/notification\x12g\n" +
	"\vListMatches\x12\".nakama.console.ListMatchesRequest\x1a\x19.nakama.console.MatchList\"\x19\x82\xd3\xe4\x93\x02\x13\x12\x11/v2/console/match\x12m\n" +
	"\rListPurchases\x12$.nakama.console.ListPurchasesRequest\x1a\x18.nakama.api.PurchaseList\"\x1c\x82\xd3\xe4\x93\x02\x16\x12\x14/v2/console/purchase\x12}\n" +
	"\x11ListSubscriptions\x12(.nakama.console.ListSubscriptionsRequest\x1a\x1c.nakama.api.SubscriptionList\" \x82\xd3\xe4\x93\x02\x1a\x12\x18/v2/console/subscription\x12W\n" +
	"\tListUsers\x12\x16.google.protobuf.Empty\x1a\x18.nakama.console.UserList\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/v2/console/user\x12\x94\x01\n" +
	"\x12PromoteGroupMember\x12+.nakama.console.UpdateGroupUserStateRequest\x1a\x16.google.protobuf.Empty\"9\x82\xd3\xe4\x93\x023\"1/v2/console/group/{group_id}/account/{id}/promote\x12\x83\x01\n" +
	"\x0eRequireUserMfa\x12%.nakama.console.RequireUserMfaRequest\x1a\x16.google.protobuf.Empty\"2\x82\xd3\xe4\x93\x02,:\x01*\"'/v2/console/user/{username}/mfa/require\x12z\n" +
	"\fResetUserMfa\x12#.nakama.console.ResetUserMfaRequest\x1a\x16.google.protobuf.Empty\"-\x82\xd3\xe4\x93\x02'\"%/v2/console/user/{username}/mfa/reset\x12i\n" +
	"\fUnbanAccount\x12\x19.nakama.console.AccountId\x1a\x16.google.protobuf.Empty\"&\x82\xd3\xe4\x93\x02 \"\x1e/v2/console/account/{id}/unban\x12q\n" +
	"\fUnlinkCustom\x12\x19.nakama.console.AccountId\x1a\x16.google.protobuf.Empty\".\x82\xd3\xe4\x93\x02(\"&/v2/console/account/{id}/unlink/custom\x12~\n" +
	"\fUnlinkDevice\x12#.nakama.console.UnlinkDeviceRequest\x1a\x16.google.protobuf.Empty\"1\x82\xd3\xe4\x93\x02+:\x01*\"&/v2/console/account/{id}/unlink/device\x12o\n" +
	"\vUnlinkEmail\x12\x19.nakama.console.AccountId\x1a\x16.google.protobuf.Empty\"-\x82\xd3\xe4\x93\x02'\"%/v2/console/account/{id}/unlink/email\x12o\n" +
	"\vUnlinkApple\x12\x19.nakama.console.AccountId\x1a\x16.google.protobuf.Empty\"-\x82\xd3\xe4\x93\x02'\"%/v2/console/account/{id}/unlink/apple\x12u\n" +
	"\x0eUnlinkFacebook\x12\x19.nakama.console.AccountId\x1a\x16.google.protobuf.Empty\"0\x82\xd3\xe4\x93\x02*\"(/v2/console/account/{id}/unlink/facebook\x12\x8b\x01\n" +
	"\x19UnlinkFacebookInstantGame\x12\x19.nakama.console.AccountId\x1a\x16.google.protobuf.Empty\";\x82\xd3\xe4\x93\x025\"3/v2/console/account/{id}/unlink/facebookinstantgame\x12y\n" +
	"\x10UnlinkGameCenter\x12\x19.nakama.console.AccountId\x1a\x16.google.protobuf.Empty\"2\x82\xd3\xe4\x93\x02,\"*/v2/console/account/{id}/unlink/gamecenter\x12q\n" +
	"\fUnlinkGoogle\x12\x19.nakama.console.AccountId\x1a\x16.google.protobuf.Empty\".\x82\xd3\xe4\x93\x02(\"&/v2/console/account/{id}/unlink/google\x12o\n" +
	"\vUnlinkSteam\x12\x19.nakama.console.AccountId\x1a\x16.google.protobuf.Empty\"-\x82\xd3\xe4\x93\x02'\"%/v2/console/account/{id}/unlink/steam\x12r\n" +
	"\rUpdateAccount\x12$.nakama.console.UpdateAccountRequest\x1a\x16.google.protobuf.Empty\"#\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/v2/console/account/{id}\x12l\n" +
	"\vUpdateGroup\x12\".nakama.console.UpdateGroupRequest\x1a\x16.google.protobuf.Empty\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/v2/console/group/{id}\x12u\n" +
	"\rUpdateSetting\x12$.nakama.console.UpdateSettingRequest\x1a\x17.nakama.console.Setting\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/v2/console/setting/{name}\x12\x9a\x01\n" +
	"\x12WriteStorageObject\x12).nakama.console.WriteStorageObjectRequest\x1a\x1c.nakama.api.StorageObjectAck\";\x82\xd3\xe4\x93\x025:\x01*\x1a0/v2/console/storage/{collection}/{key}/{user_id}B\xed\x02\x92A\xc0\x02\x12}\n" +
	"\x15Nakama console API v2\"_\n" +
	"!The Nakama Authors & Contributors\x12$https://github.com/heroiclabs/nakama\x1a\x14hello@heroiclabs.com2\x032.0\x1a\x0e127.0.0.1:7351*\x01\x012\x10application/json:\x10application/jsonZ3\n" +
	"\x0f\n" +
	"\tBasicAuth\x12\x02\b\x01\n" +
	" \n" +
	"\tBearerJwt\x12\x13\b\x02\x1a\rAuthorization \x02b\x0f\n" +
	"\r\n" +
	"\tBearerJwt\x12\x00rB\n" +
	"#Nakama server console documentation\x12\x1bhttps://heroiclabs.com/docsZ'github.com/heroiclabs/nakama/v3/consoleb\x06proto3"

var (
	file_console_proto_rawDescOnce sync.Once
	file_console_proto_rawDescData []byte
)

func file_console_proto_rawDescGZIP() []byte {
	file_console_proto_rawDescOnce.Do(func() {
		file_console_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_console_proto_rawDesc), len(file_console_proto_rawDesc)))
	})
	return file_console_proto_rawDescData
}

var file_console_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_console_proto_msgTypes = make([]protoimpl.MessageInfo, 78)
var file_console_proto_goTypes = []any{
	(UserRole)(0),                             // 0: nakama.console.UserRole
	(StatusHealth)(0),                         // 1: nakama.console.StatusHealth
	(ListChannelMessagesRequest_Type)(0),      // 2: nakama.console.ListChannelMessagesRequest.Type
	(*ApiEndpointDescriptor)(nil),             // 3: nakama.console.ApiEndpointDescriptor
	(*Account)(nil),                           // 4: nakama.console.Account
	(*AccountDeleteRequest)(nil),              // 5: nakama.console.AccountDeleteRequest
	(*AccountExport)(nil),                     // 6: nakama.console.AccountExport
	(*AccountId)(nil),                         // 7: nakama.console.AccountId
	(*AccountList)(nil),                       // 8: nakama.console.AccountList
	(*GroupId)(nil),                           // 9: nakama.console.GroupId
	(*GroupList)(nil),                         // 10: nakama.console.GroupList
	(*GroupExport)(nil),                       // 11: nakama.console.GroupExport
	(*MatchList)(nil),                         // 12: nakama.console.MatchList
	(*AddUserRequest)(nil),                    // 13: nakama.console.AddUserRequest
	(*AddGroupUsersRequest)(nil),              // 14: nakama.console.AddGroupUsersRequest
	(*ApiEndpointList)(nil),                   // 15: nakama.console.ApiEndpointList
	(*AuthenticateRequest)(nil),               // 16: nakama.console.AuthenticateRequest
	(*AuthenticateMFASetupRequest)(nil),       // 17: nakama.console.AuthenticateMFASetupRequest
	(*AuthenticateMFASetupResponse)(nil),      // 18: nakama.console.AuthenticateMFASetupResponse
	(*AuthenticateLogoutRequest)(nil),         // 19: nakama.console.AuthenticateLogoutRequest
	(*CallApiEndpointRequest)(nil),            // 20: nakama.console.CallApiEndpointRequest
	(*CallApiEndpointResponse)(nil),           // 21: nakama.console.CallApiEndpointResponse
	(*Config)(nil),                            // 22: nakama.console.Config
	(*ConsoleSession)(nil),                    // 23: nakama.console.ConsoleSession
	(*DeleteChannelMessagesRequest)(nil),      // 24: nakama.console.DeleteChannelMessagesRequest
	(*DeleteFriendRequest)(nil),               // 25: nakama.console.DeleteFriendRequest
	(*DeleteGroupRequest)(nil),                // 26: nakama.console.DeleteGroupRequest
	(*DeleteGroupUserRequest)(nil),            // 27: nakama.console.DeleteGroupUserRequest
	(*UpdateGroupUserStateRequest)(nil),       // 28: nakama.console.UpdateGroupUserStateRequest
	(*ResetUserMfaRequest)(nil),               // 29: nakama.console.ResetUserMfaRequest
	(*RequireUserMfaRequest)(nil),             // 30: nakama.console.RequireUserMfaRequest
	(*DeleteLeaderboardRecordRequest)(nil),    // 31: nakama.console.DeleteLeaderboardRecordRequest
	(*DeleteNotificationRequest)(nil),         // 32: nakama.console.DeleteNotificationRequest
	(*DeleteStorageObjectRequest)(nil),        // 33: nakama.console.DeleteStorageObjectRequest
	(*DeleteWalletLedgerRequest)(nil),         // 34: nakama.console.DeleteWalletLedgerRequest
	(*Leaderboard)(nil),                       // 35: nakama.console.Leaderboard
	(*LeaderboardListRequest)(nil),            // 36: nakama.console.LeaderboardListRequest
	(*LeaderboardList)(nil),                   // 37: nakama.console.LeaderboardList
	(*LeaderboardRequest)(nil),                // 38: nakama.console.LeaderboardRequest
	(*ListAccountsRequest)(nil),               // 39: nakama.console.ListAccountsRequest
	(*ListChannelMessagesRequest)(nil),        // 40: nakama.console.ListChannelMessagesRequest
	(*ListGroupsRequest)(nil),                 // 41: nakama.console.ListGroupsRequest
	(*ListMatchesRequest)(nil),                // 42: nakama.console.ListMatchesRequest
	(*ListNotificationsRequest)(nil),          // 43: nakama.console.ListNotificationsRequest
	(*ListPurchasesRequest)(nil),              // 44: nakama.console.ListPurchasesRequest
	(*ListSubscriptionsRequest)(nil),          // 45: nakama.console.ListSubscriptionsRequest
	(*ListStorageRequest)(nil),                // 46: nakama.console.ListStorageRequest
	(*MatchState)(nil),                        // 47: nakama.console.MatchState
	(*MatchStateRequest)(nil),                 // 48: nakama.console.MatchStateRequest
	(*Notification)(nil),                      // 49: nakama.console.Notification
	(*NotificationList)(nil),                  // 50: nakama.console.NotificationList
	(*DeleteChannelMessagesResponse)(nil),     // 51: nakama.console.DeleteChannelMessagesResponse
	(*StorageList)(nil),                       // 52: nakama.console.StorageList
	(*StorageCollectionsList)(nil),            // 53: nakama.console.StorageCollectionsList
	(*UnlinkDeviceRequest)(nil),               // 54: nakama.console.UnlinkDeviceRequest
	(*UpdateAccountRequest)(nil),              // 55: nakama.console.UpdateAccountRequest
	(*UpdateGroupRequest)(nil),                // 56: nakama.console.UpdateGroupRequest
	(*Username)(nil),                          // 57: nakama.console.Username
	(*UserList)(nil),                          // 58: nakama.console.UserList
	(*StatusList)(nil),                        // 59: nakama.console.StatusList
	(*RuntimeInfo)(nil),                       // 60: nakama.console.RuntimeInfo
	(*WalletLedger)(nil),                      // 61: nakama.console.WalletLedger
	(*WalletLedgerList)(nil),                  // 62: nakama.console.WalletLedgerList
	(*WriteStorageObjectRequest)(nil),         // 63: nakama.console.WriteStorageObjectRequest
	(*GetWalletLedgerRequest)(nil),            // 64: nakama.console.GetWalletLedgerRequest
	(*GetNotificationRequest)(nil),            // 65: nakama.console.GetNotificationRequest
	(*GetPurchaseRequest)(nil),                // 66: nakama.console.GetPurchaseRequest
	(*GetSubscriptionRequest)(nil),            // 67: nakama.console.GetSubscriptionRequest
	(*StorageListObject)(nil),                 // 68: nakama.console.StorageListObject
	(*Setting)(nil),                           // 69: nakama.console.Setting
	(*SettingRequest)(nil),                    // 70: nakama.console.SettingRequest
	(*ListSettingsRequest)(nil),               // 71: nakama.console.ListSettingsRequest
	(*UpdateSettingRequest)(nil),              // 72: nakama.console.UpdateSettingRequest
	(*SettingList)(nil),                       // 73: nakama.console.SettingList
	(*MatchList_Match)(nil),                   // 74: nakama.console.MatchList.Match
	nil,                                       // 75: nakama.console.CallApiEndpointRequest.SessionVarsEntry
	(*Config_Warning)(nil),                    // 76: nakama.console.Config.Warning
	nil,                                       // 77: nakama.console.UpdateAccountRequest.DeviceIdsEntry
	(*UserList_User)(nil),                     // 78: nakama.console.UserList.User
	(*StatusList_Status)(nil),                 // 79: nakama.console.StatusList.Status
	(*RuntimeInfo_ModuleInfo)(nil),            // 80: nakama.console.RuntimeInfo.ModuleInfo
	(*api.Account)(nil),                       // 81: nakama.api.Account
	(*timestamppb.Timestamp)(nil),             // 82: google.protobuf.Timestamp
	(*wrapperspb.BoolValue)(nil),              // 83: google.protobuf.BoolValue
	(*api.StorageObject)(nil),                 // 84: nakama.api.StorageObject
	(*api.Friend)(nil),                        // 85: nakama.api.Friend
	(*api.Group)(nil),                         // 86: nakama.api.Group
	(*api.ChannelMessage)(nil),                // 87: nakama.api.ChannelMessage
	(*api.LeaderboardRecord)(nil),             // 88: nakama.api.LeaderboardRecord
	(*api.Notification)(nil),                  // 89: nakama.api.Notification
	(*api.User)(nil),                          // 90: nakama.api.User
	(*api.GroupUserList_GroupUser)(nil),       // 91: nakama.api.GroupUserList.GroupUser
	(*wrapperspb.StringValue)(nil),            // 92: google.protobuf.StringValue
	(*wrapperspb.Int32Value)(nil),             // 93: google.protobuf.Int32Value
	(*rtapi.UserPresence)(nil),                // 94: nakama.realtime.UserPresence
	(*api.Match)(nil),                         // 95: nakama.api.Match
	(*emptypb.Empty)(nil),                     // 96: google.protobuf.Empty
	(*api.ReadStorageObjectId)(nil),           // 97: nakama.api.ReadStorageObjectId
	(*api.ListLeaderboardRecordsRequest)(nil), // 98: nakama.api.ListLeaderboardRecordsRequest
	(*api.FriendList)(nil),                    // 99: nakama.api.FriendList
	(*api.GroupUserList)(nil),                 // 100: nakama.api.GroupUserList
	(*api.UserGroupList)(nil),                 // 101: nakama.api.UserGroupList
	(*api.ValidatedPurchase)(nil),             // 102: nakama.api.ValidatedPurchase
	(*api.ValidatedSubscription)(nil),         // 103: nakama.api.ValidatedSubscription
	(*api.LeaderboardRecordList)(nil),         // 104: nakama.api.LeaderboardRecordList
	(*api.ChannelMessageList)(nil),            // 105: nakama.api.ChannelMessageList
	(*api.PurchaseList)(nil),                  // 106: nakama.api.PurchaseList
	(*api.SubscriptionList)(nil),              // 107: nakama.api.SubscriptionList
	(*api.StorageObjectAck)(nil),              // 108: nakama.api.StorageObjectAck
}
var file_console_proto_depIdxs = []int32{
	81,  // 0: nakama.console.Account.account:type_name -> nakama.api.Account
	82,  // 1: nakama.console.Account.disable_time:type_name -> google.protobuf.Timestamp
	83,  // 2: nakama.console.AccountDeleteRequest.record_deletion:type_name -> google.protobuf.BoolValue
	81,  // 3: nakama.console.AccountExport.account:type_name -> nakama.api.Account
	84,  // 4: nakama.console.AccountExport.objects:type_name -> nakama.api.StorageObject
	85,  // 5: nakama.console.AccountExport.friends:type_name -> nakama.api.Friend
	86,  // 6: nakama.console.AccountExport.groups:type_name -> nakama.api.Group
	87,  // 7: nakama.console.AccountExport.messages:type_name -> nakama.api.ChannelMessage
	88,  // 8: nakama.console.AccountExport.leaderboard_records:type_name -> nakama.api.LeaderboardRecord
	89,  // 9: nakama.console.AccountExport.notifications:type_name -> nakama.api.Notification
	61,  // 10: nakama.console.AccountExport.wallet_ledgers:type_name -> nakama.console.WalletLedger
	90,  // 11: nakama.console.AccountList.users:type_name -> nakama.api.User
	86,  // 12: nakama.console.GroupList.groups:type_name -> nakama.api.Group
	86,  // 13: nakama.console.GroupExport.group:type_name -> nakama.api.Group
	91,  // 14: nakama.console.GroupExport.members:type_name -> nakama.api.GroupUserList.GroupUser
	74,  // 15: nakama.console.MatchList.matches:type_name -> nakama.console.MatchList.Match
	0,   // 16: nakama.console.AddUserRequest.role:type_name -> nakama.console.UserRole
	3,   // 17: nakama.console.ApiEndpointList.endpoints:type_name -> nakama.console.ApiEndpointDescriptor
	3,   // 18: nakama.console.ApiEndpointList.rpc_endpoints:type_name -> nakama.console.ApiEndpointDescriptor
	75,  // 19: nakama.console.CallApiEndpointRequest.session_vars:type_name -> nakama.console.CallApiEndpointRequest.SessionVarsEntry
	76,  // 20: nakama.console.Config.warnings:type_name -> nakama.console.Config.Warning
	92,  // 21: nakama.console.ConsoleSession.mfa_code:type_name -> google.protobuf.StringValue
	82,  // 22: nakama.console.DeleteChannelMessagesRequest.before:type_name -> google.protobuf.Timestamp
	82,  // 23: nakama.console.Leaderboard.create_time:type_name -> google.protobuf.Timestamp
	82,  // 24: nakama.console.Leaderboard.start_time:type_name -> google.protobuf.Timestamp
	82,  // 25: nakama.console.Leaderboard.end_time:type_name -> google.protobuf.Timestamp
	35,  // 26: nakama.console.LeaderboardList.leaderboards:type_name -> nakama.console.Leaderboard
	2,   // 27: nakama.console.ListChannelMessagesRequest.type:type_name -> nakama.console.ListChannelMessagesRequest.Type
	93,  // 28: nakama.console.ListMatchesRequest.limit:type_name -> google.protobuf.Int32Value
	83,  // 29: nakama.console.ListMatchesRequest.authoritative:type_name -> google.protobuf.BoolValue
	92,  // 30: nakama.console.ListMatchesRequest.label:type_name -> google.protobuf.StringValue
	93,  // 31: nakama.console.ListMatchesRequest.min_size:type_name -> google.protobuf.Int32Value
	93,  // 32: nakama.console.ListMatchesRequest.max_size:type_name -> google.protobuf.Int32Value
	92,  // 33: nakama.console.ListMatchesRequest.query:type_name -> google.protobuf.StringValue
	92,  // 34: nakama.console.ListMatchesRequest.node:type_name -> google.protobuf.StringValue
	94,  // 35: nakama.console.MatchState.presences:type_name -> nakama.realtime.UserPresence
	82,  // 36: nakama.console.Notification.create_time:type_name -> google.protobuf.Timestamp
	49,  // 37: nakama.console.NotificationList.notifications:type_name -> nakama.console.Notification
	68,  // 38: nakama.console.StorageList.objects:type_name -> nakama.console.StorageListObject
	92,  // 39: nakama.console.UpdateAccountRequest.username:type_name -> google.protobuf.StringValue
	92,  // 40: nakama.console.UpdateAccountRequest.display_name:type_name -> google.protobuf.StringValue
	92,  // 41: nakama.console.UpdateAccountRequest.metadata:type_name -> google.protobuf.StringValue
	92,  // 42: nakama.console.UpdateAccountRequest.avatar_url:type_name -> google.protobuf.StringValue
	92,  // 43: nakama.console.UpdateAccountRequest.lang_tag:type_name -> google.protobuf.StringValue
	92,  // 44: nakama.console.UpdateAccountRequest.location:type_name -> google.protobuf.StringValue
	92,  // 45: nakama.console.UpdateAccountRequest.timezone:type_name -> google.protobuf.StringValue
	92,  // 46: nakama.console.UpdateAccountRequest.custom_id:type_name -> google.protobuf.StringValue
	92,  // 47: nakama.console.UpdateAccountRequest.email:type_name -> google.protobuf.StringValue
	92,  // 48: nakama.console.UpdateAccountRequest.password:type_name -> google.protobuf.StringValue
	77,  // 49: nakama.console.UpdateAccountRequest.device_ids:type_name -> nakama.console.UpdateAccountRequest.DeviceIdsEntry
	92,  // 50: nakama.console.UpdateAccountRequest.wallet:type_name -> google.protobuf.StringValue
	92,  // 51: nakama.console.UpdateGroupRequest.name:type_name -> google.protobuf.StringValue
	92,  // 52: nakama.console.UpdateGroupRequest.description:type_name -> google.protobuf.StringValue
	92,  // 53: nakama.console.UpdateGroupRequest.lang_tag:type_name -> google.protobuf.StringValue
	92,  // 54: nakama.console.UpdateGroupRequest.metadata:type_name -> google.protobuf.StringValue
	92,  // 55: nakama.console.UpdateGroupRequest.avatar_url:type_name -> google.protobuf.StringValue
	83,  // 56: nakama.console.UpdateGroupRequest.open:type_name -> google.protobuf.BoolValue
	93,  // 57: nakama.console.UpdateGroupRequest.max_count:type_name -> google.protobuf.Int32Value
	78,  // 58: nakama.console.UserList.users:type_name -> nakama.console.UserList.User
	79,  // 59: nakama.console.StatusList.nodes:type_name -> nakama.console.StatusList.Status
	82,  // 60: nakama.console.StatusList.timestamp:type_name -> google.protobuf.Timestamp
	80,  // 61: nakama.console.RuntimeInfo.go_modules:type_name -> nakama.console.RuntimeInfo.ModuleInfo
	80,  // 62: nakama.console.RuntimeInfo.lua_modules:type_name -> nakama.console.RuntimeInfo.ModuleInfo
	80,  // 63: nakama.console.RuntimeInfo.js_modules:type_name -> nakama.console.RuntimeInfo.ModuleInfo
	82,  // 64: nakama.console.WalletLedger.create_time:type_name -> google.protobuf.Timestamp
	82,  // 65: nakama.console.WalletLedger.update_time:type_name -> google.protobuf.Timestamp
	61,  // 66: nakama.console.WalletLedgerList.items:type_name -> nakama.console.WalletLedger
	93,  // 67: nakama.console.WriteStorageObjectRequest.permission_read:type_name -> google.protobuf.Int32Value
	93,  // 68: nakama.console.WriteStorageObjectRequest.permission_write:type_name -> google.protobuf.Int32Value
	82,  // 69: nakama.console.StorageListObject.create_time:type_name -> google.protobuf.Timestamp
	82,  // 70: nakama.console.StorageListObject.update_time:type_name -> google.protobuf.Timestamp
	69,  // 71: nakama.console.SettingList.settings:type_name -> nakama.console.Setting
	95,  // 72: nakama.console.MatchList.Match.api_match:type_name -> nakama.api.Match
	0,   // 73: nakama.console.UserList.User.role:type_name -> nakama.console.UserRole
	1,   // 74: nakama.console.StatusList.Status.health:type_name -> nakama.console.StatusHealth
	82,  // 75: nakama.console.RuntimeInfo.ModuleInfo.mod_time:type_name -> google.protobuf.Timestamp
	16,  // 76: nakama.console.Console.Authenticate:input_type -> nakama.console.AuthenticateRequest
	19,  // 77: nakama.console.Console.AuthenticateLogout:input_type -> nakama.console.AuthenticateLogoutRequest
	17,  // 78: nakama.console.Console.AuthenticateMFASetup:input_type -> nakama.console.AuthenticateMFASetupRequest
	13,  // 79: nakama.console.Console.AddUser:input_type -> nakama.console.AddUserRequest
	14,  // 80: nakama.console.Console.AddGroupUsers:input_type -> nakama.console.AddGroupUsersRequest
	7,   // 81: nakama.console.Console.BanAccount:input_type -> nakama.console.AccountId
	20,  // 82: nakama.console.Console.CallApiEndpoint:input_type -> nakama.console.CallApiEndpointRequest
	20,  // 83: nakama.console.Console.CallRpcEndpoint:input_type -> nakama.console.CallApiEndpointRequest
	96,  // 84: nakama.console.Console.DeleteAllData:input_type -> google.protobuf.Empty
	5,   // 85: nakama.console.Console.DeleteAccount:input_type -> nakama.console.AccountDeleteRequest
	24,  // 86: nakama.console.Console.DeleteChannelMessages:input_type -> nakama.console.DeleteChannelMessagesRequest
	25,  // 87: nakama.console.Console.DeleteFriend:input_type -> nakama.console.DeleteFriendRequest
	26,  // 88: nakama.console.Console.DeleteGroup:input_type -> nakama.console.DeleteGroupRequest
	27,  // 89: nakama.console.Console.DeleteGroupUser:input_type -> nakama.console.DeleteGroupUserRequest
	96,  // 90: nakama.console.Console.DeleteStorage:input_type -> google.protobuf.Empty
	33,  // 91: nakama.console.Console.DeleteStorageObject:input_type -> nakama.console.DeleteStorageObjectRequest
	96,  // 92: nakama.console.Console.DeleteAccounts:input_type -> google.protobuf.Empty
	38,  // 93: nakama.console.Console.DeleteLeaderboard:input_type -> nakama.console.LeaderboardRequest
	31,  // 94: nakama.console.Console.DeleteLeaderboardRecord:input_type -> nakama.console.DeleteLeaderboardRecordRequest
	32,  // 95: nakama.console.Console.DeleteNotification:input_type -> nakama.console.DeleteNotificationRequest
	57,  // 96: nakama.console.Console.DeleteUser:input_type -> nakama.console.Username
	34,  // 97: nakama.console.Console.DeleteWalletLedger:input_type -> nakama.console.DeleteWalletLedgerRequest
	28,  // 98: nakama.console.Console.DemoteGroupMember:input_type -> nakama.console.UpdateGroupUserStateRequest
	7,   // 99: nakama.console.Console.ExportAccount:input_type -> nakama.console.AccountId
	9,   // 100: nakama.console.Console.ExportGroup:input_type -> nakama.console.GroupId
	7,   // 101: nakama.console.Console.GetAccount:input_type -> nakama.console.AccountId
	96,  // 102: nakama.console.Console.GetConfig:input_type -> google.protobuf.Empty
	7,   // 103: nakama.console.Console.GetFriends:input_type -> nakama.console.AccountId
	9,   // 104: nakama.console.Console.GetGroup:input_type -> nakama.console.GroupId
	9,   // 105: nakama.console.Console.GetMembers:input_type -> nakama.console.GroupId
	7,   // 106: nakama.console.Console.GetGroups:input_type -> nakama.console.AccountId
	38,  // 107: nakama.console.Console.GetLeaderboard:input_type -> nakama.console.LeaderboardRequest
	48,  // 108: nakama.console.Console.GetMatchState:input_type -> nakama.console.MatchStateRequest
	96,  // 109: nakama.console.Console.GetRuntime:input_type -> google.protobuf.Empty
	70,  // 110: nakama.console.Console.GetSetting:input_type -> nakama.console.SettingRequest
	96,  // 111: nakama.console.Console.GetStatus:input_type -> google.protobuf.Empty
	97,  // 112: nakama.console.Console.GetStorage:input_type -> nakama.api.ReadStorageObjectId
	64,  // 113: nakama.console.Console.GetWalletLedger:input_type -> nakama.console.GetWalletLedgerRequest
	65,  // 114: nakama.console.Console.GetNotification:input_type -> nakama.console.GetNotificationRequest
	66,  // 115: nakama.console.Console.GetPurchase:input_type -> nakama.console.GetPurchaseRequest
	67,  // 116: nakama.console.Console.GetSubscription:input_type -> nakama.console.GetSubscriptionRequest
	96,  // 117: nakama.console.Console.ListApiEndpoints:input_type -> google.protobuf.Empty
	98,  // 118: nakama.console.Console.ListLeaderboardRecords:input_type -> nakama.api.ListLeaderboardRecordsRequest
	36,  // 119: nakama.console.Console.ListLeaderboards:input_type -> nakama.console.LeaderboardListRequest
	71,  // 120: nakama.console.Console.ListSettings:input_type -> nakama.console.ListSettingsRequest
	46,  // 121: nakama.console.Console.ListStorage:input_type -> nakama.console.ListStorageRequest
	96,  // 122: nakama.console.Console.ListStorageCollections:input_type -> google.protobuf.Empty
	39,  // 123: nakama.console.Console.ListAccounts:input_type -> nakama.console.ListAccountsRequest
	40,  // 124: nakama.console.Console.ListChannelMessages:input_type -> nakama.console.ListChannelMessagesRequest
	41,  // 125: nakama.console.Console.ListGroups:input_type -> nakama.console.ListGroupsRequest
	43,  // 126: nakama.console.Console.ListNotifications:input_type -> nakama.console.ListNotificationsRequest
	42,  // 127: nakama.console.Console.ListMatches:input_type -> nakama.console.ListMatchesRequest
	44,  // 128: nakama.console.Console.ListPurchases:input_type -> nakama.console.ListPurchasesRequest
	45,  // 129: nakama.console.Console.ListSubscriptions:input_type -> nakama.console.ListSubscriptionsRequest
	96,  // 130: nakama.console.Console.ListUsers:input_type -> google.protobuf.Empty
	28,  // 131: nakama.console.Console.PromoteGroupMember:input_type -> nakama.console.UpdateGroupUserStateRequest
	30,  // 132: nakama.console.Console.RequireUserMfa:input_type -> nakama.console.RequireUserMfaRequest
	29,  // 133: nakama.console.Console.ResetUserMfa:input_type -> nakama.console.ResetUserMfaRequest
	7,   // 134: nakama.console.Console.UnbanAccount:input_type -> nakama.console.AccountId
	7,   // 135: nakama.console.Console.UnlinkCustom:input_type -> nakama.console.AccountId
	54,  // 136: nakama.console.Console.UnlinkDevice:input_type -> nakama.console.UnlinkDeviceRequest
	7,   // 137: nakama.console.Console.UnlinkEmail:input_type -> nakama.console.AccountId
	7,   // 138: nakama.console.Console.UnlinkApple:input_type -> nakama.console.AccountId
	7,   // 139: nakama.console.Console.UnlinkFacebook:input_type -> nakama.console.AccountId
	7,   // 140: nakama.console.Console.UnlinkFacebookInstantGame:input_type -> nakama.console.AccountId
	7,   // 141: nakama.console.Console.UnlinkGameCenter:input_type -> nakama.console.AccountId
	7,   // 142: nakama.console.Console.UnlinkGoogle:input_type -> nakama.console.AccountId
	7,   // 143: nakama.console.Console.UnlinkSteam:input_type -> nakama.console.AccountId
	55,  // 144: nakama.console.Console.UpdateAccount:input_type -> nakama.console.UpdateAccountRequest
	56,  // 145: nakama.console.Console.UpdateGroup:input_type -> nakama.console.UpdateGroupRequest
	72,  // 146: nakama.console.Console.UpdateSetting:input_type -> nakama.console.UpdateSettingRequest
	63,  // 147: nakama.console.Console.WriteStorageObject:input_type -> nakama.console.WriteStorageObjectRequest
	23,  // 148: nakama.console.Console.Authenticate:output_type -> nakama.console.ConsoleSession
	96,  // 149: nakama.console.Console.AuthenticateLogout:output_type -> google.protobuf.Empty
	18,  // 150: nakama.console.Console.AuthenticateMFASetup:output_type -> nakama.console.AuthenticateMFASetupResponse
	96,  // 151: nakama.console.Console.AddUser:output_type -> google.protobuf.Empty
	96,  // 152: nakama.console.Console.AddGroupUsers:output_type -> google.protobuf.Empty
	96,  // 153: nakama.console.Console.BanAccount:output_type -> google.protobuf.Empty
	21,  // 154: nakama.console.Console.CallApiEndpoint:output_type -> nakama.console.CallApiEndpointResponse
	21,  // 155: nakama.console.Console.CallRpcEndpoint:output_type -> nakama.console.CallApiEndpointResponse
	96,  // 156: nakama.console.Console.DeleteAllData:output_type -> google.protobuf.Empty
	96,  // 157: nakama.console.Console.DeleteAccount:output_type -> google.protobuf.Empty
	51,  // 158: nakama.console.Console.DeleteChannelMessages:output_type -> nakama.console.DeleteChannelMessagesResponse
	96,  // 159: nakama.console.Console.DeleteFriend:output_type -> google.protobuf.Empty
	96,  // 160: nakama.console.Console.DeleteGroup:output_type -> google.protobuf.Empty
	96,  // 161: nakama.console.Console.DeleteGroupUser:output_type -> google.protobuf.Empty
	96,  // 162: nakama.console.Console.DeleteStorage:output_type -> google.protobuf.Empty
	96,  // 163: nakama.console.Console.DeleteStorageObject:output_type -> google.protobuf.Empty
	96,  // 164: nakama.console.Console.DeleteAccounts:output_type -> google.protobuf.Empty
	96,  // 165: nakama.console.Console.DeleteLeaderboard:output_type -> google.protobuf.Empty
	96,  // 166: nakama.console.Console.DeleteLeaderboardRecord:output_type -> google.protobuf.Empty
	96,  // 167: nakama.console.Console.DeleteNotification:output_type -> google.protobuf.Empty
	96,  // 168: nakama.console.Console.DeleteUser:output_type -> google.protobuf.Empty
	96,  // 169: nakama.console.Console.DeleteWalletLedger:output_type -> google.protobuf.Empty
	96,  // 170: nakama.console.Console.DemoteGroupMember:output_type -> google.protobuf.Empty
	6,   // 171: nakama.console.Console.ExportAccount:output_type -> nakama.console.AccountExport
	11,  // 172: nakama.console.Console.ExportGroup:output_type -> nakama.console.GroupExport
	4,   // 173: nakama.console.Console.GetAccount:output_type -> nakama.console.Account
	22,  // 174: nakama.console.Console.GetConfig:output_type -> nakama.console.Config
	99,  // 175: nakama.console.Console.GetFriends:output_type -> nakama.api.FriendList
	86,  // 176: nakama.console.Console.GetGroup:output_type -> nakama.api.Group
	100, // 177: nakama.console.Console.GetMembers:output_type -> nakama.api.GroupUserList
	101, // 178: nakama.console.Console.GetGroups:output_type -> nakama.api.UserGroupList
	35,  // 179: nakama.console.Console.GetLeaderboard:output_type -> nakama.console.Leaderboard
	47,  // 180: nakama.console.Console.GetMatchState:output_type -> nakama.console.MatchState
	60,  // 181: nakama.console.Console.GetRuntime:output_type -> nakama.console.RuntimeInfo
	69,  // 182: nakama.console.Console.GetSetting:output_type -> nakama.console.Setting
	59,  // 183: nakama.console.Console.GetStatus:output_type -> nakama.console.StatusList
	84,  // 184: nakama.console.Console.GetStorage:output_type -> nakama.api.StorageObject
	62,  // 185: nakama.console.Console.GetWalletLedger:output_type -> nakama.console.WalletLedgerList
	49,  // 186: nakama.console.Console.GetNotification:output_type -> nakama.console.Notification
	102, // 187: nakama.console.Console.GetPurchase:output_type -> nakama.api.ValidatedPurchase
	103, // 188: nakama.console.Console.GetSubscription:output_type -> nakama.api.ValidatedSubscription
	15,  // 189: nakama.console.Console.ListApiEndpoints:output_type -> nakama.console.ApiEndpointList
	104, // 190: nakama.console.Console.ListLeaderboardRecords:output_type -> nakama.api.LeaderboardRecordList
	37,  // 191: nakama.console.Console.ListLeaderboards:output_type -> nakama.console.LeaderboardList
	73,  // 192: nakama.console.Console.ListSettings:output_type -> nakama.console.SettingList
	52,  // 193: nakama.console.Console.ListStorage:output_type -> nakama.console.StorageList
	53,  // 194: nakama.console.Console.ListStorageCollections:output_type -> nakama.console.StorageCollectionsList
	8,   // 195: nakama.console.Console.ListAccounts:output_type -> nakama.console.AccountList
	105, // 196: nakama.console.Console.ListChannelMessages:output_type -> nakama.api.ChannelMessageList
	10,  // 197: nakama.console.Console.ListGroups:output_type -> nakama.console.GroupList
	50,  // 198: nakama.console.Console.ListNotifications:output_type -> nakama.console.NotificationList
	12,  // 199: nakama.console.Console.ListMatches:output_type -> nakama.console.MatchList
	106, // 200: nakama.console.Console.ListPurchases:output_type -> nakama.api.PurchaseList
	107, // 201: nakama.console.Console.ListSubscriptions:output_type -> nakama.api.SubscriptionList
	58,  // 202: nakama.console.Console.ListUsers:output_type -> nakama.console.UserList
	96,  // 203: nakama.console.Console.PromoteGroupMember:output_type -> google.protobuf.Empty
	96,  // 204: nakama.console.Console.RequireUserMfa:output_type -> google.protobuf.Empty
	96,  // 205: nakama.console.Console.ResetUserMfa:output_type -> google.protobuf.Empty
	96,  // 206: nakama.console.Console.UnbanAccount:output_type -> google.protobuf.Empty
	96,  // 207: nakama.console.Console.UnlinkCustom:output_type -> google.protobuf.Empty
	96,  // 208: nakama.console.Console.UnlinkDevice:output_type -> google.protobuf.Empty
	96,  // 209: nakama.console.Console.UnlinkEmail:output_type -> google.protobuf.Empty
	96,  // 210: nakama.console.Console.UnlinkApple:output_type -> google.protobuf.Empty
	96,  // 211: nakama.console.Console.UnlinkFacebook:output_type -> google.protobuf.Empty
	96,  // 212: nakama.console.Console.UnlinkFacebookInstantGame:output_type -> google.protobuf.Empty
	96,  // 213: nakama.console.Console.UnlinkGameCenter:output_type -> google.protobuf.Empty
	96,  // 214: nakama.console.Console.UnlinkGoogle:output_type -> google.protobuf.Empty
	96,  // 215: nakama.console.Console.UnlinkSteam:output_type -> google.protobuf.Empty
	96,  // 216: nakama.console.Console.UpdateAccount:output_type -> google.protobuf.Empty
	96,  // 217: nakama.console.Console.UpdateGroup:output_type -> google.protobuf.Empty
	69,  // 218: nakama.console.Console.UpdateSetting:output_type -> nakama.console.Setting
	108, // 219: nakama.console.Console.WriteStorageObject:output_type -> nakama.api.StorageObjectAck
	148, // [148:220] is the sub-list for method output_type
	76,  // [76:148] is the sub-list for method input_type
	76,  // [76:76] is the sub-list for extension type_name
	76,  // [76:76] is the sub-list for extension extendee
	0,   // [0:76] is the sub-list for field type_name
}

func init() { file_console_proto_init() }
func file_console_proto_init() {
	if File_console_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_console_proto_rawDesc), len(file_console_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   78,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_console_proto_goTypes,
		DependencyIndexes: file_console_proto_depIdxs,
		EnumInfos:         file_console_proto_enumTypes,
		MessageInfos:      file_console_proto_msgTypes,
	}.Build()
	File_console_proto = out.File
	file_console_proto_goTypes = nil
	file_console_proto_depIdxs = nil
}
